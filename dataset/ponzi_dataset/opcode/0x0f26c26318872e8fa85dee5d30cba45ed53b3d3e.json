# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label11)
0x65	PUSH(:label12)
0x6B	JUMP(:label9)

:label1
# Stack: [@0x13]
0x6D	PUSH(:label11)
0x72	PUSH(CALLDATALOAD(0x4))
0x75	PUSH(SLOAD(0x4))
0x7D	PUSH(0x2 ** 0xA0 - 0x1)
0x7E	SWAP1
0x7F	DUP2
0x80	PUSH(POP(@0x7D) & POP(@0x75))
0x81	PUSH(CALLER())
0x82	SWAP1
0x83	SWAP1
0x84	SWAP2
0x8B	JUMPI(:label2, !(POP(@0x81) & POP(@0x7D) == POP(@0x80)))

# Stack: [@0x72 :label11 @0x13]
0x8C	PUSH(0x4)
0x8E	DUP1
0x9A	DUP2
0x9B	PUSH(POP(@0x72) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0x9C	SWAP1
0x9D	SSTORE(POP(0x4), POP(@0x9B))

:label2
# Stack: [@0x72 :label11 @0x13]
0x9F	POP()
0xA0	JUMP(POP(:label11))

:label3
# Stack: [@0x13]
0xA2	PUSH(:label13)
0xB0	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0xB1	DUP2
0xB2	JUMP(POP(:label13))

:label4
# Stack: [@0x13]
0xB4	PUSH(:label14)
0xB9	PUSH(SLOAD(0x2))
0xBA	DUP2
0xBB	JUMP(POP(:label14))

:label5
# Stack: [@0x13]
0xBD	PUSH(:label15)
0xC2	PUSH(CALLDATALOAD(0x4))
0xC3	PUSH(0x0)
0xC5	DUP1
0xC6	PUSH(SLOAD(POP(0x0)))
0xC7	DUP2
0xC8	SWAP1
0xC9	DUP2
0xCF	JUMPI(0x2, !(POP(@0xC2) < POP(@0xC6)))

# Stack: [@0xC2 0x0 @0xC2 :label15 @0x13]
0xD0	POP()
0xD1	DUP1
0xD2	MSTORE(POP(0x0), POP(0x0))
0xD5	PUSH(0x2 * POP(@0xC2))
0xF7	DUP1
0xF9	PUSH(SLOAD(POP(@0xD5) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0xFA	PUSH(0x0)
0xFC	DUP1
0x103	DUP1
0x104	CODECOPY(POP(0x0), 0x403, 0x20)
0x105	DUP1
0x106	PUSH(MLOAD(POP(0x0)))
0x107	SWAP1
0x108	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x109	SWAP1
0x10A	SWAP1
0x10B	SWAP2
0x10D	PUSH(SLOAD(POP(@0x106) + POP(@0xD5)))
0x115	PUSH(0x2 ** 0xA0 - 0x1)
0x116	SWAP2
0x117	SWAP1
0x118	SWAP2
0x119	PUSH(POP(@0x115) & POP(@0xF9))
0x11A	SWAP1
0x11B	DUP3
0x11C	JUMP(POP(:label15))

:label6
# Stack: [@0x13]
0x11E	PUSH(:label14)
0x123	PUSH(SLOAD(0x1))
0x124	DUP2
0x125	JUMP(POP(:label14))

:label7
# Stack: [@0x13]
0x127	PUSH(:label14)
0x12C	PUSH(SLOAD(0x3))
0x12D	DUP2
0x12E	JUMP(POP(:label14))

:label8
# Stack: [@0x13]
0x130	PUSH(:label11)

:label9
# Stack: [[:label11 | :label12] [:label11 | @0x13]]
0x134	PUSH(0x0)
0x136	PUSH(0x0)
0x138	PUSH(0x0)
0x142	JUMPI(:label16, !(CALLVALUE() < 0x0))

# Stack: [0x0 0x0 0x0 [:label11 | :label12] [:label11 | @0x13]]
0x145	PUSH(MLOAD(0x40))
0x14F	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x150	SWAP1
0x151	DUP3
0x152	SWAP1
0x153	PUSH(CALLVALUE())
0x154	SWAP1
0x155	DUP3
0x156	DUP2
0x157	DUP2
0x158	DUP2
0x159	DUP6
0x15A	DUP9
0x15B	DUP4
0x15C	PUSH(CALL(POP(0x0), POP(@0x14F), POP(@0x153), POP(@0x145), POP(0x0), POP(@0x145), POP(0x0)))
0x15D	POP()
0x15E	POP()
0x15F	POP()
0x160	POP()
0x161	POP()

:label10
# Stack: [[0x0 | @0x39B] [0x0 | @0x216] [0x0 | 0x8AC7230489E80000 | @0x20F] [:label12 | :label11] [:label11 | @0x13]]
0x163	POP()
0x164	POP()
0x165	POP()
0x166	JUMP(POP())

:label11
# Stack: []
0x168	STOP()

:label12
# Stack: [:label11]
0x16A	JUMP(POP(:label11))

:label13
# Stack: [@0xB0 :label13 @0x13]
0x16C	PUSH(0x40)
0x16E	DUP1
0x16F	PUSH(MLOAD(POP(0x40)))
0x177	PUSH(0x2 ** 0xA0 - 0x1)
0x178	SWAP3
0x179	SWAP1
0x17A	SWAP3
0x17C	DUP2
0x17D	MSTORE(POP(@0x16F), POP(@0x177) & POP(@0xB0))
0x17E	PUSH(MLOAD(POP(0x40)))
0x17F	SWAP1
0x180	DUP2
0x181	SWAP1
0x185	PUSH(0x20 + POP(@0x16F) - POP(@0x17E))
0x186	SWAP1
0x187	RETURN(POP(@0x17E), POP(@0x185))

:label14
# Stack: [[@0x12C | @0x123 | @0xB9] [:label14 | :label14 | :label14] @0x13]
0x189	PUSH(0x40)
0x18B	DUP1
0x18C	PUSH(MLOAD(POP(0x40)))
0x18D	SWAP2
0x18E	DUP3
0x18F	MSTORE(POP(@0x18C), POP())
0x190	PUSH(MLOAD(POP(0x40)))
0x191	SWAP1
0x192	DUP2
0x193	SWAP1
0x197	PUSH(0x20 + POP(@0x18C) - POP(@0x190))
0x198	SWAP1
0x199	RETURN(POP(@0x190), POP(@0x197))

:label15
# Stack: [@0x10D @0x119 :label15 @0x13]
0x19D	PUSH(MLOAD(0x40))
0x19E	DUP1
0x19F	DUP4
0x1A9	DUP1
0x1AA	MSTORE(POP(@0x19D), 0x2 ** 0xA0 - 0x1 & POP(@0x119))
0x1AD	PUSH(0x20 + POP(@0x19D))
0x1AE	DUP3
0x1AF	DUP2
0x1B0	MSTORE(POP(@0x1AD), POP(@0x10D))
0x1B3	PUSH(0x20 + POP(@0x1AD))
0x1B4	SWAP3
0x1B5	POP()
0x1B6	POP()
0x1B7	POP()
0x1BA	PUSH(MLOAD(0x40))
0x1BB	DUP1
0x1BC	SWAP2
0x1BD	PUSH(POP(@0x1B3) - POP(@0x1BA))
0x1BE	SWAP1
0x1BF	RETURN(POP(@0x1BA), POP(@0x1BD))

:label16
# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x1D1	JUMPI(:label17, !(CALLVALUE() > 0x22B1C8C1227A00000))

# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x1D4	PUSH(MLOAD(0x40))
0x1DE	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x1DF	SWAP1
0x1E0	PUSH(0x0)
0x1E2	SWAP1
0x1EF	PUSH(CALLVALUE() + ~0x22B1C8C12279FFFFF)
0x1F0	SWAP1
0x1F1	DUP3
0x1F2	DUP2
0x1F3	DUP2
0x1F4	DUP2
0x1F5	DUP6
0x1F6	DUP9
0x1F7	DUP4
0x1F8	PUSH(CALL(POP(0x0), POP(@0x1DE), POP(@0x1EF), POP(@0x1D4), POP(0x0), POP(@0x1D4), POP(0x0)))
0x1F9	POP()
0x1FA	PUSH(0x8AC7230489E80000)
0x203	SWAP7
0x204	POP()
0x205	PUSH(:label18)
0x208	SWAP4
0x209	POP()
0x20A	POP()
0x20B	POP()
0x20C	POP()
0x20D	JUMP(POP(:label18))

:label17
# Stack: [0x0 0x0 0x0 [:label11 | :label12] [:label11 | @0x13]]
0x20F	PUSH(CALLVALUE())
0x210	SWAP3
0x211	POP()

:label18
# Stack: [0x0 0x0 [0x8AC7230489E80000 | @0x20F] [:label12 | :label11] [:label11 | @0x13]]
0x213	PUSH(0x0)
0x215	DUP1
0x216	PUSH(SLOAD(POP(0x0)))
0x219	DUP1
0x21A	PUSH(POP(@0x216) + 0x1)
0x21B	DUP1
0x21C	DUP4
0x21D	SSTORE(POP(0x0), POP(@0x21A))
0x21E	SWAP1
0x21F	SWAP4
0x220	POP()
0x221	SWAP1
0x222	DUP2
0x223	DUP5
0x224	DUP1
0x225	PUSH(!POP(@0x216))
0x226	DUP2
0x227	SWAP1
0x22C	JUMPI(:label20, POP(@0x225) > POP(@0x21A))

# Stack: [@0x216 @0x21A 0x0 @0x21A 0x0 @0x216 [0x8AC7230489E80000 | @0x20F] [:label11 | :label12] [:label11 | @0x13]]
0x22F	PUSH(0x2 * POP(@0x216))
0x230	DUP1
0x234	DUP2
0x237	MSTORE(0x0, POP(0x0))
0x23C	PUSH(SHA3(0x0, 0x20))
0x23D	SWAP1
0x23E	DUP2
0x23F	PUSH(POP(@0x23C) + POP(@0x22F))
0x240	SWAP1
0x241	PUSH(POP(@0x23C) + 0x2 * POP(@0x21A))
0x242	PUSH(:label20)
0x245	SWAP2
0x246	SWAP1

:label19
# Stack: [[@0x241 | @0x265] @0x23F :label20 @0x21A 0x0 @0x21A 0x0 @0x216 [0x8AC7230489E80000 | @0x20F] [:label12 | :label11] [@0x13 | :label11]]
0x248	DUP1
0x249	DUP3
0x24F	JUMPI(:label21, !(POP(@0x23F) > POP()))

# Stack: [[@0x241 | @0x265] @0x23F :label20 @0x21A 0x0 @0x21A 0x0 @0x216 [0x8AC7230489E80000 | @0x20F] [:label12 | :label11] [:label11 | @0x13]]
0x250	DUP1
0x25C	DUP1
0x25D	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x25E	PUSH(0x0)
0x260	PUSH(0x1)
0x262	SWAP1
0x263	SWAP1
0x264	SWAP2
0x265	PUSH(POP(0x1) + POP())
0x266	SWAP1
0x267	DUP2
0x268	SSTORE(POP(@0x265), POP(0x0))
0x26C	JUMP(:label19)

:label20
# Stack: [[@0x23F | @0x216] @0x21A 0x0 @0x21A 0x0 @0x216 [0x8AC7230489E80000 | @0x20F] [:label12 | :label11] [:label11 | @0x13]]
0x26E	POP()
0x26F	POP()
0x270	POP()
0x271	POP()
0x272	PUSH(CALLER())
0x273	PUSH(0x0)
0x277	POP(0x0)
0x278	DUP4
0x279	DUP2
0x27B	DUP1
0x281	JUMPI(0x2, !(POP(@0x216) < SLOAD(POP(0x0))))

# Stack: [@0x216 0x0 @0x272 0x0 @0x216 [0x8AC7230489E80000 | @0x20F] [:label11 | :label12] [:label11 | @0x13]]
0x282	DUP2
0x283	DUP1
0x284	MSTORE(POP(0x0), POP(0x0))
0x2A9	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x216))
0x2AA	DUP1
0x2B5	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2A9)))
0x2B6	SWAP1
0x2B7	SWAP3
0x2B8	PUSH(POP(@0x272) | POP(@0x2B5))
0x2B9	SWAP1
0x2BA	SWAP2
0x2BB	SSTORE(POP(@0x2A9), POP(@0x2B8))
0x2BC	DUP1
0x2BD	PUSH(SLOAD(POP(0x0)))
0x2BE	DUP4
0x2BF	SWAP1
0x2C0	SWAP1
0x2C1	DUP5
0x2C2	SWAP1
0x2C3	DUP2
0x2C9	JUMPI(0x2, !(POP(@0x216) < POP(@0x2BD)))

# Stack: [@0x216 0x0 [0x8AC7230489E80000 | @0x20F] 0x0 @0x216 [0x8AC7230489E80000 | @0x20F] [:label12 | :label11] [:label11 | @0x13]]
0x2CD	PUSH(0x0)
0x2CF	DUP1
0x2D6	DUP1
0x2D7	CODECOPY(POP(0x0), 0x403, 0x20)
0x2D8	DUP1
0x2D9	PUSH(MLOAD(POP(0x0)))
0x2DA	SWAP1
0x2DB	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2DC	PUSH(POP(@0x2D9) + 0x2 * POP(@0x216))
0x2DD	SWAP2
0x2DE	SWAP1
0x2DF	SWAP2
0x2E0	SSTORE(POP(@0x2DC), POP())
0x2E1	DUP3
0x2E6	JUMPI(:label22, POP(@0x216) == POP(0x0))

# Stack: [0x0 @0x216 [0x8AC7230489E80000 | @0x20F] [:label12 | :label11] [:label11 | @0x13]]
0x2E9	PUSH(SLOAD(0x2))
0x2EC	PUSH(SLOAD(0x4))
0x2EF	PUSH(MLOAD(0x40))
0x2F7	PUSH(0x2 ** 0xA0 - 0x1)
0x2F8	SWAP1
0x2F9	SWAP1
0x2FA	SWAP2
0x2FB	PUSH(POP(@0x2F7) & POP(@0x2EC))
0x2FC	SWAP2
0x2FD	PUSH(0x0)
0x2FF	SWAP2
0x300	DUP3
0x301	DUP2
0x302	DUP2
0x303	DUP2
0x304	DUP6
0x305	DUP9
0x306	DUP4
0x307	PUSH(CALL(POP(0x0), POP(@0x2FB), POP(@0x2E9), POP(@0x2EF), POP(0x0), POP(@0x2EF), POP(0x0)))
0x308	POP()
0x309	POP()
0x30A	POP()
0x30D	SSTORE(0x2, POP(0x0))
0x30E	POP()
0x30F	PUSH(0x3)
0x311	DUP1
0x313	DUP4
0x314	PUSH(POP() + SLOAD(POP(0x3)))
0x315	SWAP1
0x316	SSTORE(POP(0x3), POP(@0x314))
0x31A	JUMP(:label23)

:label21
# Stack: [[@0x265 | @0x241] @0x23F :label20 @0x21A 0x0 @0x21A 0x0 @0x216 [@0x20F | 0x8AC7230489E80000] [:label12 | :label11] [@0x13 | :label11]]
0x31C	POP()
0x31D	SWAP1
0x31E	JUMP(POP(:label20))

:label22
# Stack: [0x0 @0x216 [0x8AC7230489E80000 | @0x20F] [:label12 | :label11] [:label11 | @0x13]]
0x320	PUSH(0x3)
0x322	DUP1
0x324	DUP4
0x325	PUSH(POP() + SLOAD(POP(0x3)))
0x326	SWAP1
0x327	SSTORE(POP(0x3), POP(@0x325))

:label23
# Stack: [[0x0 | @0x39B] @0x216 [0x8AC7230489E80000 | @0x20F] [:label12 | :label11] [@0x13 | :label11]]
0x32C	PUSH(SLOAD(0x1))
0x32D	PUSH(0x0)
0x32F	DUP1
0x330	PUSH(SLOAD(POP(0x0)))
0x331	PUSH(0x64)
0x333	SWAP2
0x334	SWAP1
0x335	DUP2
0x33B	JUMPI(0x2, !(POP(@0x32C) < POP(@0x330)))

# Stack: [@0x32C 0x0 0x64 [0x0 | @0x39B] @0x216 [0x8AC7230489E80000 | @0x20F] [:label11 | :label12] [:label11 | @0x13]]
0x33C	SWAP1
0x33D	DUP1
0x33E	MSTORE(POP(0x0), POP(0x0))
0x341	PUSH(SLOAD(0x3))
0x342	PUSH(0x2)
0x344	SWAP1
0x345	SWAP1
0x346	SWAP2
0x348	PUSH(0x0)
0x34A	DUP1
0x351	DUP1
0x352	CODECOPY(POP(0x0), 0x403, 0x20)
0x353	DUP1
0x354	PUSH(MLOAD(POP(0x0)))
0x355	SWAP1
0x356	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x358	PUSH(SLOAD(POP(@0x354) + POP(0x2) * POP(@0x32C)))
0x359	SWAP2
0x35A	SWAP1
0x35B	SWAP2
0x35F	PUSH(0xB4 * POP(@0x358) / POP(0x64))
0x360	SWAP1
0x366	JUMPI(:label10, !(POP(@0x341) > POP(@0x35F)))

# Stack: [[0x0 | @0x39B] @0x216 [0x8AC7230489E80000 | @0x20F] [:label12 | :label11] [:label11 | @0x13]]
0x369	PUSH(SLOAD(0x1))
0x36A	PUSH(0x0)
0x36C	DUP1
0x36D	PUSH(SLOAD(POP(0x0)))
0x36E	PUSH(0x64)
0x370	SWAP2
0x371	SWAP1
0x372	DUP2
0x378	JUMPI(0x2, !(POP(@0x369) < POP(@0x36D)))

# Stack: [@0x369 0x0 0x64 [0x0 | @0x39B] @0x216 [0x8AC7230489E80000 | @0x20F] [:label11 | :label12] [:label11 | @0x13]]
0x37B	PUSH(SLOAD(0x1))
0x37C	DUP3
0x37D	PUSH(SLOAD(POP(0x0)))
0x37E	PUSH(0x2)
0x380	SWAP2
0x381	SWAP1
0x382	SWAP3
0x384	PUSH(0x0)
0x386	DUP1
0x38D	DUP1
0x38E	CODECOPY(POP(0x0), 0x403, 0x20)
0x38F	DUP1
0x390	PUSH(MLOAD(POP(0x0)))
0x391	SWAP1
0x392	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x394	PUSH(SLOAD(POP(@0x390) + POP(0x2) * POP(@0x369)))
0x395	SWAP4
0x396	SWAP1
0x397	SWAP4
0x39B	PUSH(0xB4 * POP(@0x394) / POP(0x64))
0x39C	SWAP4
0x39D	POP()
0x39E	SWAP1
0x39F	SWAP2
0x3A0	SWAP1
0x3A1	DUP2
0x3A7	JUMPI(0x2, !(POP(@0x37B) < POP(@0x37D)))

# Stack: [@0x37B 0x0 @0x39B @0x216 [@0x20F | 0x8AC7230489E80000] [:label12 | :label11] [:label11 | @0x13]]
0x3AA	PUSH(MLOAD(0x40))
0x3AB	PUSH(0x2)
0x3AD	SWAP2
0x3AE	SWAP1
0x3AF	SWAP2
0x3DC	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP(@0x37B)))
0x3DD	SWAP2
0x3DE	SWAP1
0x3DF	DUP4
0x3E0	SWAP1
0x3E1	DUP3
0x3E2	DUP2
0x3E3	DUP2
0x3E4	DUP2
0x3E5	DUP6
0x3E6	DUP9
0x3E7	DUP4
0x3E8	PUSH(CALL(POP(0x0), POP(@0x3DC), POP(@0x39B), POP(@0x3AA), POP(0x0), POP(@0x3AA), POP(0x0)))
0x3E9	POP()
0x3EA	POP()
0x3EB	PUSH(0x3)
0x3ED	DUP1
0x3EE	PUSH(SLOAD(POP(0x3)))
0x3EF	SWAP2
0x3F0	SWAP1
0x3F1	SWAP2
0x3F2	PUSH(POP(@0x3EE) - POP(@0x39B))
0x3F3	SWAP1
0x3F4	SSTORE(POP(0x3), POP(@0x3F2))
0x3F5	POP()
0x3F6	POP()
0x3F7	PUSH(0x1)
0x3F9	DUP1
0x3FB	DUP1
0x3FC	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x3FD	SWAP1
0x3FE	SSTORE(POP(0x1), POP(@0x3FC))
0x402	JUMP(:label23)


