# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x3FEB5F2B == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0x9AF1D35A == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xB4F40C61 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label11)
0x65	PUSH(:label12)
0x6B	JUMP(:label9)

:label1
# Stack: [@0x13]
0x6D	PUSH(:label11)
0x72	PUSH(CALLDATALOAD(0x4))
0x75	PUSH(SLOAD(0x4))
0x7D	PUSH(0x2 ** 0xA0 - 0x1)
0x7E	SWAP1
0x7F	DUP2
0x80	PUSH(POP(@0x7D) & POP(@0x75))
0x81	PUSH(CALLER())
0x82	SWAP1
0x83	SWAP1
0x84	SWAP2
0x8B	JUMPI(:label2, !(POP(@0x81) & POP(@0x7D) == POP(@0x80)))

# Stack: [@0x72 :label11 @0x13]
0x8C	PUSH(0x4)
0x8E	DUP1
0x9A	DUP2
0x9B	PUSH(POP(@0x72) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0x9C	SWAP1
0x9D	SSTORE(POP(0x4), POP(@0x9B))

:label2
# Stack: [@0x72 :label11 @0x13]
0x9F	POP()
0xA0	JUMP(POP(:label11))

:label3
# Stack: [@0x13]
0xA2	PUSH(:label13)
0xA7	PUSH(CALLDATALOAD(0x4))
0xA8	PUSH(0x0)
0xAA	DUP1
0xAB	PUSH(SLOAD(POP(0x0)))
0xAC	DUP2
0xAD	SWAP1
0xAE	DUP2
0xB4	JUMPI(0x2, !(POP(@0xA7) < POP(@0xAB)))

# Stack: [@0xA7 0x0 @0xA7 :label13 @0x13]
0xB5	POP()
0xB6	DUP1
0xB7	MSTORE(POP(0x0), POP(0x0))
0xBA	PUSH(0x2 * POP(@0xA7))
0xBB	PUSH(0x0)
0xBD	DUP1
0xC4	DUP1
0xC5	CODECOPY(POP(0x0), 0x4D6, 0x20)
0xC6	DUP1
0xC7	PUSH(MLOAD(POP(0x0)))
0xC8	SWAP1
0xC9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xCA	DUP2
0xCC	PUSH(SLOAD(POP(@0xBA) + POP(@0xC7)))
0xCD	PUSH(0x0)
0xCF	DUP1
0xD6	DUP1
0xD7	CODECOPY(POP(0x0), 0x4F6, 0x20)
0xD8	DUP1
0xD9	PUSH(MLOAD(POP(0x0)))
0xDA	SWAP1
0xDB	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xDC	SWAP1
0xDD	SWAP1
0xDE	SWAP2
0xE0	PUSH(SLOAD(POP(@0xD9) + POP(@0xBA)))
0xE8	PUSH(0x2 ** 0xA0 - 0x1)
0xE9	SWAP2
0xEA	SWAP1
0xEB	SWAP2
0xEC	PUSH(POP(@0xE8) & POP(@0xCC))
0xED	SWAP1
0xEE	DUP3
0xEF	JUMP(POP(:label13))

:label4
# Stack: [@0x13]
0xF1	PUSH(:label14)
0xFF	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0x100	DUP2
0x101	JUMP(POP(:label14))

:label5
# Stack: [@0x13]
0x103	PUSH(:label15)
0x108	PUSH(SLOAD(0x2))
0x109	DUP2
0x10A	JUMP(POP(:label15))

:label6
# Stack: [@0x13]
0x10C	PUSH(:label15)
0x111	PUSH(SLOAD(0x1))
0x112	DUP2
0x113	JUMP(POP(:label15))

:label7
# Stack: [@0x13]
0x115	PUSH(:label15)
0x11A	PUSH(SLOAD(0x3))
0x11B	DUP2
0x11C	JUMP(POP(:label15))

:label8
# Stack: [@0x13]
0x11E	PUSH(:label11)

:label9
# Stack: [[:label12 | :label11] [:label11 | @0x13]]
0x122	PUSH(0x0)
0x124	PUSH(0x0)
0x126	PUSH(0x0)
0x136	JUMPI(:label16, !(CALLVALUE() < 0xB1A2BC2EC50000))

# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x139	PUSH(MLOAD(0x40))
0x143	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x144	SWAP1
0x145	DUP3
0x146	SWAP1
0x147	PUSH(CALLVALUE())
0x148	SWAP1
0x149	DUP3
0x14A	DUP2
0x14B	DUP2
0x14C	DUP2
0x14D	DUP6
0x14E	DUP9
0x14F	DUP4
0x150	PUSH(CALL(POP(0x0), POP(@0x143), POP(@0x147), POP(@0x139), POP(0x0), POP(@0x139), POP(0x0)))
0x151	POP()
0x152	POP()
0x153	POP()
0x154	POP()
0x155	POP()

:label10
# Stack: [[0x0 | @0x452 | @0x398] [@0x1B8 | 0x0] [0x0 | @0x1C0] [:label12 | :label11] [@0x13 | :label11]]
0x157	POP()
0x158	POP()
0x159	POP()
0x15A	JUMP(POP())

:label11
# Stack: []
0x15C	STOP()

:label12
# Stack: [:label11]
0x15E	JUMP(POP(:label11))

:label13
# Stack: [@0xE0 @0xEC :label13 @0x13]
0x162	PUSH(MLOAD(0x40))
0x163	DUP1
0x164	DUP4
0x16E	DUP1
0x16F	MSTORE(POP(@0x162), 0x2 ** 0xA0 - 0x1 & POP(@0xEC))
0x172	PUSH(0x20 + POP(@0x162))
0x173	DUP3
0x174	DUP2
0x175	MSTORE(POP(@0x172), POP(@0xE0))
0x178	PUSH(0x20 + POP(@0x172))
0x179	SWAP3
0x17A	POP()
0x17B	POP()
0x17C	POP()
0x17F	PUSH(MLOAD(0x40))
0x180	DUP1
0x181	SWAP2
0x182	PUSH(POP(@0x178) - POP(@0x17F))
0x183	SWAP1
0x184	RETURN(POP(@0x17F), POP(@0x182))

:label14
# Stack: [@0xFF :label14 @0x13]
0x186	PUSH(0x40)
0x188	DUP1
0x189	PUSH(MLOAD(POP(0x40)))
0x191	PUSH(0x2 ** 0xA0 - 0x1)
0x192	SWAP3
0x193	SWAP1
0x194	SWAP3
0x196	DUP2
0x197	MSTORE(POP(@0x189), POP(@0x191) & POP(@0xFF))
0x198	PUSH(MLOAD(POP(0x40)))
0x199	SWAP1
0x19A	DUP2
0x19B	SWAP1
0x19F	PUSH(0x20 + POP(@0x189) - POP(@0x198))
0x1A0	SWAP1
0x1A1	RETURN(POP(@0x198), POP(@0x19F))

:label15
# Stack: [[@0x11A | @0x111 | @0x108] [:label15 | :label15 | :label15] @0x13]
0x1A3	PUSH(0x40)
0x1A5	DUP1
0x1A6	PUSH(MLOAD(POP(0x40)))
0x1A7	SWAP2
0x1A8	DUP3
0x1A9	MSTORE(POP(@0x1A6), POP())
0x1AA	PUSH(MLOAD(POP(0x40)))
0x1AB	SWAP1
0x1AC	DUP2
0x1AD	SWAP1
0x1B1	PUSH(0x20 + POP(@0x1A6) - POP(@0x1AA))
0x1B2	SWAP1
0x1B3	RETURN(POP(@0x1AA), POP(@0x1B1))

:label16
# Stack: [0x0 0x0 0x0 [:label11 | :label12] [:label11 | @0x13]]
0x1B5	PUSH(0x0)
0x1B7	DUP1
0x1B8	PUSH(SLOAD(POP(0x0)))
0x1BB	DUP1
0x1BC	PUSH(POP(@0x1B8) + 0x1)
0x1BD	DUP1
0x1BE	DUP4
0x1BF	SSTORE(POP(0x0), POP(@0x1BC))
0x1C0	PUSH(CALLVALUE())
0x1C1	SWAP6
0x1C2	POP()
0x1C3	SWAP1
0x1C4	SWAP4
0x1C5	POP()
0x1C6	SWAP1
0x1C7	DUP2
0x1C8	DUP5
0x1C9	DUP1
0x1CA	PUSH(!POP(@0x1B8))
0x1CB	DUP2
0x1CC	SWAP1
0x1D1	JUMPI(:label18, POP(@0x1CA) > POP(@0x1BC))

# Stack: [@0x1B8 @0x1BC 0x0 @0x1BC 0x0 @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x1D4	PUSH(0x2 * POP(@0x1B8))
0x1D5	DUP1
0x1D9	DUP2
0x1DC	MSTORE(0x0, POP(0x0))
0x1E1	PUSH(SHA3(0x0, 0x20))
0x1E2	SWAP1
0x1E3	DUP2
0x1E4	PUSH(POP(@0x1E1) + POP(@0x1D4))
0x1E5	SWAP1
0x1E6	PUSH(POP(@0x1E1) + 0x2 * POP(@0x1BC))
0x1E7	PUSH(:label18)
0x1EA	SWAP2
0x1EB	SWAP1

:label17
# Stack: [[@0x20A | @0x1E6] @0x1E4 :label18 @0x1BC 0x0 @0x1BC 0x0 @0x1B8 @0x1C0 [:label11 | :label12] [:label11 | @0x13]]
0x1ED	DUP1
0x1EE	DUP3
0x1F4	JUMPI(:label22, !(POP(@0x1E4) > POP()))

# Stack: [[@0x1E6 | @0x20A] @0x1E4 :label18 @0x1BC 0x0 @0x1BC 0x0 @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x1F5	DUP1
0x201	DUP1
0x202	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x203	PUSH(0x0)
0x205	PUSH(0x1)
0x207	SWAP1
0x208	SWAP1
0x209	SWAP2
0x20A	PUSH(POP(0x1) + POP())
0x20B	SWAP1
0x20C	DUP2
0x20D	SSTORE(POP(@0x20A), POP(0x0))
0x211	JUMP(:label17)

:label18
# Stack: [[@0x1B8 | @0x1E4] @0x1BC 0x0 @0x1BC 0x0 @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x213	POP()
0x214	POP()
0x215	POP()
0x216	POP()
0x217	PUSH(CALLER())
0x218	PUSH(0x0)
0x21C	POP(0x0)
0x21D	DUP4
0x21E	DUP2
0x220	DUP1
0x226	JUMPI(0x2, !(POP(@0x1B8) < SLOAD(POP(0x0))))

# Stack: [@0x1B8 0x0 @0x217 0x0 @0x1B8 @0x1C0 [:label11 | :label12] [:label11 | @0x13]]
0x227	DUP2
0x228	DUP1
0x229	MSTORE(POP(0x0), POP(0x0))
0x22D	PUSH(0x0)
0x22F	DUP1
0x236	DUP1
0x237	CODECOPY(POP(0x0), 0x4D6, 0x20)
0x238	DUP1
0x239	PUSH(MLOAD(POP(0x0)))
0x23A	SWAP1
0x23B	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x23C	PUSH(POP(@0x239) + 0x2 * POP(@0x1B8))
0x23D	DUP1
0x248	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x23C)))
0x249	SWAP1
0x24A	SWAP3
0x24B	PUSH(POP(@0x217) | POP(@0x248))
0x24C	SWAP1
0x24D	SWAP2
0x24E	SSTORE(POP(@0x23C), POP(@0x24B))
0x24F	DUP1
0x250	PUSH(SLOAD(POP(0x0)))
0x251	DUP4
0x252	SWAP1
0x253	SWAP1
0x254	DUP5
0x255	SWAP1
0x256	DUP2
0x25C	JUMPI(0x2, !(POP(@0x1B8) < POP(@0x250)))

# Stack: [@0x1B8 0x0 @0x1C0 0x0 @0x1B8 @0x1C0 [:label11 | :label12] [:label11 | @0x13]]
0x25D	PUSH(0x2)
0x25F	SWAP1
0x260	DUP2
0x262	PUSH(0x0)
0x264	DUP1
0x26B	DUP1
0x26C	CODECOPY(POP(0x0), 0x4F6, 0x20)
0x26D	DUP1
0x26E	PUSH(MLOAD(POP(0x0)))
0x26F	SWAP1
0x270	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x271	PUSH(POP(@0x26E) + POP(0x2) * POP(@0x1B8))
0x272	SWAP3
0x273	SWAP1
0x274	SWAP3
0x275	SSTORE(POP(@0x271), POP(@0x1C0))
0x276	DUP2
0x27A	DUP5
0x27C	PUSH(POP(@0x1C0) / 0x21 + SLOAD(POP(0x2)))
0x27D	SWAP2
0x27E	DUP3
0x27F	SWAP1
0x280	SSTORE(POP(0x2), POP(@0x27C))
0x281	PUSH(0x3)
0x283	DUP1
0x285	DUP6
0x286	PUSH(POP(@0x1C0) + SLOAD(POP(0x3)))
0x287	SWAP1
0x288	SSTORE(POP(0x3), POP(@0x286))
0x28D	JUMPI(:label19, POP(0x0) == POP(@0x27C))

# Stack: [0x0 @0x1B8 @0x1C0 [:label12 | :label11] [@0x13 | :label11]]
0x299	JUMPI(:label19, !(SLOAD(0x3) > SLOAD(0x2)))

# Stack: [0x0 @0x1B8 @0x1C0 [:label11 | :label12] [:label11 | @0x13]]
0x29C	PUSH(SLOAD(0x2))
0x29F	PUSH(SLOAD(0x4))
0x2A2	PUSH(MLOAD(0x40))
0x2AA	PUSH(0x2 ** 0xA0 - 0x1)
0x2AB	SWAP1
0x2AC	SWAP1
0x2AD	SWAP2
0x2AE	PUSH(POP(@0x2AA) & POP(@0x29F))
0x2AF	SWAP2
0x2B0	PUSH(0x0)
0x2B2	SWAP2
0x2B3	DUP3
0x2B4	DUP2
0x2B5	DUP2
0x2B6	DUP2
0x2B7	DUP6
0x2B8	DUP9
0x2B9	DUP4
0x2BA	PUSH(CALL(POP(0x0), POP(@0x2AE), POP(@0x29C), POP(@0x2A2), POP(0x0), POP(@0x2A2), POP(0x0)))
0x2BB	POP()
0x2BC	POP()
0x2BD	PUSH(0x3)
0x2BF	DUP1
0x2C0	PUSH(SLOAD(POP(0x3)))
0x2C1	SWAP2
0x2C2	SWAP1
0x2C3	SWAP2
0x2C4	PUSH(POP(@0x2C0) - POP(@0x29C))
0x2C5	SWAP1
0x2C6	SSTORE(POP(0x3), POP(@0x2C4))
0x2C7	POP()
0x2C8	POP()

:label19
# Stack: [[0x0 | @0x398 | @0x452] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x2CC	PUSH(SLOAD(0x1))
0x2CD	PUSH(0x0)
0x2CF	DUP1
0x2D0	PUSH(SLOAD(POP(0x0)))
0x2D1	PUSH(0x64)
0x2D3	SWAP2
0x2D4	SWAP1
0x2D5	DUP2
0x2DB	JUMPI(0x2, !(POP(@0x2CC) < POP(@0x2D0)))

# Stack: [@0x2CC 0x0 0x64 [0x0 | @0x398 | @0x452] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x2DC	SWAP1
0x2DD	DUP1
0x2DE	MSTORE(POP(0x0), POP(0x0))
0x2E2	PUSH(0x0)
0x2E4	DUP1
0x2EB	DUP1
0x2EC	CODECOPY(POP(0x0), 0x4F6, 0x20)
0x2ED	DUP1
0x2EE	PUSH(MLOAD(POP(0x0)))
0x2EF	SWAP1
0x2F0	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2F2	PUSH(SLOAD(POP(@0x2EE) + 0x2 * POP(@0x2CC)))
0x2F3	PUSH(0x3)
0x2F5	DUP1
0x2F6	PUSH(SLOAD(POP(0x3)))
0x2F7	SWAP1
0x2F8	PUSH(POP(@0x2F2) * POP(0x3))
0x2F9	SWAP2
0x2FA	SWAP1
0x2FB	SWAP2
0x2FC	PUSH(POP(@0x2F8) / POP(0x64))
0x2FD	SWAP1
0x2FE	PUSH(POP(@0x2F6) > POP(@0x2FC))
0x2FF	DUP1
0x304	JUMPI(:label20, !POP(@0x2FE))

# Stack: [@0x2FE [0x0 | @0x398 | @0x452] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x305	POP()
0x308	PUSH(SLOAD(0x1))
0x309	DUP2
0x30A	SWAP1
0x30B	PUSH(POP(@0x308) < POP(@0x1B8))

:label20
# Stack: [[@0x30B | @0x2FE] [0x0 | @0x398 | @0x452] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x311	JUMPI(:label10, !POP())

# Stack: [[0x0 | @0x398 | @0x452] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x314	PUSH(SLOAD(0x1))
0x315	PUSH(0x19)
0x317	SWAP1
0x31B	PUSH(0x0 == POP(@0x314) % POP(0x19))
0x31C	DUP1
0x321	JUMPI(:label21, !POP(@0x31B))

# Stack: [@0x31B [0x0 | @0x398 | @0x452] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x322	POP()
0x325	PUSH(SLOAD(0x1))
0x326	PUSH(0x0)
0x328	DUP1
0x329	PUSH(SLOAD(POP(0x0)))
0x32A	PUSH(0x64)
0x32C	SWAP2
0x32D	SWAP1
0x32E	DUP2
0x334	JUMPI(0x2, !(POP(@0x325) < POP(@0x329)))

# Stack: [@0x325 0x0 0x64 [@0x398 | @0x452 | 0x0] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x335	SWAP1
0x336	DUP1
0x337	MSTORE(POP(0x0), POP(0x0))
0x33A	PUSH(SLOAD(0x3))
0x33B	PUSH(0x2)
0x33D	SWAP1
0x33E	SWAP1
0x33F	SWAP2
0x341	PUSH(0x0)
0x343	DUP1
0x34A	DUP1
0x34B	CODECOPY(POP(0x0), 0x4F6, 0x20)
0x34C	DUP1
0x34D	PUSH(MLOAD(POP(0x0)))
0x34E	SWAP1
0x34F	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x354	PUSH(0x9 * SLOAD(POP(@0x34D) + POP(0x2) * POP(@0x325)))
0x355	SWAP2
0x356	SWAP1
0x357	SWAP2
0x358	PUSH(POP(@0x354) / POP(0x64))
0x359	SWAP1
0x35A	PUSH(POP(@0x33A) > POP(@0x358))

:label21
# Stack: [[@0x35A | @0x31B] [0x0 | @0x398 | @0x452] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x360	JUMPI(:label23, !POP())

# Stack: [[0x0 | @0x398 | @0x452] @0x1B8 @0x1C0 [:label12 | :label11] [@0x13 | :label11]]
0x363	PUSH(SLOAD(0x1))
0x364	PUSH(0x0)
0x366	DUP1
0x367	PUSH(SLOAD(POP(0x0)))
0x368	PUSH(0x64)
0x36A	SWAP2
0x36B	SWAP1
0x36C	DUP2
0x372	JUMPI(0x2, !(POP(@0x363) < POP(@0x367)))

# Stack: [@0x363 0x0 0x64 [@0x398 | @0x452 | 0x0] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x373	DUP2
0x374	DUP1
0x375	MSTORE(POP(0x0), POP(0x0))
0x378	PUSH(SLOAD(0x1))
0x379	DUP3
0x37A	PUSH(SLOAD(POP(0x0)))
0x37B	PUSH(0x2)
0x37D	SWAP2
0x37E	SWAP1
0x37F	SWAP3
0x381	PUSH(0x0)
0x383	DUP1
0x38A	DUP1
0x38B	CODECOPY(POP(0x0), 0x4F6, 0x20)
0x38C	DUP1
0x38D	PUSH(MLOAD(POP(0x0)))
0x38E	SWAP1
0x38F	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x394	PUSH(0x9 * SLOAD(POP(@0x38D) + POP(0x2) * POP(@0x363)))
0x395	SWAP4
0x396	SWAP1
0x397	SWAP4
0x398	PUSH(POP(@0x394) / POP(0x64))
0x399	SWAP4
0x39A	POP()
0x39B	SWAP1
0x39C	SWAP2
0x39D	SWAP1
0x39E	DUP2
0x3A4	JUMPI(0x2, !(POP(@0x378) < POP(@0x37A)))

# Stack: [@0x378 0x0 @0x398 @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x3A8	PUSH(0x0)
0x3AA	DUP1
0x3B1	DUP1
0x3B2	CODECOPY(POP(0x0), 0x4D6, 0x20)
0x3B3	DUP1
0x3B4	PUSH(MLOAD(POP(0x0)))
0x3B5	SWAP1
0x3B6	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3B8	PUSH(SLOAD(POP(@0x3B4) + 0x2 * POP(@0x378)))
0x3BB	PUSH(MLOAD(0x40))
0x3C3	PUSH(0x2 ** 0xA0 - 0x1)
0x3C4	SWAP1
0x3C5	SWAP1
0x3C6	SWAP2
0x3C7	PUSH(POP(@0x3C3) & POP(@0x3B8))
0x3C8	SWAP2
0x3C9	SWAP1
0x3CA	DUP4
0x3CB	SWAP1
0x3CC	DUP3
0x3CD	DUP2
0x3CE	DUP2
0x3CF	DUP2
0x3D0	DUP6
0x3D1	DUP9
0x3D2	DUP4
0x3D3	PUSH(CALL(POP(0x0), POP(@0x3C7), POP(@0x398), POP(@0x3BB), POP(0x0), POP(@0x3BB), POP(0x0)))
0x3D4	POP()
0x3D5	POP()
0x3D8	PUSH(SLOAD(0x1))
0x3D9	DUP3
0x3DA	PUSH(SLOAD(POP(0x0)))
0x3DB	PUSH(0x64)
0x3DD	SWAP4
0x3DE	POP()
0x3DF	SWAP1
0x3E0	SWAP2
0x3E1	POP()
0x3E2	DUP2
0x3E8	JUMPI(0x2, !(POP(@0x3D8) < POP(@0x3DA)))

# Stack: [@0x3D8 0x0 0x64 @0x398 @0x1B8 @0x1C0 [:label12 | :label11] [@0x13 | :label11]]
0x3E9	SWAP1
0x3EA	DUP1
0x3EB	MSTORE(POP(0x0), POP(0x0))
0x3EF	PUSH(0x0)
0x3F1	DUP1
0x3F8	DUP1
0x3F9	CODECOPY(POP(0x0), 0x4F6, 0x20)
0x3FA	DUP1
0x3FB	PUSH(MLOAD(POP(0x0)))
0x3FC	SWAP1
0x3FD	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3FF	PUSH(SLOAD(POP(@0x3FB) + 0x2 * POP(@0x3D8)))
0x400	PUSH(0x3)
0x402	DUP1
0x403	PUSH(SLOAD(POP(0x3)))
0x404	PUSH(0x9)
0x406	SWAP1
0x407	SWAP1
0x408	SWAP3
0x409	PUSH(POP(0x9) * POP(@0x3FF))
0x40A	SWAP3
0x40B	SWAP1
0x40C	SWAP3
0x40D	PUSH(POP(@0x409) / POP(0x64))
0x40E	SWAP1
0x40F	PUSH(POP(@0x403) - POP(@0x40D))
0x410	SWAP1
0x411	SSTORE(POP(0x3), POP(@0x40F))
0x415	JUMP(:label24)

:label22
# Stack: [[@0x1E6 | @0x20A] @0x1E4 :label18 @0x1BC 0x0 @0x1BC 0x0 @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x417	POP()
0x418	SWAP1
0x419	JUMP(POP(:label18))

:label23
# Stack: [[@0x398 | @0x452 | 0x0] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x41D	PUSH(SLOAD(0x1))
0x41E	PUSH(0x0)
0x420	DUP1
0x421	PUSH(SLOAD(POP(0x0)))
0x422	PUSH(0x64)
0x424	SWAP2
0x425	SWAP1
0x426	DUP2
0x42C	JUMPI(0x2, !(POP(@0x41D) < POP(@0x421)))

# Stack: [@0x41D 0x0 0x64 [@0x452 | 0x0 | @0x398] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x42D	DUP2
0x42E	DUP1
0x42F	MSTORE(POP(0x0), POP(0x0))
0x433	PUSH(0x0)
0x435	DUP1
0x43C	DUP1
0x43D	CODECOPY(POP(0x0), 0x4F6, 0x20)
0x43E	DUP1
0x43F	PUSH(MLOAD(POP(0x0)))
0x440	SWAP1
0x441	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x443	PUSH(SLOAD(POP(@0x43F) + 0x2 * POP(@0x41D)))
0x446	PUSH(SLOAD(0x1))
0x447	DUP2
0x448	PUSH(SLOAD(POP(0x0)))
0x449	PUSH(0x3)
0x44B	SWAP1
0x44C	SWAP1
0x44D	SWAP3
0x44E	PUSH(POP(0x3) * POP(@0x443))
0x44F	SWAP4
0x450	SWAP1
0x451	SWAP4
0x452	PUSH(POP(@0x44E) / POP(0x64))
0x453	SWAP4
0x454	POP()
0x455	SWAP1
0x456	SWAP2
0x457	SWAP1
0x458	DUP2
0x45E	JUMPI(0x2, !(POP(@0x446) < POP(@0x448)))

# Stack: [@0x446 0x0 @0x452 @0x1B8 @0x1C0 [:label11 | :label12] [:label11 | @0x13]]
0x462	PUSH(0x0)
0x464	DUP1
0x46B	DUP1
0x46C	CODECOPY(POP(0x0), 0x4D6, 0x20)
0x46D	DUP1
0x46E	PUSH(MLOAD(POP(0x0)))
0x46F	SWAP1
0x470	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x472	PUSH(SLOAD(POP(@0x46E) + 0x2 * POP(@0x446)))
0x475	PUSH(MLOAD(0x40))
0x47D	PUSH(0x2 ** 0xA0 - 0x1)
0x47E	SWAP1
0x47F	SWAP1
0x480	SWAP2
0x481	PUSH(POP(@0x47D) & POP(@0x472))
0x482	SWAP2
0x483	SWAP1
0x484	DUP4
0x485	SWAP1
0x486	DUP3
0x487	DUP2
0x488	DUP2
0x489	DUP2
0x48A	DUP6
0x48B	DUP9
0x48C	DUP4
0x48D	PUSH(CALL(POP(0x0), POP(@0x481), POP(@0x452), POP(@0x475), POP(0x0), POP(@0x475), POP(0x0)))
0x48E	POP()
0x48F	POP()
0x492	PUSH(SLOAD(0x1))
0x493	DUP3
0x494	PUSH(SLOAD(POP(0x0)))
0x495	PUSH(0x64)
0x497	SWAP4
0x498	POP()
0x499	SWAP1
0x49A	SWAP2
0x49B	POP()
0x49C	DUP2
0x4A2	JUMPI(0x2, !(POP(@0x492) < POP(@0x494)))

# Stack: [@0x492 0x0 0x64 @0x452 @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x4A3	SWAP1
0x4A4	DUP1
0x4A5	MSTORE(POP(0x0), POP(0x0))
0x4A9	PUSH(0x0)
0x4AB	DUP1
0x4B2	DUP1
0x4B3	CODECOPY(POP(0x0), 0x4F6, 0x20)
0x4B4	DUP1
0x4B5	PUSH(MLOAD(POP(0x0)))
0x4B6	SWAP1
0x4B7	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x4B9	PUSH(SLOAD(POP(@0x4B5) + 0x2 * POP(@0x492)))
0x4BA	PUSH(0x3)
0x4BC	DUP1
0x4BD	PUSH(SLOAD(POP(0x3)))
0x4BE	SWAP1
0x4BF	DUP2
0x4C0	PUSH(POP(0x3) * POP(@0x4B9))
0x4C1	SWAP3
0x4C2	SWAP1
0x4C3	SWAP3
0x4C4	PUSH(POP(@0x4C0) / POP(0x64))
0x4C5	SWAP1
0x4C6	PUSH(POP(@0x4BD) - POP(@0x4C4))
0x4C7	SWAP1
0x4C8	SSTORE(POP(0x3), POP(@0x4C6))

:label24
# Stack: [[@0x398 | @0x452] @0x1B8 @0x1C0 [:label12 | :label11] [:label11 | @0x13]]
0x4CA	PUSH(0x1)
0x4CC	DUP1
0x4CE	DUP1
0x4CF	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x4D0	SWAP1
0x4D1	SSTORE(POP(0x1), POP(@0x4CF))
0x4D5	JUMP(:label19)


