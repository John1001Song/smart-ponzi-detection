# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x1E0018D6)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label2, 0x1FC06F0D == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label3, 0x32D79689 == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label4, 0x9FAA3C91 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label5, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label7, 0xD377DEDD == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label8)
0x65	PUSH(0x0)
0x67	DUP1
0x76	JUMPI(:label9, CALLVALUE() == 0x7CE66C50E2840000)

# Stack: [0x0 0x0 :label8]
0x7A	JUMP(0x2)

:label1
# Stack: [@0x13]
0x7C	PUSH(:label20)
0x81	PUSH(SLOAD(0x4))
0x82	DUP2
0x83	JUMP(POP(:label20))

:label2
# Stack: [@0x13]
0x85	PUSH(:label21)
0x8A	PUSH(CALLDATALOAD(0x4))
0x8B	PUSH(0x1)
0x8D	DUP1
0x8E	PUSH(SLOAD(POP(0x1)))
0x8F	DUP2
0x90	SWAP1
0x91	DUP2
0x97	JUMPI(0x2, !(POP(@0x8A) < POP(@0x8E)))

# Stack: [@0x8A 0x1 @0x8A :label21 @0x13]
0x98	POP()
0x9B	MSTORE(0x0, POP(0x1))
0x9C	PUSH(0x0)
0x9E	DUP1
0xA5	DUP1
0xA6	CODECOPY(POP(0x0), 0x3C2, 0x20)
0xA7	DUP1
0xA8	PUSH(MLOAD(POP(0x0)))
0xA9	SWAP1
0xAA	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xB5	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0xA8) + POP(@0x8A)))
0xB6	DUP2
0xB7	JUMP(POP(:label21))

:label3
# Stack: [@0x13]
0xB9	PUSH(:label20)
0xBE	PUSH(SLOAD(0x3))
0xBF	DUP2
0xC0	JUMP(POP(:label20))

:label4
# Stack: [@0x13]
0xC2	PUSH(:label21)
0xD0	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x6))
0xD1	DUP2
0xD2	JUMP(POP(:label21))

:label5
# Stack: [@0x13]
0xD4	PUSH(:label21)
0xD9	PUSH(CALLDATALOAD(0x4))
0xDA	PUSH(0x0)
0xDC	DUP1
0xDD	PUSH(SLOAD(POP(0x0)))
0xDE	DUP2
0xDF	SWAP1
0xE0	DUP2
0xE6	JUMPI(0x2, !(POP(@0xD9) < POP(@0xDD)))

# Stack: [@0xD9 0x0 @0xD9 :label21 @0x13]
0xE7	POP()
0xE8	DUP1
0xE9	MSTORE(POP(0x0), POP(0x0))
0x115	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(@0xD9)))
0x116	DUP2
0x117	JUMP(POP(:label21))

:label6
# Stack: [@0x13]
0x119	PUSH(:label20)
0x11E	PUSH(SLOAD(0x2))
0x11F	DUP2
0x120	JUMP(POP(:label20))

:label7
# Stack: [@0x13]
0x122	PUSH(:label21)
0x130	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x5))
0x131	DUP2
0x132	JUMP(POP(:label21))

:label8
# Stack: []
0x134	STOP()

:label9
# Stack: [0x0 0x0 :label8]
0x138	PUSH(SLOAD(0x4))
0x139	PUSH(0x8)
0x13B	SWAP1
0x141	JUMPI(:label12, !(POP(@0x138) < POP(0x8)))

# Stack: [0x0 0x0 :label8]
0x142	PUSH(0x0)
0x144	DUP1
0x145	PUSH(SLOAD(POP(0x0)))
0x148	DUP1
0x149	PUSH(POP(@0x145) + 0x1)
0x14A	DUP1
0x14B	DUP4
0x14C	SSTORE(POP(0x0), POP(@0x149))
0x14D	SWAP1
0x14E	SWAP4
0x14F	POP()
0x150	SWAP1
0x151	DUP2
0x152	DUP5
0x153	DUP1
0x154	PUSH(!POP(@0x145))
0x155	DUP2
0x156	SWAP1
0x15B	JUMPI(:label11, POP(@0x154) > POP(@0x149))

# Stack: [@0x145 @0x149 0x0 @0x149 0x0 @0x145 :label8]
0x15C	DUP2
0x15D	DUP4
0x160	MSTORE(0x0, POP(0x0))
0x165	PUSH(SHA3(0x0, 0x20))
0x166	SWAP2
0x167	DUP3
0x168	PUSH(POP(@0x165) + POP(@0x145))
0x169	SWAP2
0x16A	PUSH(POP(@0x165) + POP(@0x149))
0x16B	PUSH(:label11)
0x16E	SWAP2
0x16F	SWAP1

:label10
# Stack: [[@0x16A | @0x189 | @0x21B] [@0x168 | @0x218] [:label11 | :label14] [@0x149 | @0x1ED] [0x0 | 0x1] [@0x149 | @0x1ED] [0x0 | @0x1EA] [@0x145 | 0x0] :label8]
0x171	DUP1
0x172	DUP3
0x178	JUMPI(:label13, !(POP() > POP()))

# Stack: [[@0x16A | @0x189 | @0x21B] [@0x168 | @0x218] [:label14 | :label11] [@0x149 | @0x1ED] [0x0 | 0x1] [@0x149 | @0x1ED] [0x0 | @0x1EA] [@0x145 | 0x0] :label8]
0x179	DUP1
0x185	DUP1
0x186	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x189	PUSH(0x1 + POP())
0x18D	JUMP(:label10)

:label11
# Stack: [[@0x168 | @0x145] @0x149 0x0 @0x149 0x0 @0x145 :label8]
0x18F	POP()
0x190	POP()
0x191	POP()
0x192	POP()
0x193	PUSH(CALLER())
0x194	PUSH(0x0)
0x198	POP(0x0)
0x199	DUP4
0x19A	DUP2
0x19C	DUP1
0x1A2	JUMPI(0x2, !(POP(@0x145) < SLOAD(POP(0x0))))

# Stack: [@0x145 0x0 @0x193 0x0 @0x145 :label8]
0x1A3	SWAP1
0x1A4	DUP1
0x1A5	MSTORE(POP(0x0), POP(0x0))
0x1C7	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(@0x145))
0x1C8	DUP1
0x1D3	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x1C7)))
0x1D4	SWAP1
0x1D5	SWAP2
0x1D6	PUSH(POP(@0x193) | POP(@0x1D3))
0x1D7	SWAP1
0x1D8	SSTORE(POP(@0x1C7), POP(@0x1D6))

:label12
# Stack: [0x0 [@0x145 | 0x0] :label8]
0x1DC	PUSH(SLOAD(0x4))
0x1DD	PUSH(0x7)
0x1DF	SWAP1
0x1E5	JUMPI(:label15, !(POP(@0x1DC) > POP(0x7)))

# Stack: [0x0 [@0x145 | 0x0] :label8]
0x1E6	POP()
0x1E7	PUSH(0x1)
0x1E9	DUP1
0x1EA	PUSH(SLOAD(POP(0x1)))
0x1EB	DUP1
0x1EC	DUP3
0x1ED	PUSH(POP(0x1) + POP(@0x1EA))
0x1EE	DUP1
0x1EF	DUP4
0x1F0	SSTORE(POP(0x1), POP(@0x1ED))
0x1F1	SWAP1
0x1F2	SWAP2
0x1F3	DUP2
0x1F4	DUP4
0x1F5	DUP1
0x1F6	PUSH(!POP(@0x1EA))
0x1F7	DUP2
0x1F8	SWAP1
0x1FD	JUMPI(:label14, POP(@0x1F6) > POP(@0x1ED))

# Stack: [@0x1EA @0x1ED 0x1 @0x1ED @0x1EA [@0x145 | 0x0] :label8]
0x1FE	PUSH(0x0)
0x200	DUP3
0x201	SWAP1
0x202	MSTORE(POP(0x0), POP(0x1))
0x203	PUSH(:label14)
0x206	SWAP1
0x207	PUSH(0x0)
0x209	DUP1
0x210	DUP1
0x211	CODECOPY(POP(0x0), 0x3C2, 0x20)
0x212	DUP1
0x213	PUSH(MLOAD(POP(0x0)))
0x214	SWAP1
0x215	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x216	SWAP1
0x217	DUP2
0x218	PUSH(POP(@0x213) + POP(@0x1EA))
0x219	SWAP1
0x21A	DUP4
0x21B	PUSH(POP(@0x1ED) + POP(@0x213))
0x21F	JUMP(:label10)

:label13
# Stack: [[@0x21B | @0x16A | @0x189] [@0x168 | @0x218] [:label11 | :label14] [@0x149 | @0x1ED] [0x0 | 0x1] [@0x1ED | @0x149] [0x0 | @0x1EA] [@0x145 | 0x0] :label8]
0x221	POP()
0x222	SWAP1
0x223	JUMP(POP())

:label14
# Stack: [[@0x218 | @0x1EA] @0x1ED 0x1 @0x1ED @0x1EA [0x0 | @0x145] :label8]
0x225	POP()
0x226	POP()
0x227	POP()
0x228	POP()
0x229	PUSH(CALLER())
0x22A	PUSH(0x1)
0x22E	POP(0x0)
0x22F	DUP3
0x230	DUP2
0x232	DUP1
0x238	JUMPI(0x2, !(POP(@0x1EA) < SLOAD(POP(0x1))))

# Stack: [@0x1EA 0x1 @0x229 @0x1EA [@0x145 | 0x0] :label8]
0x239	PUSH(0x0)
0x23B	SWAP2
0x23C	SWAP1
0x23D	SWAP2
0x23E	MSTORE(POP(0x0), POP(0x1))
0x23F	PUSH(0x0)
0x241	DUP1
0x248	DUP1
0x249	CODECOPY(POP(0x0), 0x3C2, 0x20)
0x24A	DUP1
0x24B	PUSH(MLOAD(POP(0x0)))
0x24C	SWAP1
0x24D	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x24E	PUSH(POP(@0x24B) + POP(@0x1EA))
0x24F	DUP1
0x25A	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x24E)))
0x25B	SWAP1
0x25C	SWAP2
0x25D	PUSH(POP(@0x229) | POP(@0x25A))
0x25E	SWAP1
0x25F	SSTORE(POP(@0x24E), POP(@0x25D))
0x262	PUSH(SLOAD(0x4))
0x263	PUSH(0x8)
0x265	SWAP1
0x26B	JUMPI(:label15, !(POP(@0x262) > POP(0x8)))

# Stack: [@0x1EA [@0x145 | 0x0] :label8]
0x26E	PUSH(SLOAD(0x3))
0x26F	PUSH(0x1)
0x271	DUP1
0x272	PUSH(SLOAD(POP(0x1)))
0x273	SWAP1
0x274	SWAP2
0x275	SWAP1
0x276	DUP2
0x27C	JUMPI(0x2, !(POP(@0x26E) < POP(@0x272)))

# Stack: [@0x26E 0x1 @0x1EA [0x0 | @0x145] :label8]
0x27D	PUSH(0x5)
0x27F	DUP1
0x280	PUSH(SLOAD(POP(0x5)))
0x281	PUSH(0x0)
0x283	DUP1
0x28A	DUP1
0x28B	CODECOPY(POP(0x0), 0x3C2, 0x20)
0x28C	DUP1
0x28D	PUSH(MLOAD(POP(0x0)))
0x28E	SWAP1
0x28F	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x290	SWAP2
0x291	SWAP1
0x292	SWAP3
0x29D	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x28D) + POP(@0x26E)))
0x2A6	PUSH(~(0x2 ** 0xA0 - 0x1))
0x2A7	SWAP2
0x2A8	SWAP1
0x2A9	SWAP3
0x2AA	PUSH(POP(@0x2A6) & POP(@0x280))
0x2AB	SWAP2
0x2AC	SWAP1
0x2AD	SWAP2
0x2AE	PUSH(POP(@0x2AA) | POP(@0x29D))
0x2AF	SWAP1
0x2B0	SSTORE(POP(0x5), POP(@0x2AE))
0x2B1	PUSH(0x3)
0x2B3	DUP1
0x2B4	PUSH(SLOAD(POP(0x3)))
0x2B5	SWAP1
0x2B6	SWAP2
0x2B7	PUSH(POP(0x1) + POP(@0x2B4))
0x2B8	SWAP1
0x2B9	SSTORE(POP(0x3), POP(@0x2B7))

:label15
# Stack: [[@0x1EA | 0x0] [@0x145 | 0x0] :label8]
0x2BD	PUSH(SLOAD(0x4))
0x2BE	PUSH(0x9)
0x2C0	SWAP1
0x2C6	JUMPI(:label16, !(POP(@0x2BD) < POP(0x9)))

# Stack: [[@0x1EA | 0x0] [@0x145 | 0x0] :label8]
0x2C7	PUSH(0x4)
0x2C9	DUP1
0x2CD	PUSH(0x1 + SLOAD(POP(0x4)))
0x2CE	SWAP1
0x2CF	SSTORE(POP(0x4), POP(@0x2CD))
0x2D3	JUMP(:label17)

:label16
# Stack: [[@0x1EA | 0x0] [@0x145 | 0x0] :label8]
0x2D9	SSTORE(0x4, 0x0)

:label17
# Stack: [[@0x1EA | 0x0] [@0x145 | 0x0] :label8]
0x2DD	PUSH(SLOAD(0x5))
0x2E0	PUSH(MLOAD(0x40))
0x2E8	PUSH(0x2 ** 0xA0 - 0x1)
0x2E9	SWAP1
0x2EA	SWAP1
0x2EB	SWAP2
0x2EC	PUSH(POP(@0x2E8) & POP(@0x2DD))
0x2ED	SWAP1
0x2EE	PUSH(0x0)
0x2F0	SWAP1
0x2F1	PUSH(0xDE0B6B3A7640000)
0x2FA	SWAP1
0x2FB	DUP3
0x2FC	DUP2
0x2FD	DUP2
0x2FE	DUP2
0x2FF	DUP6
0x300	DUP9
0x301	DUP4
0x302	PUSH(CALL(POP(0x0), POP(@0x2EC), POP(0xDE0B6B3A7640000), POP(@0x2E0), POP(0x0), POP(@0x2E0), POP(0x0)))
0x303	POP()
0x304	POP()
0x305	POP()
0x306	POP()
0x307	POP()

:label18
# Stack: [[@0x1EA | 0x0] [@0x145 | 0x0] :label8]
0x321	JUMPI(:label19, BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()) < 0x8AC7230489E80000)

# Stack: [[@0x1EA | 0x0] [@0x145 | 0x0] :label8]
0x324	PUSH(SLOAD(0x2))
0x325	PUSH(0x0)
0x327	DUP1
0x328	PUSH(SLOAD(POP(0x0)))
0x329	SWAP1
0x32A	SWAP2
0x32B	SWAP1
0x32C	DUP2
0x332	JUMPI(0x2, !(POP(@0x324) < POP(@0x328)))

# Stack: [@0x324 0x0 [@0x1EA | 0x0] [@0x145 | 0x0] :label8]
0x333	DUP2
0x334	DUP1
0x335	MSTORE(POP(0x0), POP(0x0))
0x338	PUSH(MLOAD(0x40))
0x339	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563)
0x35A	SWAP2
0x35B	SWAP1
0x35C	SWAP2
0x367	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563) + POP(@0x324)))
0x368	SWAP2
0x369	SWAP1
0x36A	PUSH(0x8AC7230489E80000)
0x373	SWAP1
0x374	DUP3
0x375	DUP2
0x376	DUP2
0x377	DUP2
0x378	DUP6
0x379	DUP9
0x37A	DUP4
0x37B	PUSH(CALL(POP(0x0), POP(@0x367), POP(0x8AC7230489E80000), POP(@0x338), POP(0x0), POP(@0x338), POP(0x0)))
0x37C	POP()
0x37D	POP()
0x37E	PUSH(0x2)
0x380	DUP1
0x384	PUSH(0x1 + SLOAD(POP(0x2)))
0x385	SWAP1
0x386	SSTORE(POP(0x2), POP(@0x384))
0x387	POP()
0x388	PUSH(:label18)
0x38B	SWAP2
0x38C	POP()
0x38D	POP()
0x38E	JUMP(POP(:label18))

:label19
# Stack: [[0x0 | @0x1EA] [@0x145 | 0x0] :label8]
0x390	POP()
0x391	POP()
0x392	JUMP(POP(:label8))

:label20
# Stack: [[@0x11E | @0xBE | @0x81] [:label20 | :label20 | :label20] @0x13]
0x394	PUSH(0x40)
0x396	DUP1
0x397	PUSH(MLOAD(POP(0x40)))
0x398	SWAP2
0x399	DUP3
0x39A	MSTORE(POP(@0x397), POP())
0x39B	PUSH(MLOAD(POP(0x40)))
0x39C	SWAP1
0x39D	DUP2
0x39E	SWAP1
0x3A2	PUSH(0x20 + POP(@0x397) - POP(@0x39B))
0x3A3	SWAP1
0x3A4	RETURN(POP(@0x39B), POP(@0x3A2))

:label21
# Stack: [[@0x115 | @0xD0 | @0xB5 | @0x130] [:label21 | :label21 | :label21 | :label21] @0x13]
0x3A6	PUSH(0x40)
0x3A8	DUP1
0x3A9	PUSH(MLOAD(POP(0x40)))
0x3B1	PUSH(0x2 ** 0xA0 - 0x1)
0x3B2	SWAP3
0x3B3	SWAP1
0x3B4	SWAP3
0x3B6	DUP2
0x3B7	MSTORE(POP(@0x3A9), POP(@0x3B1) & POP())
0x3B8	PUSH(MLOAD(POP(0x40)))
0x3B9	SWAP1
0x3BA	DUP2
0x3BB	SWAP1
0x3BF	PUSH(0x20 + POP(@0x3A9) - POP(@0x3B8))
0x3C0	SWAP1
0x3C1	RETURN(POP(@0x3B8), POP(@0x3BF))


