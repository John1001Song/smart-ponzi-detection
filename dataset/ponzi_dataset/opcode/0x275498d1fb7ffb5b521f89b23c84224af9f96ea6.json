# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x1E0018D6)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label2, 0x1FC06F0D == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label3, 0x32D79689 == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label4, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label5, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label6, 0xD377DEDD == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label7, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label9)
0x65	PUSH(:label10)
0x6B	JUMP(:label8)

:label1
# Stack: [@0x13]
0x6D	PUSH(:label11)
0x72	PUSH(SLOAD(0x4))
0x73	DUP2
0x74	JUMP(POP(:label11))

:label2
# Stack: [@0x13]
0x76	PUSH(:label12)
0x7B	PUSH(CALLDATALOAD(0x4))
0x7C	PUSH(0x1)
0x7E	DUP1
0x7F	PUSH(SLOAD(POP(0x1)))
0x80	DUP2
0x81	SWAP1
0x82	DUP2
0x88	JUMPI(0x2, !(POP(@0x7B) < POP(@0x7F)))

# Stack: [@0x7B 0x1 @0x7B :label12 @0x13]
0x89	POP()
0x8C	MSTORE(0x0, POP(0x1))
0xB8	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 + POP(@0x7B)))
0xB9	DUP2
0xBA	JUMP(POP(:label12))

:label3
# Stack: [@0x13]
0xBC	PUSH(:label11)
0xC1	PUSH(SLOAD(0x3))
0xC2	DUP2
0xC3	JUMP(POP(:label11))

:label4
# Stack: [@0x13]
0xC5	PUSH(:label12)
0xCA	PUSH(CALLDATALOAD(0x4))
0xCB	PUSH(0x0)
0xCD	DUP1
0xCE	PUSH(SLOAD(POP(0x0)))
0xCF	DUP2
0xD0	SWAP1
0xD1	DUP2
0xD7	JUMPI(0x2, !(POP(@0xCA) < POP(@0xCE)))

# Stack: [@0xCA 0x0 @0xCA :label12 @0x13]
0xD8	POP()
0xD9	DUP1
0xDA	MSTORE(POP(0x0), POP(0x0))
0xDB	PUSH(0x0)
0xDD	DUP1
0xE4	DUP1
0xE5	CODECOPY(POP(0x0), 0x3A0, 0x20)
0xE6	DUP1
0xE7	PUSH(MLOAD(POP(0x0)))
0xE8	SWAP1
0xE9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xF4	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0xE7) + POP(@0xCA)))
0xF5	DUP2
0xF6	JUMP(POP(:label12))

:label5
# Stack: [@0x13]
0xF8	PUSH(:label11)
0xFD	PUSH(SLOAD(0x2))
0xFE	DUP2
0xFF	JUMP(POP(:label11))

:label6
# Stack: [@0x13]
0x101	PUSH(:label12)
0x10F	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x5))
0x110	DUP2
0x111	JUMP(POP(:label12))

:label7
# Stack: [@0x13]
0x113	PUSH(:label9)

:label8
# Stack: [[:label10 | :label9] [:label9 | @0x13]]
0x119	PUSH(SLOAD(0x1))
0x11A	PUSH(0x0)
0x11C	DUP1
0x11D	PUSH(SLOAD(POP(0x0)))
0x11E	SWAP1
0x124	JUMPI(:label13, CALLVALUE() == POP(0x0))

# Stack: [@0x11D @0x119 [:label9 | :label10] [:label9 | @0x13]]
0x128	JUMP(0x2)

:label9
# Stack: []
0x12A	STOP()

:label10
# Stack: [:label9]
0x12C	JUMP(POP(:label9))

:label11
# Stack: [[@0xC1 | @0x72 | @0xFD] [:label11 | :label11 | :label11] @0x13]
0x12E	PUSH(0x40)
0x130	DUP1
0x131	PUSH(MLOAD(POP(0x40)))
0x132	SWAP2
0x133	DUP3
0x134	MSTORE(POP(@0x131), POP())
0x135	PUSH(MLOAD(POP(0x40)))
0x136	SWAP1
0x137	DUP2
0x138	SWAP1
0x13C	PUSH(0x20 + POP(@0x131) - POP(@0x135))
0x13D	SWAP1
0x13E	RETURN(POP(@0x135), POP(@0x13C))

:label12
# Stack: [[@0x10F | @0xF4 | @0xB8] [:label12 | :label12 | :label12] @0x13]
0x140	PUSH(0x40)
0x142	DUP1
0x143	PUSH(MLOAD(POP(0x40)))
0x14B	PUSH(0x2 ** 0xA0 - 0x1)
0x14C	SWAP3
0x14D	SWAP1
0x14E	SWAP3
0x150	DUP2
0x151	MSTORE(POP(@0x143), POP(@0x14B) & POP())
0x152	PUSH(MLOAD(POP(0x40)))
0x153	SWAP1
0x154	DUP2
0x155	SWAP1
0x159	PUSH(0x20 + POP(@0x143) - POP(@0x152))
0x15A	SWAP1
0x15B	RETURN(POP(@0x152), POP(@0x159))

:label13
# Stack: [@0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x15F	PUSH(SLOAD(0x4))
0x160	PUSH(0x8)
0x162	SWAP1
0x168	JUMPI(:label16, !(POP(@0x15F) > POP(0x8)))

# Stack: [@0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x169	PUSH(0x1)
0x16B	DUP1
0x16C	PUSH(SLOAD(POP(0x1)))
0x16D	DUP1
0x16E	DUP3
0x16F	PUSH(POP(0x1) + POP(@0x16C))
0x170	DUP1
0x171	DUP4
0x172	SSTORE(POP(0x1), POP(@0x16F))
0x173	SWAP2
0x174	SWAP1
0x175	DUP3
0x176	SWAP1
0x177	DUP1
0x178	PUSH(!POP(@0x16C))
0x179	DUP2
0x17A	SWAP1
0x17F	JUMPI(:label15, POP(@0x178) > POP(@0x16F))

# Stack: [@0x16C @0x16F 0x1 @0x16F @0x11D @0x119 [:label10 | :label9] [@0x13 | :label9]]
0x180	DUP2
0x181	DUP4
0x184	MSTORE(0x0, POP(0x1))
0x189	PUSH(SHA3(0x0, 0x20))
0x18A	SWAP2
0x18B	DUP3
0x18C	PUSH(POP(@0x189) + POP(@0x16C))
0x18D	SWAP2
0x18E	PUSH(POP(@0x189) + POP(@0x16F))
0x18F	PUSH(:label15)
0x192	SWAP2
0x193	SWAP1

:label14
# Stack: [[@0x18E | @0x1AD | @0x2AB] [@0x18C | @0x2A8] [:label15 | :label18] [@0x16F | @0x27F] [0x1 | 0x0] [@0x16F | @0x27F] @0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x195	DUP1
0x196	DUP3
0x19C	JUMPI(:label17, !(POP() > POP()))

# Stack: [[@0x18E | @0x1AD | @0x2AB] [@0x18C | @0x2A8] [:label15 | :label18] [@0x16F | @0x27F] [0x1 | 0x0] [@0x16F | @0x27F] @0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x19D	DUP1
0x1A9	DUP1
0x1AA	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x1AD	PUSH(0x1 + POP())
0x1B1	JUMP(:label14)

:label15
# Stack: [[@0x18C | @0x16C] @0x16F 0x1 @0x16F @0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x1B3	POP()
0x1B4	POP()
0x1B5	POP()
0x1B6	POP()
0x1B7	PUSH(CALLER())
0x1B8	PUSH(0x1)
0x1BC	POP(0x0)
0x1BD	DUP4
0x1BE	DUP2
0x1C0	DUP1
0x1C6	JUMPI(0x2, !(POP(@0x119) < SLOAD(POP(0x1))))

# Stack: [@0x119 0x1 @0x1B7 @0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x1C7	PUSH(0x0)
0x1C9	SWAP2
0x1CA	SWAP1
0x1CB	SWAP2
0x1CC	MSTORE(POP(0x0), POP(0x1))
0x1EE	PUSH(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 + POP(@0x119))
0x1EF	DUP1
0x1FA	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x1EE)))
0x1FB	SWAP1
0x1FC	SWAP2
0x1FD	PUSH(POP(@0x1B7) | POP(@0x1FA))
0x1FE	SWAP1
0x1FF	SSTORE(POP(@0x1EE), POP(@0x1FD))
0x20A	JUMPI(:label16, !(0xA == SLOAD(0x4)))

# Stack: [@0x11D @0x119 [:label10 | :label9] [@0x13 | :label9]]
0x20D	PUSH(SLOAD(0x3))
0x20E	PUSH(0x1)
0x210	DUP1
0x211	PUSH(SLOAD(POP(0x1)))
0x212	SWAP1
0x213	SWAP2
0x214	SWAP1
0x215	DUP2
0x21B	JUMPI(0x2, !(POP(@0x20D) < POP(@0x211)))

# Stack: [@0x20D 0x1 @0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x21C	PUSH(0x5)
0x21E	DUP1
0x21F	PUSH(SLOAD(POP(0x5)))
0x220	PUSH(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6)
0x241	SWAP2
0x242	SWAP1
0x243	SWAP3
0x24E	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6) + POP(@0x20D)))
0x257	PUSH(~(0x2 ** 0xA0 - 0x1))
0x258	SWAP2
0x259	SWAP1
0x25A	SWAP3
0x25B	PUSH(POP(@0x257) & POP(@0x21F))
0x25C	SWAP2
0x25D	SWAP1
0x25E	SWAP2
0x25F	PUSH(POP(@0x25B) | POP(@0x24E))
0x260	SWAP1
0x261	SSTORE(POP(0x5), POP(@0x25F))
0x262	PUSH(0x3)
0x264	DUP1
0x265	PUSH(SLOAD(POP(0x3)))
0x266	SWAP1
0x267	SWAP2
0x268	PUSH(POP(0x1) + POP(@0x265))
0x269	SWAP1
0x26A	SSTORE(POP(0x3), POP(@0x268))

:label16
# Stack: [@0x11D @0x119 [:label9 | :label10] [:label9 | @0x13]]
0x26E	PUSH(SLOAD(0x4))
0x26F	PUSH(0x9)
0x271	SWAP1
0x277	JUMPI(:label19, !(POP(@0x26E) < POP(0x9)))

# Stack: [@0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x278	PUSH(0x0)
0x27A	DUP1
0x27B	PUSH(SLOAD(POP(0x0)))
0x27E	DUP1
0x27F	PUSH(POP(@0x27B) + 0x1)
0x280	DUP1
0x281	DUP4
0x282	SSTORE(POP(0x0), POP(@0x27F))
0x283	SWAP2
0x284	SWAP1
0x285	DUP3
0x286	SWAP1
0x287	DUP1
0x288	PUSH(!POP(@0x27B))
0x289	DUP2
0x28A	SWAP1
0x28F	JUMPI(:label18, POP(@0x288) > POP(@0x27F))

# Stack: [@0x27B @0x27F 0x0 @0x27F @0x11D @0x119 [:label10 | :label9] [@0x13 | :label9]]
0x290	DUP3
0x291	DUP1
0x292	MSTORE(POP(0x0), POP(0x0))
0x293	PUSH(:label18)
0x296	SWAP1
0x297	PUSH(0x0)
0x299	DUP1
0x2A0	DUP1
0x2A1	CODECOPY(POP(0x0), 0x3A0, 0x20)
0x2A2	DUP1
0x2A3	PUSH(MLOAD(POP(0x0)))
0x2A4	SWAP1
0x2A5	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2A6	SWAP1
0x2A7	DUP2
0x2A8	PUSH(POP(@0x2A3) + POP(@0x27B))
0x2A9	SWAP1
0x2AA	DUP4
0x2AB	PUSH(POP(@0x27F) + POP(@0x2A3))
0x2AF	JUMP(:label14)

:label17
# Stack: [[@0x1AD | @0x18E | @0x2AB] [@0x18C | @0x2A8] [:label15 | :label18] [@0x16F | @0x27F] [0x1 | 0x0] [@0x16F | @0x27F] @0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x2B1	POP()
0x2B2	SWAP1
0x2B3	JUMP(POP())

:label18
# Stack: [[@0x2A8 | @0x27B] @0x27F 0x0 @0x27F @0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x2B5	POP()
0x2B6	POP()
0x2B7	POP()
0x2B8	POP()
0x2B9	PUSH(CALLER())
0x2BA	PUSH(0x0)
0x2BE	POP(0x0)
0x2BF	DUP3
0x2C0	DUP2
0x2C2	DUP1
0x2C8	JUMPI(0x2, !(POP(@0x11D) < SLOAD(POP(0x0))))

# Stack: [@0x11D 0x0 @0x2B9 @0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x2C9	SWAP1
0x2CA	DUP1
0x2CB	MSTORE(POP(0x0), POP(0x0))
0x2CC	PUSH(0x0)
0x2CE	DUP1
0x2D5	DUP1
0x2D6	CODECOPY(POP(0x0), 0x3A0, 0x20)
0x2D7	DUP1
0x2D8	PUSH(MLOAD(POP(0x0)))
0x2D9	SWAP1
0x2DA	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2DB	PUSH(POP(@0x2D8) + POP(@0x11D))
0x2DC	DUP1
0x2E7	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2DB)))
0x2E8	SWAP1
0x2E9	SWAP2
0x2EA	PUSH(POP(@0x2B9) | POP(@0x2E7))
0x2EB	SWAP1
0x2EC	SSTORE(POP(@0x2DB), POP(@0x2EA))

:label19
# Stack: [@0x11D @0x119 [:label9 | :label10] [:label9 | @0x13]]
0x2EE	PUSH(0x4)
0x2F0	DUP1
0x2F4	PUSH(0x1 + SLOAD(POP(0x4)))
0x2F5	SWAP1
0x2F6	DUP2
0x2F7	SWAP1
0x2F8	SSTORE(POP(0x4), POP(@0x2F4))
0x300	JUMPI(:label20, !(0xB == POP(@0x2F4)))

# Stack: [@0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x305	SSTORE(0x4, 0x0)

:label20
# Stack: [@0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x309	DUP1
0x30E	JUMPI(:label21, POP(@0x11D) == 0x0)

# Stack: [@0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x311	PUSH(SLOAD(0x5))
0x314	PUSH(MLOAD(0x40))
0x31C	PUSH(0x2 ** 0xA0 - 0x1)
0x31D	SWAP1
0x31E	SWAP1
0x31F	SWAP2
0x320	PUSH(POP(@0x31C) & POP(@0x311))
0x321	SWAP1
0x322	PUSH(0x0)
0x324	SWAP1
0x325	DUP2
0x326	SWAP1
0x327	DUP2
0x328	DUP2
0x329	DUP2
0x32A	DUP2
0x32B	DUP2
0x32C	DUP9
0x32D	DUP2
0x32E	PUSH(CALL(POP(0x0), POP(@0x320), POP(0x0), POP(@0x314), POP(0x0), POP(@0x314), POP(0x0)))
0x32F	POP()
0x330	POP()
0x331	POP()
0x332	POP()
0x333	POP()

:label21
# Stack: [@0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x348	JUMPI(:label22, !(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()) > 0x0))

# Stack: [@0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x34B	PUSH(SLOAD(0x2))
0x34C	PUSH(0x0)
0x34E	DUP1
0x34F	PUSH(SLOAD(POP(0x0)))
0x350	SWAP1
0x351	SWAP2
0x352	SWAP1
0x353	DUP2
0x359	JUMPI(0x2, !(POP(@0x34B) < POP(@0x34F)))

# Stack: [@0x34B 0x0 @0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x35A	DUP2
0x35B	DUP1
0x35C	MSTORE(POP(0x0), POP(0x0))
0x35F	PUSH(MLOAD(0x40))
0x360	PUSH(0x0)
0x362	DUP1
0x369	DUP1
0x36A	CODECOPY(POP(0x0), 0x3A0, 0x20)
0x36B	DUP1
0x36C	PUSH(MLOAD(POP(0x0)))
0x36D	SWAP1
0x36E	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x36F	SWAP2
0x370	SWAP1
0x371	SWAP2
0x37C	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x36C) + POP(@0x34B)))
0x37D	SWAP2
0x37E	SWAP1
0x37F	DUP2
0x380	SWAP1
0x381	DUP2
0x382	DUP2
0x383	DUP2
0x384	DUP2
0x385	DUP2
0x386	DUP9
0x387	DUP2
0x388	PUSH(CALL(POP(0x0), POP(@0x37C), POP(0x0), POP(@0x35F), POP(0x0), POP(@0x35F), POP(0x0)))
0x389	POP()
0x38A	POP()
0x38B	PUSH(0x2)
0x38D	DUP1
0x391	PUSH(0x1 + SLOAD(POP(0x2)))
0x392	SWAP1
0x393	SSTORE(POP(0x2), POP(@0x391))
0x394	POP()
0x395	PUSH(:label21)
0x398	SWAP2
0x399	POP()
0x39A	POP()
0x39B	JUMP(POP(:label21))

:label22
# Stack: [@0x11D @0x119 [:label10 | :label9] [:label9 | @0x13]]
0x39D	POP()
0x39E	POP()
0x39F	JUMP(POP())


