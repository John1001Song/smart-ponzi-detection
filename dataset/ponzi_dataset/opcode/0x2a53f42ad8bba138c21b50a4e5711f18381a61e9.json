# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label11)
0x65	PUSH(:label12)
0x6B	JUMP(:label9)

:label1
# Stack: [@0x13]
0x6D	PUSH(:label11)
0x72	PUSH(CALLDATALOAD(0x4))
0x75	PUSH(SLOAD(0x4))
0x7D	PUSH(0x2 ** 0xA0 - 0x1)
0x7E	SWAP1
0x7F	DUP2
0x80	PUSH(POP(@0x7D) & POP(@0x75))
0x81	PUSH(CALLER())
0x82	SWAP1
0x83	SWAP1
0x84	SWAP2
0x8B	JUMPI(:label2, !(POP(@0x81) & POP(@0x7D) == POP(@0x80)))

# Stack: [@0x72 :label11 @0x13]
0x8C	PUSH(0x4)
0x8E	DUP1
0x9A	DUP2
0x9B	PUSH(POP(@0x72) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0x9C	SWAP1
0x9D	SSTORE(POP(0x4), POP(@0x9B))

:label2
# Stack: [@0x72 :label11 @0x13]
0x9F	POP()
0xA0	JUMP(POP(:label11))

:label3
# Stack: [@0x13]
0xA2	PUSH(:label13)
0xB0	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0xB1	DUP2
0xB2	JUMP(POP(:label13))

:label4
# Stack: [@0x13]
0xB4	PUSH(:label14)
0xB9	PUSH(SLOAD(0x2))
0xBA	DUP2
0xBB	JUMP(POP(:label14))

:label5
# Stack: [@0x13]
0xBD	PUSH(:label15)
0xC2	PUSH(CALLDATALOAD(0x4))
0xC3	PUSH(0x0)
0xC5	DUP1
0xC6	PUSH(SLOAD(POP(0x0)))
0xC7	DUP2
0xC8	SWAP1
0xC9	DUP2
0xCF	JUMPI(0x2, !(POP(@0xC2) < POP(@0xC6)))

# Stack: [@0xC2 0x0 @0xC2 :label15 @0x13]
0xD0	POP()
0xD1	DUP1
0xD2	MSTORE(POP(0x0), POP(0x0))
0xD5	PUSH(0x2 * POP(@0xC2))
0xF7	DUP1
0xF9	PUSH(SLOAD(POP(@0xD5) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0xFA	PUSH(0x0)
0xFC	DUP1
0x103	DUP1
0x104	CODECOPY(POP(0x0), 0x36E, 0x20)
0x105	DUP1
0x106	PUSH(MLOAD(POP(0x0)))
0x107	SWAP1
0x108	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x109	SWAP1
0x10A	SWAP1
0x10B	SWAP2
0x10D	PUSH(SLOAD(POP(@0x106) + POP(@0xD5)))
0x115	PUSH(0x2 ** 0xA0 - 0x1)
0x116	SWAP2
0x117	SWAP1
0x118	SWAP2
0x119	PUSH(POP(@0x115) & POP(@0xF9))
0x11A	SWAP1
0x11B	DUP3
0x11C	JUMP(POP(:label15))

:label6
# Stack: [@0x13]
0x11E	PUSH(:label14)
0x123	PUSH(SLOAD(0x1))
0x124	DUP2
0x125	JUMP(POP(:label14))

:label7
# Stack: [@0x13]
0x127	PUSH(:label14)
0x12C	PUSH(SLOAD(0x3))
0x12D	DUP2
0x12E	JUMP(POP(:label14))

:label8
# Stack: [@0x13]
0x130	PUSH(:label11)

:label9
# Stack: [[:label12 | :label11] [:label11 | @0x13]]
0x134	PUSH(CALLVALUE())
0x135	PUSH(0x0)
0x137	DUP1
0x142	DUP3
0x144	DUP1
0x149	JUMPI(:label16, POP(0x0) == POP(@0x134) % 0x56BC75E2D63100000)

# Stack: [0x0 0x0 @0x134 [:label12 | :label11] [:label11 | @0x13]]
0x14C	PUSH(MLOAD(0x40))
0x156	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x157	SWAP1
0x158	DUP3
0x159	SWAP1
0x15A	DUP6
0x15B	SWAP1
0x15C	DUP3
0x15D	DUP2
0x15E	DUP2
0x15F	DUP2
0x160	DUP6
0x161	DUP9
0x162	DUP4
0x163	PUSH(CALL(POP(0x0), POP(@0x156), POP(@0x134), POP(@0x14C), POP(0x0), POP(@0x14C), POP(0x0)))
0x164	POP()
0x165	POP()
0x166	POP()
0x167	POP()
0x168	POP()

:label10
# Stack: [[0x0 | @0x304] [0x0 | @0x1CB] @0x134 [:label12 | :label11] [@0x13 | :label11]]
0x16A	POP()
0x16B	POP()
0x16C	POP()
0x16D	JUMP(POP())

:label11
# Stack: []
0x16F	STOP()

:label12
# Stack: [:label11]
0x171	JUMP(POP(:label11))

:label13
# Stack: [@0xB0 :label13 @0x13]
0x173	PUSH(0x40)
0x175	DUP1
0x176	PUSH(MLOAD(POP(0x40)))
0x17E	PUSH(0x2 ** 0xA0 - 0x1)
0x17F	SWAP3
0x180	SWAP1
0x181	SWAP3
0x183	DUP2
0x184	MSTORE(POP(@0x176), POP(@0x17E) & POP(@0xB0))
0x185	PUSH(MLOAD(POP(0x40)))
0x186	SWAP1
0x187	DUP2
0x188	SWAP1
0x18C	PUSH(0x20 + POP(@0x176) - POP(@0x185))
0x18D	SWAP1
0x18E	RETURN(POP(@0x185), POP(@0x18C))

:label14
# Stack: [[@0x12C | @0x123 | @0xB9] [:label14 | :label14 | :label14] @0x13]
0x190	PUSH(0x40)
0x192	DUP1
0x193	PUSH(MLOAD(POP(0x40)))
0x194	SWAP2
0x195	DUP3
0x196	MSTORE(POP(@0x193), POP())
0x197	PUSH(MLOAD(POP(0x40)))
0x198	SWAP1
0x199	DUP2
0x19A	SWAP1
0x19E	PUSH(0x20 + POP(@0x193) - POP(@0x197))
0x19F	SWAP1
0x1A0	RETURN(POP(@0x197), POP(@0x19E))

:label15
# Stack: [@0x10D @0x119 :label15 @0x13]
0x1A4	PUSH(MLOAD(0x40))
0x1A5	DUP1
0x1A6	DUP4
0x1B0	DUP1
0x1B1	MSTORE(POP(@0x1A4), 0x2 ** 0xA0 - 0x1 & POP(@0x119))
0x1B4	PUSH(0x20 + POP(@0x1A4))
0x1B5	DUP3
0x1B6	DUP2
0x1B7	MSTORE(POP(@0x1B4), POP(@0x10D))
0x1BA	PUSH(0x20 + POP(@0x1B4))
0x1BB	SWAP3
0x1BC	POP()
0x1BD	POP()
0x1BE	POP()
0x1C1	PUSH(MLOAD(0x40))
0x1C2	DUP1
0x1C3	SWAP2
0x1C4	PUSH(POP(@0x1BA) - POP(@0x1C1))
0x1C5	SWAP1
0x1C6	RETURN(POP(@0x1C1), POP(@0x1C4))

:label16
# Stack: [0x0 0x0 @0x134 [:label12 | :label11] [:label11 | @0x13]]
0x1C8	PUSH(0x0)
0x1CA	DUP1
0x1CB	PUSH(SLOAD(POP(0x0)))
0x1CE	DUP1
0x1CF	PUSH(POP(@0x1CB) + 0x1)
0x1D0	DUP1
0x1D1	DUP4
0x1D2	SSTORE(POP(0x0), POP(@0x1CF))
0x1D3	SWAP1
0x1D4	SWAP4
0x1D5	POP()
0x1D6	SWAP1
0x1D7	DUP2
0x1D8	DUP5
0x1D9	DUP1
0x1DA	PUSH(!POP(@0x1CB))
0x1DB	DUP2
0x1DC	SWAP1
0x1E1	JUMPI(:label18, POP(@0x1DA) > POP(@0x1CF))

# Stack: [@0x1CB @0x1CF 0x0 @0x1CF 0x0 @0x1CB @0x134 [:label12 | :label11] [:label11 | @0x13]]
0x1E4	PUSH(0x2 * POP(@0x1CB))
0x1E5	DUP1
0x1E9	DUP2
0x1EC	MSTORE(0x0, POP(0x0))
0x1F1	PUSH(SHA3(0x0, 0x20))
0x1F2	SWAP1
0x1F3	DUP2
0x1F4	PUSH(POP(@0x1F1) + POP(@0x1E4))
0x1F5	SWAP1
0x1F6	PUSH(POP(@0x1F1) + 0x2 * POP(@0x1CF))
0x1F7	PUSH(:label18)
0x1FA	SWAP2
0x1FB	SWAP1

:label17
# Stack: [[@0x21A | @0x1F6] @0x1F4 :label18 @0x1CF 0x0 @0x1CF 0x0 @0x1CB @0x134 [:label11 | :label12] [:label11 | @0x13]]
0x1FD	DUP1
0x1FE	DUP3
0x204	JUMPI(:label20, !(POP(@0x1F4) > POP()))

# Stack: [[@0x1F6 | @0x21A] @0x1F4 :label18 @0x1CF 0x0 @0x1CF 0x0 @0x1CB @0x134 [:label12 | :label11] [:label11 | @0x13]]
0x205	DUP1
0x211	DUP1
0x212	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x213	PUSH(0x0)
0x215	PUSH(0x1)
0x217	SWAP1
0x218	SWAP1
0x219	SWAP2
0x21A	PUSH(POP(0x1) + POP())
0x21B	SWAP1
0x21C	DUP2
0x21D	SSTORE(POP(@0x21A), POP(0x0))
0x221	JUMP(:label17)

:label18
# Stack: [[@0x1F4 | @0x1CB] @0x1CF 0x0 @0x1CF 0x0 @0x1CB @0x134 [:label11 | :label12] [:label11 | @0x13]]
0x223	POP()
0x224	POP()
0x225	POP()
0x226	POP()
0x227	PUSH(CALLER())
0x228	PUSH(0x0)
0x22C	POP(0x0)
0x22D	DUP4
0x22E	DUP2
0x230	DUP1
0x236	JUMPI(0x2, !(POP(@0x1CB) < SLOAD(POP(0x0))))

# Stack: [@0x1CB 0x0 @0x227 0x0 @0x1CB @0x134 [:label12 | :label11] [:label11 | @0x13]]
0x237	DUP2
0x238	DUP1
0x239	MSTORE(POP(0x0), POP(0x0))
0x25E	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x1CB))
0x25F	DUP1
0x26A	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x25E)))
0x26B	SWAP1
0x26C	SWAP3
0x26D	PUSH(POP(@0x227) | POP(@0x26A))
0x26E	SWAP1
0x26F	SWAP2
0x270	SSTORE(POP(@0x25E), POP(@0x26D))
0x271	DUP1
0x272	PUSH(SLOAD(POP(0x0)))
0x273	DUP4
0x274	SWAP1
0x275	SWAP1
0x276	DUP5
0x277	SWAP1
0x278	DUP2
0x27E	JUMPI(0x2, !(POP(@0x1CB) < POP(@0x272)))

# Stack: [@0x1CB 0x0 @0x134 0x0 @0x1CB @0x134 [:label12 | :label11] [:label11 | @0x13]]
0x282	PUSH(0x0)
0x284	DUP1
0x28B	DUP1
0x28C	CODECOPY(POP(0x0), 0x36E, 0x20)
0x28D	DUP1
0x28E	PUSH(MLOAD(POP(0x0)))
0x28F	SWAP1
0x290	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x291	PUSH(POP(@0x28E) + 0x2 * POP(@0x1CB))
0x292	SWAP2
0x293	SWAP1
0x294	SWAP2
0x295	SSTORE(POP(@0x291), POP(@0x134))
0x296	POP()
0x297	PUSH(0x3)
0x299	DUP1
0x29B	DUP4
0x29C	PUSH(POP(@0x134) + SLOAD(POP(0x3)))
0x29D	SWAP1
0x29E	SSTORE(POP(0x3), POP(@0x29C))

:label19
# Stack: [[0x0 | @0x304] @0x1CB @0x134 [:label12 | :label11] [:label11 | @0x13]]
0x2A2	PUSH(SLOAD(0x1))
0x2A3	PUSH(0x0)
0x2A5	DUP1
0x2A6	PUSH(SLOAD(POP(0x0)))
0x2A7	SWAP1
0x2A8	SWAP2
0x2A9	SWAP1
0x2AA	DUP2
0x2B0	JUMPI(0x2, !(POP(@0x2A2) < POP(@0x2A6)))

# Stack: [@0x2A2 0x0 [0x0 | @0x304] @0x1CB @0x134 [:label12 | :label11] [:label11 | @0x13]]
0x2B1	SWAP1
0x2B2	DUP1
0x2B3	MSTORE(POP(0x0), POP(0x0))
0x2B6	PUSH(SLOAD(0x3))
0x2B7	PUSH(0x2)
0x2B9	SWAP1
0x2BA	DUP2
0x2BC	PUSH(0x0)
0x2BE	DUP1
0x2C5	DUP1
0x2C6	CODECOPY(POP(0x0), 0x36E, 0x20)
0x2C7	DUP1
0x2C8	PUSH(MLOAD(POP(0x0)))
0x2C9	SWAP1
0x2CA	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2CC	PUSH(SLOAD(POP(@0x2C8) + POP(0x2) * POP(@0x2A2)))
0x2CD	SWAP1
0x2CE	SWAP2
0x2CF	PUSH(POP(0x2) * POP(@0x2CC))
0x2D0	SWAP1
0x2D5	JUMPI(:label10, POP(@0x2B6) < POP(@0x2CF))

# Stack: [[0x0 | @0x304] @0x1CB @0x134 [:label12 | :label11] [:label11 | @0x13]]
0x2D8	PUSH(SLOAD(0x1))
0x2D9	PUSH(0x0)
0x2DB	DUP1
0x2DC	PUSH(SLOAD(POP(0x0)))
0x2DD	SWAP1
0x2DE	SWAP2
0x2DF	SWAP1
0x2E0	DUP2
0x2E6	JUMPI(0x2, !(POP(@0x2D8) < POP(@0x2DC)))

# Stack: [@0x2D8 0x0 [0x0 | @0x304] @0x1CB @0x134 [:label12 | :label11] [@0x13 | :label11]]
0x2E9	PUSH(SLOAD(0x1))
0x2EA	DUP3
0x2EB	PUSH(SLOAD(POP(0x0)))
0x2EC	PUSH(0x2)
0x2EE	SWAP2
0x2EF	DUP3
0x2F1	PUSH(0x0)
0x2F3	DUP1
0x2FA	DUP1
0x2FB	CODECOPY(POP(0x0), 0x36E, 0x20)
0x2FC	DUP1
0x2FD	PUSH(MLOAD(POP(0x0)))
0x2FE	SWAP1
0x2FF	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x301	PUSH(SLOAD(POP(@0x2FD) + POP(0x2) * POP(@0x2D8)))
0x302	SWAP1
0x303	SWAP3
0x304	PUSH(POP(0x2) * POP(@0x301))
0x305	SWAP4
0x306	POP()
0x307	SWAP1
0x308	DUP2
0x30E	JUMPI(0x2, !(POP(@0x2E9) < POP(@0x2EB)))

# Stack: [@0x2E9 0x0 @0x304 @0x1CB @0x134 [:label12 | :label11] [:label11 | @0x13]]
0x311	PUSH(MLOAD(0x40))
0x312	PUSH(0x2)
0x314	SWAP2
0x315	SWAP1
0x316	SWAP2
0x343	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP(@0x2E9)))
0x344	SWAP2
0x345	SWAP1
0x346	DUP4
0x347	SWAP1
0x348	DUP3
0x349	DUP2
0x34A	DUP2
0x34B	DUP2
0x34C	DUP6
0x34D	DUP9
0x34E	DUP4
0x34F	PUSH(CALL(POP(0x0), POP(@0x343), POP(@0x304), POP(@0x311), POP(0x0), POP(@0x311), POP(0x0)))
0x350	POP()
0x351	POP()
0x352	PUSH(0x3)
0x354	DUP1
0x355	PUSH(SLOAD(POP(0x3)))
0x356	SWAP2
0x357	SWAP1
0x358	SWAP2
0x359	PUSH(POP(@0x355) - POP(@0x304))
0x35A	SWAP1
0x35B	SSTORE(POP(0x3), POP(@0x359))
0x35C	POP()
0x35D	POP()
0x35E	PUSH(0x1)
0x360	DUP1
0x362	DUP1
0x363	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x364	SWAP1
0x365	SSTORE(POP(0x1), POP(@0x363))
0x369	JUMP(:label19)

:label20
# Stack: [[@0x21A | @0x1F6] @0x1F4 :label18 @0x1CF 0x0 @0x1CF 0x0 @0x1CB @0x134 [:label12 | :label11] [:label11 | @0x13]]
0x36B	POP()
0x36C	SWAP1
0x36D	JUMP(POP(:label18))


