# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0xDCFF5581)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label4, 0xF597A499 == POP(@0x13))

:label0
# Stack: []
0x2B	PUSH(:label5)
0x2E	PUSH(:label6)
0x31	PUSH(CALLVALUE())
0x32	PUSH(:label9)
0x35	DUP2
0x36	DUP1
0x40	DUP1
0x46	JUMPI(:label14, !(POP(@0x31) < 0x16345785D8A0000))

# Stack: [@0x31 @0x31 :label9 @0x31 :label6 :label5]
0x4A	JUMP(0x2)

:label1
# Stack: [@0x13]
0x4C	PUSH(:label5)
0x51	PUSH(CALLDATALOAD(0x4))
0x54	PUSH(SLOAD(0x2))
0x5C	PUSH(0x2 ** 0xA0 - 0x1)
0x5D	SWAP1
0x5E	DUP2
0x5F	PUSH(POP(@0x5C) & POP(@0x54))
0x60	PUSH(ORIGIN())
0x61	SWAP1
0x62	SWAP1
0x63	SWAP2
0x6A	JUMPI(:label3, !(POP(@0x60) & POP(@0x5C) == POP(@0x5F)))

# Stack: [@0x51 :label5 @0x13]
0x72	JUMPI(:label2, 0x0 == CALLVALUE())

# Stack: [@0x51 :label5 @0x13]
0x75	PUSH(MLOAD(0x40))
0x7F	PUSH(ORIGIN() & 0x2 ** 0xA0 - 0x1)
0x80	SWAP1
0x81	PUSH(0x0)
0x83	SWAP1
0x84	PUSH(CALLVALUE())
0x85	SWAP1
0x86	DUP3
0x87	DUP2
0x88	DUP2
0x89	DUP2
0x8A	DUP6
0x8B	DUP9
0x8C	DUP4
0x8D	PUSH(CALL(POP(0x0), POP(@0x7F), POP(@0x84), POP(@0x75), POP(0x0), POP(@0x75), POP(0x0)))
0x8E	POP()
0x8F	POP()
0x90	POP()
0x91	POP()
0x92	POP()

:label2
# Stack: [@0x51 :label5 @0x13]
0x94	PUSH(0x2)
0x96	DUP1
0xA2	DUP2
0xA3	PUSH(POP(@0x51) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x2)))
0xA4	SWAP1
0xA5	SSTORE(POP(0x2), POP(@0xA3))

:label3
# Stack: [[0x2B5E3AF16B1880000 | @0x31 | @0x51] [:label6 | :label5] [:label5 | @0x13]]
0xA7	POP()
0xA8	JUMP(POP())

:label4
# Stack: [@0x13]
0xAA	PUSH(:label7)
0xAF	PUSH(CALLDATALOAD(0x4))
0xB0	PUSH(0x0)
0xB2	PUSH(0x0)
0xB4	PUSH(0x0)
0xB6	PUSH(0x0)
0xB8	PUSH(0x20)
0xBC	PUSH(MLOAD(0x40))
0xBD	SWAP1
0xBE	DUP2
0xC2	MSTORE(0x40, POP(@0xBC) + POP(0x20))
0xC3	DUP1
0xC6	DUP1
0xC7	MSTORE(POP(@0xBC), 0x0)
0xCB	POP(0x20 + POP(@0xBC))
0xCC	PUSH(0x0)
0xD0	POP(0x0)
0xD1	DUP7
0xD2	DUP2
0xD4	DUP1
0xDA	JUMPI(0x2, !(POP(@0xAF) < SLOAD(POP(0x0))))

# Stack: [@0xAF 0x0 @0xBC 0x0 0x0 0x0 0x0 @0xAF :label7 @0x13]
0xDB	POP()
0xDC	POP()
0xDD	DUP2
0xDE	PUSH(SLOAD(POP(0x0)))
0xDF	DUP2
0xE0	DUP1
0xE1	MSTORE(POP(0x0), POP(0x0))
0xE4	DUP6
0xE6	PUSH(0x0)
0xE8	DUP1
0xEF	DUP1
0xF0	CODECOPY(POP(0x0), 0x671, 0x20)
0xF1	DUP1
0xF2	PUSH(MLOAD(POP(0x0)))
0xF3	SWAP1
0xF4	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xFF	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0xF2) + POP(@0xAF) * 0x3))
0x100	SWAP5
0x101	PUSH(0x16345785D8A0000)
0x10A	SWAP2
0x10B	DUP9
0x10C	SWAP1
0x10D	DUP2
0x113	JUMPI(0x2, !(POP(@0xAF) < POP(@0xDE)))

# Stack: [@0xAF 0x0 0x16345785D8A0000 @0xBC 0x0 0x0 0x0 @0xFF @0xAF :label7 @0x13]
0x114	POP()
0x115	DUP1
0x116	DUP1
0x117	MSTORE(POP(0x0), POP(0x0))
0x11A	DUP8
0x11C	PUSH(0x0)
0x11E	DUP1
0x125	DUP1
0x126	CODECOPY(POP(0x0), 0x671, 0x20)
0x127	DUP1
0x128	PUSH(MLOAD(POP(0x0)))
0x129	SWAP1
0x12A	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x12B	PUSH(POP(@0x128) + POP(@0xAF) * 0x3)
0x12C	SWAP1
0x12D	POP()
0x131	PUSH(SLOAD(0x1 + POP(@0x12B)))
0x132	PUSH(0x0)
0x134	DUP1
0x135	PUSH(SLOAD(POP(0x0)))
0x136	SWAP2
0x137	SWAP1
0x138	SWAP2
0x139	PUSH(POP(@0x131) / POP(0x16345785D8A0000))
0x13A	SWAP5
0x13B	POP()
0x13C	PUSH(0x16345785D8A0000)
0x145	SWAP2
0x146	DUP9
0x147	SWAP1
0x148	DUP2
0x14E	JUMPI(0x2, !(POP(@0xAF) < POP(@0x135)))

# Stack: [@0xAF 0x0 0x16345785D8A0000 @0xBC 0x0 @0x139 0x0 @0xFF @0xAF :label7 @0x13]
0x14F	POP()
0x150	DUP1
0x151	DUP1
0x152	MSTORE(POP(0x0), POP(0x0))
0x155	DUP8
0x157	PUSH(0x0)
0x159	DUP1
0x160	DUP1
0x161	CODECOPY(POP(0x0), 0x671, 0x20)
0x162	DUP1
0x163	PUSH(MLOAD(POP(0x0)))
0x164	SWAP1
0x165	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x166	PUSH(POP(@0x163) + POP(@0xAF) * 0x3)
0x167	SWAP1
0x168	POP()
0x16C	PUSH(SLOAD(0x2 + POP(@0x166)))
0x16D	PUSH(0x0)
0x16F	DUP1
0x170	PUSH(SLOAD(POP(0x0)))
0x171	SWAP2
0x172	SWAP1
0x173	SWAP2
0x174	PUSH(POP(@0x16C) / POP(0x16345785D8A0000))
0x175	SWAP4
0x176	POP()
0x177	PUSH(0x16345785D8A0000)
0x180	SWAP2
0x181	DUP9
0x182	SWAP1
0x183	DUP2
0x189	JUMPI(0x2, !(POP(@0xAF) < POP(@0x170)))

# Stack: [@0xAF 0x0 0x16345785D8A0000 @0xBC @0x174 @0x139 0x0 @0xFF @0xAF :label7 @0x13]
0x18A	POP()
0x18B	DUP1
0x18C	DUP1
0x18D	MSTORE(POP(0x0), POP(0x0))
0x190	DUP8
0x192	PUSH(0x0)
0x194	DUP1
0x19B	DUP1
0x19C	CODECOPY(POP(0x0), 0x671, 0x20)
0x19D	DUP1
0x19E	PUSH(MLOAD(POP(0x0)))
0x19F	SWAP1
0x1A0	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x1A1	PUSH(POP(@0x19E) + POP(@0xAF) * 0x3)
0x1A2	SWAP1
0x1A3	POP()
0x1A7	PUSH(SLOAD(0x2 + POP(@0x1A1)))
0x1A8	PUSH(0x0)
0x1AA	DUP1
0x1AB	PUSH(SLOAD(POP(0x0)))
0x1AC	DUP9
0x1AD	SWAP1
0x1AE	DUP2
0x1B4	JUMPI(0x2, !(POP(@0xAF) < POP(@0x1AB)))

# Stack: [@0xAF 0x0 @0x1A7 0x16345785D8A0000 @0xBC @0x174 @0x139 0x0 @0xFF @0xAF :label7 @0x13]
0x1B5	POP()
0x1B6	POP()
0x1B7	PUSH(0x3)
0x1B9	SWAP8
0x1BA	SWAP1
0x1BB	SWAP8
0x1E0	PUSH(0x40)
0x1E2	DUP1
0x1E3	PUSH(MLOAD(POP(0x40)))
0x1E6	DUP1
0x1E8	DUP2
0x1E9	MSTORE(POP(0x40), POP(@0x1E3) + 0x80)
0x1EC	DUP1
0x1ED	MSTORE(POP(@0x1E3), 0x5B)
0x211	DUP1
0x213	MSTORE(POP(@0x1E3) + 0x20, 0x76616C756573206172652073686F776E20696E20612064656E6F6D696E617469)
0x214	PUSH(0x6F6E206F66203130302066696E6E6579732028203130302066696E6E6579203D)
0x235	SWAP2
0x236	DUP2
0x237	PUSH(POP(@0x1E3) + POP(0x40))
0x238	SWAP2
0x239	SWAP1
0x23A	SWAP2
0x23B	MSTORE(POP(@0x237), POP(0x6F6E206F66203130302066696E6E6579732028203130302066696E6E6579203D))
0x25F	DUP1
0x261	MSTORE(POP(@0x1E3) + 0x60, 0x20302E31206574686572203D206D696E696D756D20696E707574290000000000)
0x262	SWAP6
0x263	SWAP8
0x264	SWAP7
0x266	PUSH((POP(@0x1A7) + SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 + POP(0x3) * POP(@0xAF))) / POP(0x16345785D8A0000))
0x267	SWAP6
0x268	SWAP3
0x269	SWAP5
0x26A	SWAP2
0x26B	SWAP4
0x26C	POP()
0x26D	SWAP1
0x26E	SWAP2
0x26F	SWAP1
0x270	POP()
0x271	JUMP(POP(:label7))

:label5
# Stack: []
0x273	STOP()

:label6
# Stack: [[:label3 | :label5]]
0x275	JUMP(POP())

:label7
# Stack: [@0x1E3 @0x174 @0x139 @0x266 @0xFF @0x13]
0x279	PUSH(MLOAD(0x40))
0x27A	DUP1
0x27B	DUP7
0x285	DUP1
0x286	MSTORE(POP(@0x279), 0x2 ** 0xA0 - 0x1 & POP(@0xFF))
0x289	PUSH(0x20 + POP(@0x279))
0x28A	DUP6
0x28B	DUP2
0x28C	MSTORE(POP(@0x289), POP(@0x266))
0x28F	PUSH(0x20 + POP(@0x289))
0x290	DUP5
0x291	DUP2
0x292	MSTORE(POP(@0x28F), POP(@0x139))
0x295	PUSH(0x20 + POP(@0x28F))
0x296	DUP4
0x297	DUP2
0x298	MSTORE(POP(@0x295), POP(@0x174))
0x29B	PUSH(0x20 + POP(@0x295))
0x29C	DUP1
0x29F	PUSH(0x20 + POP(@0x29B))
0x2A0	DUP3
0x2A1	DUP2
0x2A3	DUP2
0x2A4	MSTORE(POP(@0x29B), POP(@0x29F) - POP(@0x279))
0x2A5	DUP4
0x2A6	DUP2
0x2A7	DUP2
0x2A9	DUP1
0x2AA	MSTORE(POP(@0x29F), MLOAD(POP(@0x1E3)))
0x2AD	PUSH(0x20 + POP(@0x29F))
0x2AE	SWAP2
0x2AF	POP()
0x2B0	DUP1
0x2B1	PUSH(MLOAD(POP(@0x1E3)))
0x2B2	SWAP1
0x2B5	PUSH(0x20 + POP(@0x1E3))
0x2B6	SWAP1
0x2B7	DUP1
0x2B8	DUP4
0x2B9	DUP4
0x2BA	DUP3
0x2BB	SWAP1
0x2C2	DUP2
0x2CD	PUSH(CALL(0x3 + 0xF * (0x1F + POP(@0x2B1)) / 0x20, 0x4, 0x0, POP(@0x2B5), POP(@0x2B1), POP(@0x2AD), POP(@0x2B1)))
0x2CE	POP()
0x2CF	SWAP1
0x2D0	POP()
0x2D1	SWAP1
0x2D2	DUP2
0x2D3	PUSH(POP(@0x2B1) + POP(@0x2AD))
0x2D4	SWAP1
0x2D7	PUSH(0x1F & POP(@0x2B1))
0x2D8	DUP1
0x2DD	JUMPI(:label8, !POP(@0x2D7))

# Stack: [@0x2D7 @0x2D3 @0x29B @0x279 @0x1E3 @0x174 @0x139 @0x266 @0xFF @0x13]
0x2DE	DUP1
0x2DF	DUP3
0x2E0	PUSH(POP(@0x2D3) - POP(@0x2D7))
0x2E1	DUP1
0x2E5	DUP2
0x2F0	DUP1
0x2F1	MSTORE(POP(@0x2E0), ~(0x100 ** (0x20 - POP(@0x2D7)) - 0x1) & MLOAD(POP(@0x2E0)))
0x2F4	PUSH(0x20 + POP(@0x2E0))
0x2F5	SWAP2
0x2F6	POP()

:label8
# Stack: [@0x2D7 [@0x2D3 | @0x2F4] @0x29B @0x279 @0x1E3 @0x174 @0x139 @0x266 @0xFF @0x13]
0x2F8	POP()
0x2F9	SWAP7
0x2FA	POP()
0x2FB	POP()
0x2FC	POP()
0x2FD	POP()
0x2FE	POP()
0x2FF	POP()
0x300	POP()
0x303	PUSH(MLOAD(0x40))
0x304	DUP1
0x305	SWAP2
0x306	PUSH(POP() - POP(@0x303))
0x307	SWAP1
0x308	RETURN(POP(@0x303), POP(@0x306))

:label9
# Stack: [[0x2B5E3AF16B1880000 | @0x31] @0x31 :label6 :label5]
0x30A	SWAP1
0x30B	POP()
0x30F	DUP1
0x312	PUSH(SLOAD(0x2))
0x315	PUSH(MLOAD(0x40))
0x31D	PUSH(0x2 ** 0xA0 - 0x1)
0x31E	SWAP1
0x31F	SWAP1
0x320	SWAP2
0x321	PUSH(POP(@0x31D) & POP(@0x312))
0x322	SWAP1
0x323	PUSH(0x0)
0x325	SWAP1
0x32B	DUP4
0x32D	PUSH(POP() * 0x19 / 0x3E8)
0x32E	SWAP1
0x32F	DUP3
0x330	DUP2
0x331	DUP2
0x332	DUP2
0x333	DUP6
0x334	DUP9
0x335	DUP4
0x336	PUSH(CALL(POP(0x0), POP(@0x321), POP(@0x32D), POP(@0x315), POP(0x0), POP(@0x315), POP(0x0)))
0x337	POP()
0x338	POP()
0x339	POP()
0x33A	POP()
0x33B	POP()
0x33C	POP()
0x33D	JUMP(:label10)

:label10
# Stack: [[0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x33F	PUSH(:label12)
0x342	DUP2
0x343	PUSH(0x0)
0x345	DUP1
0x346	PUSH(SLOAD(POP(0x0)))
0x349	DUP1
0x34A	PUSH(POP(@0x346) + 0x1)
0x34B	DUP1
0x34C	DUP4
0x34D	SSTORE(POP(0x0), POP(@0x34A))
0x34E	SWAP1
0x34F	SWAP2
0x350	SWAP1
0x351	DUP3
0x352	DUP1
0x353	PUSH(!POP(@0x346))
0x354	DUP2
0x355	SWAP1
0x35A	JUMPI(:label16, POP(@0x353) > POP(@0x34A))

# Stack: [@0x346 @0x34A 0x0 @0x346 [0x2B5E3AF16B1880000 | @0x31] :label12 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x35D	PUSH(0x3 * POP(@0x346))
0x35E	DUP1
0x362	DUP2
0x365	MSTORE(0x0, POP(0x0))
0x36A	PUSH(SHA3(0x0, 0x20))
0x36B	SWAP1
0x36C	DUP2
0x36D	PUSH(POP(@0x36A) + POP(@0x35D))
0x36E	SWAP1
0x36F	PUSH(POP(@0x36A) + 0x3 * POP(@0x34A))
0x370	PUSH(:label16)
0x373	SWAP2
0x374	SWAP1

:label11
# Stack: [[@0x36F | @0x391] @0x36D :label16 @0x34A 0x0 @0x346 [0x2B5E3AF16B1880000 | @0x31] :label12 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x376	DUP1
0x377	DUP3
0x37D	JUMPI(:label17, !(POP(@0x36D) > POP()))

# Stack: [[@0x36F | @0x391] @0x36D :label16 @0x34A 0x0 @0x346 [0x2B5E3AF16B1880000 | @0x31] :label12 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x37E	DUP1
0x38A	DUP1
0x38B	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x38C	PUSH(0x0)
0x390	DUP2
0x391	PUSH(POP() + 0x1)
0x392	DUP2
0x393	DUP2
0x394	SSTORE(POP(@0x391), POP(0x0))
0x395	PUSH(0x2)
0x397	SWAP3
0x398	SWAP1
0x399	SWAP3
0x39B	SSTORE(POP(0x2) + POP(), POP(0x0))
0x39F	JUMP(:label11)

:label12
# Stack: [[0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x3A1	PUSH(:label3)

:label13
# Stack: [:label3 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x3B6	JUMPI(:label6, 0x0 == BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()))

# Stack: [:label3 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x3B9	PUSH(SLOAD(0x1))
0x3BA	PUSH(0x0)
0x3BC	DUP1
0x3BD	PUSH(SLOAD(POP(0x0)))
0x3C8	PUSH(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()))
0x3C9	SWAP2
0x3CA	SWAP1
0x3CB	DUP2
0x3D1	JUMPI(0x2, !(POP(@0x3B9) < POP(@0x3BD)))

# Stack: [@0x3B9 0x0 @0x3C8 :label3 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x3D2	SWAP1
0x3D3	DUP1
0x3D4	MSTORE(POP(0x0), POP(0x0))
0x3D8	PUSH(0x0)
0x3DA	DUP1
0x3E1	DUP1
0x3E2	CODECOPY(POP(0x0), 0x691, 0x20)
0x3E3	DUP1
0x3E4	PUSH(MLOAD(POP(0x0)))
0x3E5	SWAP1
0x3E6	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3EE	JUMPI(:label18, !(SLOAD(POP(@0x3E4) + 0x3 * POP(@0x3B9)) > POP(@0x3C8)))

# Stack: [:label3 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x3F1	PUSH(SLOAD(0x1))
0x3F2	PUSH(0x0)
0x3F4	DUP1
0x3F5	PUSH(SLOAD(POP(0x0)))
0x400	PUSH(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()))
0x401	SWAP2
0x402	SWAP1
0x403	DUP2
0x409	JUMPI(0x2, !(POP(@0x3F1) < POP(@0x3F5)))

# Stack: [@0x3F1 0x0 @0x400 :label3 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x40D	PUSH(0x0)
0x40F	DUP1
0x416	DUP1
0x417	CODECOPY(POP(0x0), 0x691, 0x20)
0x418	DUP1
0x419	PUSH(MLOAD(POP(0x0)))
0x41A	SWAP1
0x41B	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x41C	PUSH(POP(@0x419) + 0x3 * POP(@0x3F1))
0x41D	DUP1
0x41E	PUSH(SLOAD(POP(@0x41C)))
0x41F	SWAP3
0x420	SWAP1
0x421	SWAP3
0x422	PUSH(POP(@0x41E) - POP(@0x400))
0x423	SWAP1
0x424	SWAP2
0x425	SSTORE(POP(@0x41C), POP(@0x422))
0x428	PUSH(SLOAD(0x1))
0x429	DUP2
0x42A	PUSH(SLOAD(POP(0x0)))
0x435	PUSH(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()))
0x436	SWAP2
0x437	SWAP1
0x438	SWAP1
0x439	DUP2
0x43F	JUMPI(0x2, !(POP(@0x428) < POP(@0x42A)))

# Stack: [@0x428 0x0 @0x435 :label3 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x464	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 + 0x3 * POP(@0x428))
0x465	DUP1
0x466	PUSH(SLOAD(POP(@0x464)))
0x467	SWAP1
0x468	SWAP3
0x469	PUSH(POP(@0x435) + POP(@0x466))
0x46A	SWAP1
0x46B	SWAP2
0x46C	SSTORE(POP(@0x464), POP(@0x469))
0x46F	PUSH(SLOAD(0x1))
0x470	DUP2
0x472	DUP1
0x478	JUMPI(0x2, !(POP(@0x46F) < SLOAD(POP(0x0))))

# Stack: [@0x46F 0x0 :label3 [@0x31 | 0x2B5E3AF16B1880000] :label6 :label5]
0x47B	PUSH(MLOAD(0x40))
0x47C	PUSH(0x3)
0x47E	SWAP2
0x47F	SWAP1
0x480	SWAP2
0x482	PUSH(0x0)
0x484	DUP1
0x48B	DUP1
0x48C	CODECOPY(POP(0x0), 0x671, 0x20)
0x48D	DUP1
0x48E	PUSH(MLOAD(POP(0x0)))
0x48F	SWAP1
0x490	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x492	PUSH(SLOAD(POP(@0x48E) + POP(0x3) * POP(@0x46F)))
0x49A	PUSH(0x2 ** 0xA0 - 0x1)
0x49B	SWAP1
0x49C	DUP2
0x49D	PUSH(POP(@0x49A) & POP(@0x492))
0x49E	SWAP3
0x49F	SWAP2
0x4A0	PUSH(ADDRESS())
0x4A1	SWAP1
0x4A2	SWAP2
0x4A4	PUSH(BALANCE(POP(@0x49A) & POP(@0x4A0)))
0x4A5	SWAP1
0x4A6	DUP3
0x4A7	DUP2
0x4A8	DUP2
0x4A9	DUP2
0x4AA	DUP6
0x4AB	DUP9
0x4AC	DUP4
0x4AD	PUSH(CALL(POP(0x0), POP(@0x49D), POP(@0x4A4), POP(@0x47B), POP(0x0), POP(@0x47B), POP(0x0)))
0x4AE	SWAP4
0x4AF	POP()
0x4B0	POP()
0x4B1	POP()
0x4B2	POP()
0x4B3	POP()
0x4B7	JUMP(:label19)

:label14
# Stack: [@0x31 @0x31 :label9 @0x31 :label6 :label5]
0x4C3	DUP1
0x4C9	JUMPI(:label15, !(POP(@0x31) > 0x2B5E3AF16B1880000))

# Stack: [@0x31 @0x31 :label9 @0x31 :label6 :label5]
0x4CA	POP()
0x4CD	PUSH(MLOAD(0x40))
0x4CE	PUSH(0x2B5E3AF16B1880000)
0x4D8	SWAP1
0x4E2	PUSH(ORIGIN() & 0x2 ** 0xA0 - 0x1)
0x4E3	SWAP1
0x4E4	PUSH(0x0)
0x4E6	SWAP1
0x4F2	DUP5
0x4F3	PUSH(POP(@0x31) + ~0x2B5E3AF16B187FFFF)
0x4F4	SWAP1
0x4F5	DUP3
0x4F6	DUP2
0x4F7	DUP2
0x4F8	DUP2
0x4F9	DUP6
0x4FA	DUP9
0x4FB	DUP4
0x4FC	PUSH(CALL(POP(0x0), POP(@0x4E2), POP(@0x4F3), POP(@0x4CD), POP(0x0), POP(@0x4CD), POP(0x0)))
0x4FD	POP()
0x4FE	POP()
0x4FF	POP()
0x500	POP()
0x501	POP()

:label15
# Stack: [[0x2B5E3AF16B1880000 | @0x31] @0x31 :label9 @0x31 :label6 :label5]
0x503	SWAP2
0x504	SWAP1
0x505	POP()
0x506	JUMP(POP(:label9))

:label16
# Stack: [[@0x346 | @0x36D] @0x34A 0x0 @0x346 [0x2B5E3AF16B1880000 | @0x31] :label12 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x508	POP()
0x509	POP()
0x50A	PUSH(0x0)
0x50C	DUP1
0x50D	PUSH(SLOAD(POP(0x0)))
0x50E	PUSH(ORIGIN())
0x50F	SWAP4
0x510	POP()
0x511	SWAP1
0x512	SWAP2
0x513	POP()
0x517	DUP1
0x518	PUSH(POP(@0x50D) + ~0x0)
0x519	SWAP1
0x51A	DUP2
0x520	JUMPI(0x2, !(POP(@0x518) < POP(@0x50D)))

# Stack: [@0x518 0x0 @0x50E [0x2B5E3AF16B1880000 | @0x31] :label12 [@0x31 | 0x2B5E3AF16B1880000] :label6 :label5]
0x521	DUP2
0x522	DUP1
0x523	MSTORE(POP(0x0), POP(0x0))
0x527	PUSH(0x0)
0x529	DUP1
0x530	DUP1
0x531	CODECOPY(POP(0x0), 0x671, 0x20)
0x532	DUP1
0x533	PUSH(MLOAD(POP(0x0)))
0x534	SWAP1
0x535	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x536	PUSH(POP(@0x533) + 0x3 * POP(@0x518))
0x537	DUP1
0x542	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x536)))
0x543	SWAP1
0x544	SWAP3
0x545	PUSH(POP(@0x50E) | POP(@0x542))
0x546	SWAP1
0x547	SWAP2
0x548	SSTORE(POP(@0x536), POP(@0x545))
0x549	DUP1
0x54A	PUSH(SLOAD(POP(0x0)))
0x54D	DUP3
0x54E	PUSH(POP() * 0x2)
0x54F	SWAP2
0x550	SWAP1
0x554	DUP1
0x555	PUSH(POP(@0x54A) + ~0x0)
0x556	SWAP1
0x557	DUP2
0x55D	JUMPI(0x2, !(POP(@0x555) < POP(@0x54A)))

# Stack: [@0x555 0x0 @0x54E [0x2B5E3AF16B1880000 | @0x31] :label12 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x561	PUSH(0x0)
0x563	DUP1
0x56A	DUP1
0x56B	CODECOPY(POP(0x0), 0x691, 0x20)
0x56C	DUP1
0x56D	PUSH(MLOAD(POP(0x0)))
0x56E	SWAP1
0x56F	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x570	PUSH(POP(@0x56D) + 0x3 * POP(@0x555))
0x571	SWAP2
0x572	SWAP1
0x573	SWAP2
0x574	SSTORE(POP(@0x570), POP(@0x54E))
0x575	POP()
0x576	POP()
0x577	JUMP(POP(:label12))

:label17
# Stack: [[@0x391 | @0x36F] @0x36D :label16 @0x34A 0x0 @0x346 [0x2B5E3AF16B1880000 | @0x31] :label12 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x579	POP()
0x57A	SWAP1
0x57B	JUMP(POP(:label16))

:label18
# Stack: [:label3 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x57F	PUSH(SLOAD(0x1))
0x580	PUSH(0x0)
0x582	DUP1
0x583	PUSH(SLOAD(POP(0x0)))
0x584	SWAP1
0x585	SWAP2
0x586	SWAP1
0x587	DUP2
0x58D	JUMPI(0x2, !(POP(@0x57F) < POP(@0x583)))

# Stack: [@0x57F 0x0 :label3 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x58E	DUP2
0x58F	PUSH(SLOAD(POP(0x0)))
0x590	DUP2
0x591	DUP1
0x592	MSTORE(POP(0x0), POP(0x0))
0x595	DUP1
0x597	PUSH(0x0)
0x599	DUP1
0x5A0	DUP1
0x5A1	CODECOPY(POP(0x0), 0x691, 0x20)
0x5A2	DUP1
0x5A3	PUSH(MLOAD(POP(0x0)))
0x5A4	SWAP1
0x5A5	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x5A7	PUSH(SLOAD(POP(@0x5A3) + POP(@0x57F) * 0x3))
0x5A8	SWAP2
0x5A9	SWAP1
0x5AA	SWAP1
0x5AB	DUP2
0x5B1	JUMPI(0x2, !(POP(@0x57F) < POP(@0x58F)))

# Stack: [@0x57F 0x0 @0x5A7 :label3 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x5B2	DUP2
0x5B3	DUP1
0x5B4	MSTORE(POP(0x0), POP(0x0))
0x5B8	PUSH(0x0)
0x5BA	DUP1
0x5C1	DUP1
0x5C2	CODECOPY(POP(0x0), 0x671, 0x20)
0x5C3	DUP1
0x5C4	PUSH(MLOAD(POP(0x0)))
0x5C5	SWAP1
0x5C6	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x5C7	PUSH(POP(@0x5C4) + 0x3 * POP(@0x57F))
0x5C8	SWAP1
0x5C9	POP()
0x5CA	PUSH(0x1)
0x5CC	SWAP1
0x5CD	DUP2
0x5CE	PUSH(POP(0x1) + POP(@0x5C7))
0x5CF	DUP1
0x5D0	PUSH(SLOAD(POP(@0x5CE)))
0x5D1	SWAP1
0x5D2	SWAP3
0x5D3	PUSH(POP(@0x5A7) + POP(@0x5D0))
0x5D4	SWAP1
0x5D5	SWAP2
0x5D6	SSTORE(POP(@0x5CE), POP(@0x5D3))
0x5D7	PUSH(SLOAD(POP(0x1)))
0x5D8	PUSH(0x0)
0x5DA	DUP1
0x5DB	PUSH(SLOAD(POP(0x0)))
0x5DC	SWAP1
0x5DD	SWAP2
0x5DE	SWAP1
0x5DF	DUP2
0x5E5	JUMPI(0x2, !(POP(@0x5D7) < POP(@0x5DB)))

# Stack: [@0x5D7 0x0 :label3 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x5E8	PUSH(SLOAD(0x1))
0x5E9	DUP3
0x5EA	PUSH(SLOAD(POP(0x0)))
0x5EB	PUSH(0x3)
0x5ED	SWAP2
0x5EE	SWAP1
0x5EF	SWAP3
0x5F1	PUSH(0x0)
0x5F3	DUP1
0x5FA	DUP1
0x5FB	CODECOPY(POP(0x0), 0x671, 0x20)
0x5FC	DUP1
0x5FD	PUSH(MLOAD(POP(0x0)))
0x5FE	SWAP1
0x5FF	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x60A	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x5FD) + POP(0x3) * POP(@0x5D7)))
0x60B	SWAP3
0x60C	SWAP2
0x60D	DUP3
0x60E	SWAP2
0x60F	SWAP1
0x610	DUP2
0x616	JUMPI(0x2, !(POP(@0x5E8) < POP(@0x5EA)))

# Stack: [@0x5E8 0x0 0x0 @0x60A :label3 [0x2B5E3AF16B1880000 | @0x31] :label6 :label5]
0x619	PUSH(MLOAD(0x40))
0x61A	PUSH(0x3)
0x61C	SWAP2
0x61D	SWAP1
0x61E	SWAP2
0x620	PUSH(0x0)
0x622	DUP1
0x629	DUP1
0x62A	CODECOPY(POP(0x0), 0x691, 0x20)
0x62B	DUP1
0x62C	PUSH(MLOAD(POP(0x0)))
0x62D	SWAP1
0x62E	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x630	PUSH(SLOAD(POP(@0x62C) + POP(0x3) * POP(@0x5E8)))
0x631	SWAP2
0x632	DUP2
0x633	DUP2
0x634	DUP2
0x635	DUP6
0x636	DUP9
0x637	DUP4
0x638	PUSH(CALL(POP(0x0), POP(@0x60A), POP(@0x630), POP(@0x619), POP(0x0), POP(@0x619), POP(0x0)))
0x639	POP()
0x63A	POP()
0x63D	PUSH(SLOAD(0x1))
0x63E	DUP3
0x63F	PUSH(SLOAD(POP(0x0)))
0x640	SWAP3
0x641	SWAP4
0x642	POP()
0x643	SWAP2
0x644	DUP3
0x646	PUSH(!(POP(@0x63D) < POP(@0x63F)))
0x647	SWAP1
0x648	POP()
0x64C	JUMPI(0x2, POP(@0x646))

# Stack: [@0x63D 0x0 :label3 [@0x31 | 0x2B5E3AF16B1880000] :label6 :label5]
0x64D	DUP2
0x64E	DUP1
0x64F	MSTORE(POP(0x0), POP(0x0))
0x653	PUSH(0x0)
0x655	DUP1
0x65C	DUP1
0x65D	CODECOPY(POP(0x0), 0x691, 0x20)
0x65E	DUP1
0x65F	PUSH(MLOAD(POP(0x0)))
0x660	SWAP1
0x661	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x663	SSTORE(POP(@0x65F) + 0x3 * POP(@0x63D), POP(0x0))
0x664	PUSH(0x1)
0x666	DUP1
0x668	DUP1
0x669	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x66A	SWAP1
0x66B	SSTORE(POP(0x1), POP(@0x669))

:label19
# Stack: [:label3 [@0x31 | 0x2B5E3AF16B1880000] :label6 :label5]
0x670	JUMP(:label13)


