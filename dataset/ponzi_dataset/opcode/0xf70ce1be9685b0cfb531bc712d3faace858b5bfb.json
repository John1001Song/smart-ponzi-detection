# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x57	PUSH(:label10)
0x5A	PUSH(:label11)
0x60	JUMP(:label8)

:label1
# Stack: [@0x13]
0x62	PUSH(:label10)
0x67	PUSH(CALLDATALOAD(0x4))
0x6A	PUSH(SLOAD(0x3))
0x72	PUSH(0x2 ** 0xA0 - 0x1)
0x73	SWAP1
0x74	DUP2
0x75	PUSH(POP(@0x72) & POP(@0x6A))
0x76	PUSH(CALLER())
0x77	SWAP1
0x78	SWAP1
0x79	SWAP2
0x80	JUMPI(:label2, !(POP(@0x76) & POP(@0x72) == POP(@0x75)))

# Stack: [@0x67 :label10 @0x13]
0x81	PUSH(0x3)
0x83	DUP1
0x8F	DUP2
0x90	PUSH(POP(@0x67) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x3)))
0x91	SWAP1
0x92	SSTORE(POP(0x3), POP(@0x90))

:label2
# Stack: [@0x67 :label10 @0x13]
0x94	POP()
0x95	JUMP(POP(:label10))

:label3
# Stack: [@0x13]
0x97	PUSH(:label12)
0xA5	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x3))
0xA6	DUP2
0xA7	JUMP(POP(:label12))

:label4
# Stack: [@0x13]
0xA9	PUSH(:label13)
0xAE	PUSH(CALLDATALOAD(0x4))
0xAF	PUSH(0x0)
0xB1	DUP1
0xB2	PUSH(SLOAD(POP(0x0)))
0xB3	DUP2
0xB4	SWAP1
0xB5	DUP2
0xBB	JUMPI(0x2, !(POP(@0xAE) < POP(@0xB2)))

# Stack: [@0xAE 0x0 @0xAE :label13 @0x13]
0xBC	POP()
0xBD	DUP1
0xBE	MSTORE(POP(0x0), POP(0x0))
0xC1	PUSH(0x2 * POP(@0xAE))
0xE3	DUP1
0xE5	PUSH(SLOAD(POP(@0xC1) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0xE6	PUSH(0x0)
0xE8	DUP1
0xEF	DUP1
0xF0	CODECOPY(POP(0x0), 0x3AA, 0x20)
0xF1	DUP1
0xF2	PUSH(MLOAD(POP(0x0)))
0xF3	SWAP1
0xF4	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xF5	SWAP1
0xF6	SWAP1
0xF7	SWAP2
0xF9	PUSH(SLOAD(POP(@0xF2) + POP(@0xC1)))
0x101	PUSH(0x2 ** 0xA0 - 0x1)
0x102	SWAP2
0x103	SWAP1
0x104	SWAP2
0x105	PUSH(POP(@0x101) & POP(@0xE5))
0x106	SWAP1
0x107	DUP3
0x108	JUMP(POP(:label13))

:label5
# Stack: [@0x13]
0x10A	PUSH(:label14)
0x10F	PUSH(SLOAD(0x1))
0x110	DUP2
0x111	JUMP(POP(:label14))

:label6
# Stack: [@0x13]
0x113	PUSH(:label14)
0x118	PUSH(SLOAD(0x2))
0x119	DUP2
0x11A	JUMP(POP(:label14))

:label7
# Stack: [@0x13]
0x11C	PUSH(:label10)

:label8
# Stack: [[:label11 | :label10] [@0x13 | :label10]]
0x120	PUSH(0x0)
0x122	PUSH(0x0)
0x124	PUSH(0x0)
0x12E	JUMPI(:label15, !(CALLVALUE() < 0x0))

# Stack: [0x0 0x0 0x0 [:label11 | :label10] [:label10 | @0x13]]
0x131	PUSH(MLOAD(0x40))
0x13B	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x13C	SWAP1
0x13D	DUP3
0x13E	SWAP1
0x13F	PUSH(CALLVALUE())
0x140	SWAP1
0x141	DUP3
0x142	DUP2
0x143	DUP2
0x144	DUP2
0x145	DUP6
0x146	DUP9
0x147	DUP4
0x148	PUSH(CALL(POP(0x0), POP(@0x13B), POP(@0x13F), POP(@0x131), POP(0x0), POP(@0x131), POP(0x0)))
0x149	POP()
0x14A	POP()
0x14B	POP()
0x14C	POP()
0x14D	POP()

:label9
# Stack: [[0x0 | @0x33E] [0x0 | @0x203] [0x0 | 0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x14F	POP()
0x150	POP()
0x151	POP()
0x152	JUMP(POP())

:label10
# Stack: []
0x154	STOP()

:label11
# Stack: [:label10]
0x156	JUMP(POP(:label10))

:label12
# Stack: [@0xA5 :label12 @0x13]
0x158	PUSH(0x40)
0x15A	DUP1
0x15B	PUSH(MLOAD(POP(0x40)))
0x163	PUSH(0x2 ** 0xA0 - 0x1)
0x164	SWAP3
0x165	SWAP1
0x166	SWAP3
0x168	DUP2
0x169	MSTORE(POP(@0x15B), POP(@0x163) & POP(@0xA5))
0x16A	PUSH(MLOAD(POP(0x40)))
0x16B	SWAP1
0x16C	DUP2
0x16D	SWAP1
0x171	PUSH(0x20 + POP(@0x15B) - POP(@0x16A))
0x172	SWAP1
0x173	RETURN(POP(@0x16A), POP(@0x171))

:label13
# Stack: [@0xF9 @0x105 :label13 @0x13]
0x177	PUSH(MLOAD(0x40))
0x178	DUP1
0x179	DUP4
0x183	DUP1
0x184	MSTORE(POP(@0x177), 0x2 ** 0xA0 - 0x1 & POP(@0x105))
0x187	PUSH(0x20 + POP(@0x177))
0x188	DUP3
0x189	DUP2
0x18A	MSTORE(POP(@0x187), POP(@0xF9))
0x18D	PUSH(0x20 + POP(@0x187))
0x18E	SWAP3
0x18F	POP()
0x190	POP()
0x191	POP()
0x194	PUSH(MLOAD(0x40))
0x195	DUP1
0x196	SWAP2
0x197	PUSH(POP(@0x18D) - POP(@0x194))
0x198	SWAP1
0x199	RETURN(POP(@0x194), POP(@0x197))

:label14
# Stack: [[@0x118 | @0x10F] [:label14 | :label14] @0x13]
0x19B	PUSH(0x40)
0x19D	DUP1
0x19E	PUSH(MLOAD(POP(0x40)))
0x19F	SWAP2
0x1A0	DUP3
0x1A1	MSTORE(POP(@0x19E), POP())
0x1A2	PUSH(MLOAD(POP(0x40)))
0x1A3	SWAP1
0x1A4	DUP2
0x1A5	SWAP1
0x1A9	PUSH(0x20 + POP(@0x19E) - POP(@0x1A2))
0x1AA	SWAP1
0x1AB	RETURN(POP(@0x1A2), POP(@0x1A9))

:label15
# Stack: [0x0 0x0 0x0 [:label11 | :label10] [:label10 | @0x13]]
0x1BD	JUMPI(:label16, !(CALLVALUE() > 0x2B5E3AF16B1880000))

# Stack: [0x0 0x0 0x0 [:label11 | :label10] [:label10 | @0x13]]
0x1C0	PUSH(MLOAD(0x40))
0x1CA	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x1CB	SWAP1
0x1CC	PUSH(0x0)
0x1CE	SWAP1
0x1DB	PUSH(CALLVALUE() + ~0x2B5E3AF16B187FFFF)
0x1DC	SWAP1
0x1DD	DUP3
0x1DE	DUP2
0x1DF	DUP2
0x1E0	DUP2
0x1E1	DUP6
0x1E2	DUP9
0x1E3	DUP4
0x1E4	PUSH(CALL(POP(0x0), POP(@0x1CA), POP(@0x1DB), POP(@0x1C0), POP(0x0), POP(@0x1C0), POP(0x0)))
0x1E5	POP()
0x1E6	PUSH(0x2B5E3AF16B1880000)
0x1F0	SWAP7
0x1F1	POP()
0x1F2	PUSH(:label17)
0x1F5	SWAP4
0x1F6	POP()
0x1F7	POP()
0x1F8	POP()
0x1F9	POP()
0x1FA	JUMP(POP(:label17))

:label16
# Stack: [0x0 0x0 0x0 [:label10 | :label11] [:label10 | @0x13]]
0x1FC	PUSH(CALLVALUE())
0x1FD	SWAP3
0x1FE	POP()

:label17
# Stack: [0x0 0x0 [0x2B5E3AF16B1880000 | @0x1FC] [:label10 | :label11] [:label10 | @0x13]]
0x200	PUSH(0x0)
0x202	DUP1
0x203	PUSH(SLOAD(POP(0x0)))
0x206	DUP1
0x207	PUSH(POP(@0x203) + 0x1)
0x208	DUP1
0x209	DUP4
0x20A	SSTORE(POP(0x0), POP(@0x207))
0x20B	SWAP1
0x20C	SWAP4
0x20D	POP()
0x20E	SWAP1
0x20F	DUP2
0x210	DUP5
0x211	DUP1
0x212	PUSH(!POP(@0x203))
0x213	DUP2
0x214	SWAP1
0x219	JUMPI(:label19, POP(@0x212) > POP(@0x207))

# Stack: [@0x203 @0x207 0x0 @0x207 0x0 @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x21C	PUSH(0x2 * POP(@0x203))
0x21D	DUP1
0x221	DUP2
0x224	MSTORE(0x0, POP(0x0))
0x229	PUSH(SHA3(0x0, 0x20))
0x22A	SWAP1
0x22B	DUP2
0x22C	PUSH(POP(@0x229) + POP(@0x21C))
0x22D	SWAP1
0x22E	PUSH(POP(@0x229) + 0x2 * POP(@0x207))
0x22F	PUSH(:label19)
0x232	SWAP2
0x233	SWAP1

:label18
# Stack: [[@0x22E | @0x252] @0x22C :label19 @0x207 0x0 @0x207 0x0 @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x235	DUP1
0x236	DUP3
0x23C	JUMPI(:label21, !(POP(@0x22C) > POP()))

# Stack: [[@0x22E | @0x252] @0x22C :label19 @0x207 0x0 @0x207 0x0 @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x23D	DUP1
0x249	DUP1
0x24A	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x24B	PUSH(0x0)
0x24D	PUSH(0x1)
0x24F	SWAP1
0x250	SWAP1
0x251	SWAP2
0x252	PUSH(POP(0x1) + POP())
0x253	SWAP1
0x254	DUP2
0x255	SSTORE(POP(@0x252), POP(0x0))
0x259	JUMP(:label18)

:label19
# Stack: [[@0x203 | @0x22C] @0x207 0x0 @0x207 0x0 @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x25B	POP()
0x25C	POP()
0x25D	POP()
0x25E	POP()
0x25F	PUSH(CALLER())
0x260	PUSH(0x0)
0x264	POP(0x0)
0x265	DUP4
0x266	DUP2
0x268	DUP1
0x26E	JUMPI(0x2, !(POP(@0x203) < SLOAD(POP(0x0))))

# Stack: [@0x203 0x0 @0x25F 0x0 @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x26F	DUP2
0x270	DUP1
0x271	MSTORE(POP(0x0), POP(0x0))
0x296	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x203))
0x297	DUP1
0x2A2	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x296)))
0x2A3	SWAP1
0x2A4	SWAP3
0x2A5	PUSH(POP(@0x25F) | POP(@0x2A2))
0x2A6	SWAP1
0x2A7	SWAP2
0x2A8	SSTORE(POP(@0x296), POP(@0x2A5))
0x2A9	DUP1
0x2AA	PUSH(SLOAD(POP(0x0)))
0x2AB	DUP4
0x2AC	SWAP1
0x2AD	SWAP1
0x2AE	DUP5
0x2AF	SWAP1
0x2B0	DUP2
0x2B6	JUMPI(0x2, !(POP(@0x203) < POP(@0x2AA)))

# Stack: [@0x203 0x0 [0x2B5E3AF16B1880000 | @0x1FC] 0x0 @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [@0x13 | :label10]]
0x2BA	PUSH(0x0)
0x2BC	DUP1
0x2C3	DUP1
0x2C4	CODECOPY(POP(0x0), 0x3AA, 0x20)
0x2C5	DUP1
0x2C6	PUSH(MLOAD(POP(0x0)))
0x2C7	SWAP1
0x2C8	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2C9	PUSH(POP(@0x2C6) + 0x2 * POP(@0x203))
0x2CA	SWAP2
0x2CB	SWAP1
0x2CC	SWAP2
0x2CD	SSTORE(POP(@0x2C9), POP())
0x2CE	POP()

:label20
# Stack: [[0x0 | @0x33E] @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x2D2	PUSH(SLOAD(0x1))
0x2D3	PUSH(0x0)
0x2D5	DUP1
0x2D6	PUSH(SLOAD(POP(0x0)))
0x2D7	PUSH(0x64)
0x2D9	SWAP2
0x2DA	SWAP1
0x2DB	DUP2
0x2E1	JUMPI(0x2, !(POP(@0x2D2) < POP(@0x2D6)))

# Stack: [@0x2D2 0x0 0x64 [0x0 | @0x33E] @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x2E2	SWAP1
0x2E3	DUP1
0x2E4	MSTORE(POP(0x0), POP(0x0))
0x2E5	PUSH(0x2)
0x2E7	DUP1
0x2E8	PUSH(SLOAD(POP(0x2)))
0x2E9	SWAP2
0x2EB	PUSH(0x0)
0x2ED	DUP1
0x2F4	DUP1
0x2F5	CODECOPY(POP(0x0), 0x3AA, 0x20)
0x2F6	DUP1
0x2F7	PUSH(MLOAD(POP(0x0)))
0x2F8	SWAP1
0x2F9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2FB	PUSH(SLOAD(POP(@0x2F7) + POP(@0x2D2) * POP(0x2)))
0x2FC	SWAP2
0x2FD	SWAP1
0x2FE	SWAP2
0x302	PUSH(0x96 * POP(@0x2FB) / POP(0x64))
0x303	SWAP1
0x309	JUMPI(:label9, !(POP(@0x2E8) > POP(@0x302)))

# Stack: [[0x0 | @0x33E] @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x30C	PUSH(SLOAD(0x1))
0x30D	PUSH(0x0)
0x30F	DUP1
0x310	PUSH(SLOAD(POP(0x0)))
0x311	PUSH(0x64)
0x313	SWAP2
0x314	SWAP1
0x315	DUP2
0x31B	JUMPI(0x2, !(POP(@0x30C) < POP(@0x310)))

# Stack: [@0x30C 0x0 0x64 [0x0 | @0x33E] @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x31E	PUSH(SLOAD(0x1))
0x31F	DUP3
0x320	PUSH(SLOAD(POP(0x0)))
0x321	PUSH(0x2)
0x323	SWAP2
0x324	SWAP1
0x325	SWAP3
0x327	PUSH(0x0)
0x329	DUP1
0x330	DUP1
0x331	CODECOPY(POP(0x0), 0x3AA, 0x20)
0x332	DUP1
0x333	PUSH(MLOAD(POP(0x0)))
0x334	SWAP1
0x335	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x337	PUSH(SLOAD(POP(@0x333) + POP(0x2) * POP(@0x30C)))
0x338	SWAP4
0x339	SWAP1
0x33A	SWAP4
0x33E	PUSH(0x96 * POP(@0x337) / POP(0x64))
0x33F	SWAP4
0x340	POP()
0x341	SWAP1
0x342	SWAP2
0x343	SWAP1
0x344	DUP2
0x34A	JUMPI(0x2, !(POP(@0x31E) < POP(@0x320)))

# Stack: [@0x31E 0x0 @0x33E @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x34D	PUSH(MLOAD(0x40))
0x34E	PUSH(0x2)
0x350	SWAP2
0x351	SWAP1
0x352	SWAP2
0x37F	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP(@0x31E)))
0x380	SWAP2
0x381	SWAP1
0x382	DUP4
0x383	SWAP1
0x384	DUP3
0x385	DUP2
0x386	DUP2
0x387	DUP2
0x388	DUP6
0x389	DUP9
0x38A	DUP4
0x38B	PUSH(CALL(POP(0x0), POP(@0x37F), POP(@0x33E), POP(@0x34D), POP(0x0), POP(@0x34D), POP(0x0)))
0x38C	POP()
0x38D	POP()
0x38E	PUSH(0x2)
0x390	DUP1
0x391	PUSH(SLOAD(POP(0x2)))
0x392	SWAP2
0x393	SWAP1
0x394	SWAP2
0x395	PUSH(POP(@0x391) - POP(@0x33E))
0x396	SWAP1
0x397	SSTORE(POP(0x2), POP(@0x395))
0x398	POP()
0x399	POP()
0x39A	PUSH(0x1)
0x39C	DUP1
0x39E	DUP1
0x39F	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x3A0	SWAP1
0x3A1	SSTORE(POP(0x1), POP(@0x39F))
0x3A5	JUMP(:label20)

:label21
# Stack: [[@0x252 | @0x22E] @0x22C :label19 @0x207 0x0 @0x207 0x0 @0x203 [0x2B5E3AF16B1880000 | @0x1FC] [:label11 | :label10] [:label10 | @0x13]]
0x3A7	POP()
0x3A8	SWAP1
0x3A9	JUMP(POP(:label19))


