# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x1E0018D6)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label2, 0x1FC06F0D == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label3, 0x32D79689 == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label4, 0x9FAA3C91 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label5, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label7, 0xCA708230 == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label8, 0xD377DEDD == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label9)
0x70	PUSH(0x0)
0x72	DUP1
0x81	JUMPI(:label10, CALLVALUE() == 0x7CE66C50E2840000)

# Stack: [0x0 0x0 :label9]
0x85	JUMP(0x2)

:label1
# Stack: [@0x13]
0x87	PUSH(:label20)
0x8C	PUSH(SLOAD(0x4))
0x8D	DUP2
0x8E	JUMP(POP(:label20))

:label2
# Stack: [@0x13]
0x90	PUSH(:label21)
0x95	PUSH(CALLDATALOAD(0x4))
0x96	PUSH(0x1)
0x98	DUP1
0x99	PUSH(SLOAD(POP(0x1)))
0x9A	DUP2
0x9B	SWAP1
0x9C	DUP2
0xA2	JUMPI(0x2, !(POP(@0x95) < POP(@0x99)))

# Stack: [@0x95 0x1 @0x95 :label21 @0x13]
0xA3	POP()
0xA6	MSTORE(0x0, POP(0x1))
0xD2	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 + POP(@0x95)))
0xD3	DUP2
0xD4	JUMP(POP(:label21))

:label3
# Stack: [@0x13]
0xD6	PUSH(:label20)
0xDB	PUSH(SLOAD(0x3))
0xDC	DUP2
0xDD	JUMP(POP(:label20))

:label4
# Stack: [@0x13]
0xDF	PUSH(:label21)
0xED	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x6))
0xEE	DUP2
0xEF	JUMP(POP(:label21))

:label5
# Stack: [@0x13]
0xF1	PUSH(:label21)
0xF6	PUSH(CALLDATALOAD(0x4))
0xF7	PUSH(0x0)
0xF9	DUP1
0xFA	PUSH(SLOAD(POP(0x0)))
0xFB	DUP2
0xFC	SWAP1
0xFD	DUP2
0x103	JUMPI(0x2, !(POP(@0xF6) < POP(@0xFA)))

# Stack: [@0xF6 0x0 @0xF6 :label21 @0x13]
0x104	POP()
0x105	DUP1
0x106	MSTORE(POP(0x0), POP(0x0))
0x107	PUSH(0x0)
0x109	DUP1
0x110	DUP1
0x111	CODECOPY(POP(0x0), 0x3F1, 0x20)
0x112	DUP1
0x113	PUSH(MLOAD(POP(0x0)))
0x114	SWAP1
0x115	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x120	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x113) + POP(@0xF6)))
0x121	DUP2
0x122	JUMP(POP(:label21))

:label6
# Stack: [@0x13]
0x124	PUSH(:label20)
0x129	PUSH(SLOAD(0x2))
0x12A	DUP2
0x12B	JUMP(POP(:label20))

:label7
# Stack: [@0x13]
0x132	PUSH(SLOAD(0x6))
0x135	PUSH(MLOAD(0x40))
0x13D	PUSH(0x2 ** 0xA0 - 0x1)
0x13E	SWAP2
0x13F	DUP3
0x140	PUSH(POP(@0x13D) & POP(@0x132))
0x141	SWAP2
0x142	PUSH(0x0)
0x144	SWAP2
0x145	PUSH(ADDRESS())
0x146	SWAP1
0x147	SWAP2
0x149	PUSH(BALANCE(POP(@0x13D) & POP(@0x145)))
0x14A	SWAP1
0x14B	DUP3
0x14C	DUP2
0x14D	DUP2
0x14E	DUP2
0x14F	DUP6
0x150	DUP9
0x151	DUP4
0x152	PUSH(CALL(POP(0x0), POP(@0x140), POP(@0x149), POP(@0x135), POP(0x0), POP(@0x135), POP(0x0)))
0x153	POP()
0x154	POP()
0x155	POP()
0x156	POP()
0x157	POP()
0x158	JUMP(:label9)

:label8
# Stack: [@0x13]
0x15A	PUSH(:label21)
0x168	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x5))
0x169	DUP2
0x16A	JUMP(POP(:label21))

:label9
# Stack: []
0x16C	STOP()

:label10
# Stack: [0x0 0x0 :label9]
0x170	PUSH(SLOAD(0x4))
0x171	PUSH(0x8)
0x173	SWAP1
0x179	JUMPI(:label13, !(POP(@0x170) > POP(0x8)))

# Stack: [0x0 0x0 :label9]
0x17A	PUSH(0x1)
0x17C	DUP1
0x17D	PUSH(SLOAD(POP(0x1)))
0x17E	DUP1
0x17F	DUP3
0x180	PUSH(POP(0x1) + POP(@0x17D))
0x181	DUP1
0x182	DUP4
0x183	SSTORE(POP(0x1), POP(@0x180))
0x184	SWAP1
0x185	SWAP4
0x186	POP()
0x187	SWAP1
0x188	DUP2
0x189	DUP5
0x18A	DUP1
0x18B	PUSH(!POP(@0x17D))
0x18C	DUP2
0x18D	SWAP1
0x192	JUMPI(:label12, POP(@0x18B) > POP(@0x180))

# Stack: [@0x17D @0x180 0x1 @0x180 0x0 @0x17D :label9]
0x193	DUP2
0x194	DUP4
0x197	MSTORE(0x0, POP(0x1))
0x19C	PUSH(SHA3(0x0, 0x20))
0x19D	SWAP2
0x19E	DUP3
0x19F	PUSH(POP(@0x19C) + POP(@0x17D))
0x1A0	SWAP2
0x1A1	PUSH(POP(@0x19C) + POP(@0x180))
0x1A2	PUSH(:label12)
0x1A5	SWAP2
0x1A6	SWAP1

:label11
# Stack: [[@0x1A1 | @0x1C0 | @0x2BF] [@0x19F | @0x2BC] [:label12 | :label15] [@0x180 | @0x293] [0x1 | 0x0] [@0x180 | @0x293] [0x0 | @0x28F] [@0x17D | 0x0] :label9]
0x1A8	DUP1
0x1A9	DUP3
0x1AF	JUMPI(:label14, !(POP() > POP()))

# Stack: [[@0x1A1 | @0x1C0 | @0x2BF] [@0x19F | @0x2BC] [:label12 | :label15] [@0x293 | @0x180] [0x1 | 0x0] [@0x180 | @0x293] [0x0 | @0x28F] [@0x17D | 0x0] :label9]
0x1B0	DUP1
0x1BC	DUP1
0x1BD	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x1C0	PUSH(0x1 + POP())
0x1C4	JUMP(:label11)

:label12
# Stack: [[@0x19F | @0x17D] @0x180 0x1 @0x180 0x0 @0x17D :label9]
0x1C6	POP()
0x1C7	POP()
0x1C8	POP()
0x1C9	POP()
0x1CA	PUSH(CALLER())
0x1CB	PUSH(0x1)
0x1CF	POP(0x0)
0x1D0	DUP4
0x1D1	DUP2
0x1D3	DUP1
0x1D9	JUMPI(0x2, !(POP(@0x17D) < SLOAD(POP(0x1))))

# Stack: [@0x17D 0x1 @0x1CA 0x0 @0x17D :label9]
0x1DA	PUSH(0x0)
0x1DC	SWAP2
0x1DD	SWAP1
0x1DE	SWAP2
0x1DF	MSTORE(POP(0x0), POP(0x1))
0x201	PUSH(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 + POP(@0x17D))
0x202	DUP1
0x20D	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x201)))
0x20E	SWAP1
0x20F	SWAP2
0x210	PUSH(POP(@0x1CA) | POP(@0x20D))
0x211	SWAP1
0x212	SSTORE(POP(@0x201), POP(@0x210))
0x21D	JUMPI(:label13, !(0xA == SLOAD(0x4)))

# Stack: [0x0 @0x17D :label9]
0x220	PUSH(SLOAD(0x3))
0x221	PUSH(0x1)
0x223	DUP1
0x224	PUSH(SLOAD(POP(0x1)))
0x225	SWAP1
0x226	SWAP2
0x227	SWAP1
0x228	DUP2
0x22E	JUMPI(0x2, !(POP(@0x220) < POP(@0x224)))

# Stack: [@0x220 0x1 0x0 @0x17D :label9]
0x22F	PUSH(0x5)
0x231	DUP1
0x232	PUSH(SLOAD(POP(0x5)))
0x233	PUSH(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6)
0x254	SWAP2
0x255	SWAP1
0x256	SWAP3
0x261	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6) + POP(@0x220)))
0x26A	PUSH(~(0x2 ** 0xA0 - 0x1))
0x26B	SWAP2
0x26C	SWAP1
0x26D	SWAP3
0x26E	PUSH(POP(@0x26A) & POP(@0x232))
0x26F	SWAP2
0x270	SWAP1
0x271	SWAP2
0x272	PUSH(POP(@0x26E) | POP(@0x261))
0x273	SWAP1
0x274	SSTORE(POP(0x5), POP(@0x272))
0x275	PUSH(0x3)
0x277	DUP1
0x278	PUSH(SLOAD(POP(0x3)))
0x279	SWAP1
0x27A	SWAP2
0x27B	PUSH(POP(0x1) + POP(@0x278))
0x27C	SWAP1
0x27D	SSTORE(POP(0x3), POP(@0x27B))

:label13
# Stack: [0x0 [@0x17D | 0x0] :label9]
0x281	PUSH(SLOAD(0x4))
0x282	PUSH(0x9)
0x284	SWAP1
0x28A	JUMPI(:label16, !(POP(@0x281) < POP(0x9)))

# Stack: [0x0 [@0x17D | 0x0] :label9]
0x28B	POP()
0x28C	PUSH(0x0)
0x28E	DUP1
0x28F	PUSH(SLOAD(POP(0x0)))
0x292	DUP1
0x293	PUSH(POP(@0x28F) + 0x1)
0x294	DUP1
0x295	DUP4
0x296	SSTORE(POP(0x0), POP(@0x293))
0x297	SWAP1
0x298	SWAP2
0x299	DUP2
0x29A	DUP4
0x29B	DUP1
0x29C	PUSH(!POP(@0x28F))
0x29D	DUP2
0x29E	SWAP1
0x2A3	JUMPI(:label15, POP(@0x29C) > POP(@0x293))

# Stack: [@0x28F @0x293 0x0 @0x293 @0x28F [@0x17D | 0x0] :label9]
0x2A4	DUP3
0x2A5	DUP1
0x2A6	MSTORE(POP(0x0), POP(0x0))
0x2A7	PUSH(:label15)
0x2AA	SWAP1
0x2AB	PUSH(0x0)
0x2AD	DUP1
0x2B4	DUP1
0x2B5	CODECOPY(POP(0x0), 0x3F1, 0x20)
0x2B6	DUP1
0x2B7	PUSH(MLOAD(POP(0x0)))
0x2B8	SWAP1
0x2B9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2BA	SWAP1
0x2BB	DUP2
0x2BC	PUSH(POP(@0x2B7) + POP(@0x28F))
0x2BD	SWAP1
0x2BE	DUP4
0x2BF	PUSH(POP(@0x293) + POP(@0x2B7))
0x2C3	JUMP(:label11)

:label14
# Stack: [[@0x1C0 | @0x2BF | @0x1A1] [@0x19F | @0x2BC] [:label12 | :label15] [@0x180 | @0x293] [0x1 | 0x0] [@0x180 | @0x293] [@0x28F | 0x0] [@0x17D | 0x0] :label9]
0x2C5	POP()
0x2C6	SWAP1
0x2C7	JUMP(POP())

:label15
# Stack: [[@0x2BC | @0x28F] @0x293 0x0 @0x293 @0x28F [@0x17D | 0x0] :label9]
0x2C9	POP()
0x2CA	POP()
0x2CB	POP()
0x2CC	POP()
0x2CD	PUSH(CALLER())
0x2CE	PUSH(0x0)
0x2D2	POP(0x0)
0x2D3	DUP3
0x2D4	DUP2
0x2D6	DUP1
0x2DC	JUMPI(0x2, !(POP(@0x28F) < SLOAD(POP(0x0))))

# Stack: [@0x28F 0x0 @0x2CD @0x28F [0x0 | @0x17D] :label9]
0x2DD	SWAP1
0x2DE	DUP1
0x2DF	MSTORE(POP(0x0), POP(0x0))
0x2E0	PUSH(0x0)
0x2E2	DUP1
0x2E9	DUP1
0x2EA	CODECOPY(POP(0x0), 0x3F1, 0x20)
0x2EB	DUP1
0x2EC	PUSH(MLOAD(POP(0x0)))
0x2ED	SWAP1
0x2EE	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2EF	PUSH(POP(@0x2EC) + POP(@0x28F))
0x2F0	DUP1
0x2FB	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2EF)))
0x2FC	SWAP1
0x2FD	SWAP2
0x2FE	PUSH(POP(@0x2CD) | POP(@0x2FB))
0x2FF	SWAP1
0x300	SSTORE(POP(@0x2EF), POP(@0x2FE))

:label16
# Stack: [[@0x28F | 0x0] [@0x17D | 0x0] :label9]
0x302	PUSH(0x4)
0x304	DUP1
0x308	PUSH(0x1 + SLOAD(POP(0x4)))
0x309	SWAP1
0x30A	DUP2
0x30B	SWAP1
0x30C	SSTORE(POP(0x4), POP(@0x308))
0x314	JUMPI(:label17, !(0xB == POP(@0x308)))

# Stack: [[@0x28F | 0x0] [@0x17D | 0x0] :label9]
0x319	SSTORE(0x4, 0x0)

:label17
# Stack: [[0x0 | @0x28F] [@0x17D | 0x0] :label9]
0x31D	PUSH(SLOAD(0x5))
0x320	PUSH(MLOAD(0x40))
0x328	PUSH(0x2 ** 0xA0 - 0x1)
0x329	SWAP1
0x32A	SWAP1
0x32B	SWAP2
0x32C	PUSH(POP(@0x328) & POP(@0x31D))
0x32D	SWAP1
0x32E	PUSH(0x0)
0x330	SWAP1
0x331	PUSH(0xDE0B6B3A7640000)
0x33A	SWAP1
0x33B	DUP3
0x33C	DUP2
0x33D	DUP2
0x33E	DUP2
0x33F	DUP6
0x340	DUP9
0x341	DUP4
0x342	PUSH(CALL(POP(0x0), POP(@0x32C), POP(0xDE0B6B3A7640000), POP(@0x320), POP(0x0), POP(@0x320), POP(0x0)))
0x343	POP()
0x344	POP()
0x345	POP()
0x346	POP()
0x347	POP()

:label18
# Stack: [[@0x28F | 0x0] [@0x17D | 0x0] :label9]
0x362	JUMPI(:label19, !(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()) > 0x8AC7230489E80000))

# Stack: [[@0x28F | 0x0] [@0x17D | 0x0] :label9]
0x365	PUSH(SLOAD(0x2))
0x366	PUSH(0x0)
0x368	DUP1
0x369	PUSH(SLOAD(POP(0x0)))
0x36A	SWAP1
0x36B	SWAP2
0x36C	SWAP1
0x36D	DUP2
0x373	JUMPI(0x2, !(POP(@0x365) < POP(@0x369)))

# Stack: [@0x365 0x0 [@0x28F | 0x0] [@0x17D | 0x0] :label9]
0x374	DUP2
0x375	DUP1
0x376	MSTORE(POP(0x0), POP(0x0))
0x379	PUSH(MLOAD(0x40))
0x37A	PUSH(0x0)
0x37C	DUP1
0x383	DUP1
0x384	CODECOPY(POP(0x0), 0x3F1, 0x20)
0x385	DUP1
0x386	PUSH(MLOAD(POP(0x0)))
0x387	SWAP1
0x388	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x389	SWAP2
0x38A	SWAP1
0x38B	SWAP2
0x396	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x386) + POP(@0x365)))
0x397	SWAP2
0x398	SWAP1
0x399	PUSH(0x8AC7230489E80000)
0x3A2	SWAP1
0x3A3	DUP3
0x3A4	DUP2
0x3A5	DUP2
0x3A6	DUP2
0x3A7	DUP6
0x3A8	DUP9
0x3A9	DUP4
0x3AA	PUSH(CALL(POP(0x0), POP(@0x396), POP(0x8AC7230489E80000), POP(@0x379), POP(0x0), POP(@0x379), POP(0x0)))
0x3AB	POP()
0x3AC	POP()
0x3AD	PUSH(0x2)
0x3AF	DUP1
0x3B3	PUSH(0x1 + SLOAD(POP(0x2)))
0x3B4	SWAP1
0x3B5	SSTORE(POP(0x2), POP(@0x3B3))
0x3B6	POP()
0x3B7	PUSH(:label18)
0x3BA	SWAP2
0x3BB	POP()
0x3BC	POP()
0x3BD	JUMP(POP(:label18))

:label19
# Stack: [[@0x28F | 0x0] [@0x17D | 0x0] :label9]
0x3BF	POP()
0x3C0	POP()
0x3C1	JUMP(POP(:label9))

:label20
# Stack: [[@0x8C | @0x129 | @0xDB] [:label20 | :label20 | :label20] @0x13]
0x3C3	PUSH(0x40)
0x3C5	DUP1
0x3C6	PUSH(MLOAD(POP(0x40)))
0x3C7	SWAP2
0x3C8	DUP3
0x3C9	MSTORE(POP(@0x3C6), POP())
0x3CA	PUSH(MLOAD(POP(0x40)))
0x3CB	SWAP1
0x3CC	DUP2
0x3CD	SWAP1
0x3D1	PUSH(0x20 + POP(@0x3C6) - POP(@0x3CA))
0x3D2	SWAP1
0x3D3	RETURN(POP(@0x3CA), POP(@0x3D1))

:label21
# Stack: [[@0x168 | @0x120 | @0xED | @0xD2] [:label21 | :label21 | :label21 | :label21] @0x13]
0x3D5	PUSH(0x40)
0x3D7	DUP1
0x3D8	PUSH(MLOAD(POP(0x40)))
0x3E0	PUSH(0x2 ** 0xA0 - 0x1)
0x3E1	SWAP3
0x3E2	SWAP1
0x3E3	SWAP3
0x3E5	DUP2
0x3E6	MSTORE(POP(@0x3D8), POP(@0x3E0) & POP())
0x3E7	PUSH(MLOAD(POP(0x40)))
0x3E8	SWAP1
0x3E9	DUP2
0x3EA	SWAP1
0x3EE	PUSH(0x20 + POP(@0x3D8) - POP(@0x3E7))
0x3EF	SWAP1
0x3F0	RETURN(POP(@0x3E7), POP(@0x3EE))


