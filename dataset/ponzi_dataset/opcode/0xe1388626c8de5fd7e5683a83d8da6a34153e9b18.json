# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x1E0018D6)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label2, 0x1FC06F0D == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label3, 0x297072A1 == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label4, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label5, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label6, 0xC355B107 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label7, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label9)
0x65	PUSH(:label10)
0x6B	JUMP(:label8)

:label1
# Stack: [@0x13]
0x6D	PUSH(:label11)
0x72	PUSH(SLOAD(0x4))
0x73	DUP2
0x74	JUMP(POP(:label11))

:label2
# Stack: [@0x13]
0x76	PUSH(:label12)
0x7B	PUSH(CALLDATALOAD(0x4))
0x7C	PUSH(0x1)
0x7E	DUP1
0x7F	PUSH(SLOAD(POP(0x1)))
0x80	DUP2
0x81	SWAP1
0x82	DUP2
0x88	JUMPI(0x2, !(POP(@0x7B) < POP(@0x7F)))

# Stack: [@0x7B 0x1 @0x7B :label12 @0x13]
0x89	POP()
0x8C	MSTORE(0x0, POP(0x1))
0x8D	PUSH(0x0)
0x8F	DUP1
0x96	DUP1
0x97	CODECOPY(POP(0x0), 0x3A4, 0x20)
0x98	DUP1
0x99	PUSH(MLOAD(POP(0x0)))
0x9A	SWAP1
0x9B	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xA6	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x99) + POP(@0x7B)))
0xA7	DUP2
0xA8	JUMP(POP(:label12))

:label3
# Stack: [@0x13]
0xAA	PUSH(:label11)
0xAF	PUSH(SLOAD(0x3))
0xB0	DUP2
0xB1	JUMP(POP(:label11))

:label4
# Stack: [@0x13]
0xB3	PUSH(:label12)
0xB8	PUSH(CALLDATALOAD(0x4))
0xB9	PUSH(0x0)
0xBB	DUP1
0xBC	PUSH(SLOAD(POP(0x0)))
0xBD	DUP2
0xBE	SWAP1
0xBF	DUP2
0xC5	JUMPI(0x2, !(POP(@0xB8) < POP(@0xBC)))

# Stack: [@0xB8 0x0 @0xB8 :label12 @0x13]
0xC6	POP()
0xC7	DUP1
0xC8	MSTORE(POP(0x0), POP(0x0))
0xF4	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(@0xB8)))
0xF5	DUP2
0xF6	JUMP(POP(:label12))

:label5
# Stack: [@0x13]
0xF8	PUSH(:label11)
0xFD	PUSH(SLOAD(0x2))
0xFE	DUP2
0xFF	JUMP(POP(:label11))

:label6
# Stack: [@0x13]
0x101	PUSH(:label12)
0x10F	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x5))
0x110	DUP2
0x111	JUMP(POP(:label12))

:label7
# Stack: [@0x13]
0x113	PUSH(:label9)

:label8
# Stack: [[:label10 | :label9] [:label9 | @0x13]]
0x117	PUSH(0x0)
0x119	DUP1
0x11B	DUP1
0x120	JUMPI(:label13, POP(0x0) == CALLVALUE())

# Stack: [0x0 0x0 [:label10 | :label9] [:label9 | @0x13]]
0x124	JUMP(0x2)

:label9
# Stack: []
0x126	STOP()

:label10
# Stack: [:label9]
0x128	JUMP(POP(:label9))

:label11
# Stack: [[@0x72 | @0xFD | @0xAF] [:label11 | :label11 | :label11] @0x13]
0x12A	PUSH(0x40)
0x12C	DUP1
0x12D	PUSH(MLOAD(POP(0x40)))
0x12E	SWAP2
0x12F	DUP3
0x130	MSTORE(POP(@0x12D), POP())
0x131	PUSH(MLOAD(POP(0x40)))
0x132	SWAP1
0x133	DUP2
0x134	SWAP1
0x138	PUSH(0x20 + POP(@0x12D) - POP(@0x131))
0x139	SWAP1
0x13A	RETURN(POP(@0x131), POP(@0x138))

:label12
# Stack: [[@0x10F | @0xF4 | @0xA6] [:label12 | :label12 | :label12] @0x13]
0x13C	PUSH(0x40)
0x13E	DUP1
0x13F	PUSH(MLOAD(POP(0x40)))
0x147	PUSH(0x2 ** 0xA0 - 0x1)
0x148	SWAP3
0x149	SWAP1
0x14A	SWAP3
0x14C	DUP2
0x14D	MSTORE(POP(@0x13F), POP(@0x147) & POP())
0x14E	PUSH(MLOAD(POP(0x40)))
0x14F	SWAP1
0x150	DUP2
0x151	SWAP1
0x155	PUSH(0x20 + POP(@0x13F) - POP(@0x14E))
0x156	SWAP1
0x157	RETURN(POP(@0x14E), POP(@0x155))

:label13
# Stack: [0x0 0x0 [:label10 | :label9] [:label9 | @0x13]]
0x15B	PUSH(SLOAD(0x4))
0x15C	PUSH(0x9)
0x15E	SWAP1
0x164	JUMPI(:label16, !(POP(@0x15B) < POP(0x9)))

# Stack: [0x0 0x0 [:label9 | :label10] [:label9 | @0x13]]
0x165	PUSH(0x0)
0x167	DUP1
0x168	PUSH(SLOAD(POP(0x0)))
0x16B	DUP1
0x16C	PUSH(POP(@0x168) + 0x1)
0x16D	DUP1
0x16E	DUP4
0x16F	SSTORE(POP(0x0), POP(@0x16C))
0x170	SWAP1
0x171	SWAP4
0x172	POP()
0x173	SWAP1
0x174	DUP2
0x175	DUP5
0x176	DUP1
0x177	PUSH(!POP(@0x168))
0x178	DUP2
0x179	SWAP1
0x17E	JUMPI(:label15, POP(@0x177) > POP(@0x16C))

# Stack: [@0x168 @0x16C 0x0 @0x16C 0x0 @0x168 [:label10 | :label9] [:label9 | @0x13]]
0x17F	DUP2
0x180	DUP4
0x183	MSTORE(0x0, POP(0x0))
0x188	PUSH(SHA3(0x0, 0x20))
0x189	SWAP2
0x18A	DUP3
0x18B	PUSH(POP(@0x188) + POP(@0x168))
0x18C	SWAP2
0x18D	PUSH(POP(@0x188) + POP(@0x16C))
0x18E	PUSH(:label15)
0x191	SWAP2
0x192	SWAP1

:label14
# Stack: [[@0x18D | @0x1AC | @0x246] [@0x18B | @0x243] [:label15 | :label18] [@0x16C | @0x218] [0x0 | 0x1] [@0x16C | @0x218] [0x0 | @0x215] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x194	DUP1
0x195	DUP3
0x19B	JUMPI(:label17, !(POP() > POP()))

# Stack: [[@0x18D | @0x1AC | @0x246] [@0x18B | @0x243] [:label18 | :label15] [@0x16C | @0x218] [0x0 | 0x1] [@0x16C | @0x218] [0x0 | @0x215] [@0x168 | 0x0] [:label9 | :label10] [:label9 | @0x13]]
0x19C	DUP1
0x1A8	DUP1
0x1A9	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x1AC	PUSH(0x1 + POP())
0x1B0	JUMP(:label14)

:label15
# Stack: [[@0x18B | @0x168] @0x16C 0x0 @0x16C 0x0 @0x168 [:label10 | :label9] [:label9 | @0x13]]
0x1B2	POP()
0x1B3	POP()
0x1B4	POP()
0x1B5	POP()
0x1B6	PUSH(CALLER())
0x1B7	PUSH(0x0)
0x1BB	POP(0x0)
0x1BC	DUP4
0x1BD	DUP2
0x1BF	DUP1
0x1C5	JUMPI(0x2, !(POP(@0x168) < SLOAD(POP(0x0))))

# Stack: [@0x168 0x0 @0x1B6 0x0 @0x168 [:label10 | :label9] [:label9 | @0x13]]
0x1C6	SWAP1
0x1C7	DUP1
0x1C8	MSTORE(POP(0x0), POP(0x0))
0x1EA	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(@0x168))
0x1EB	DUP1
0x1F6	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x1EA)))
0x1F7	SWAP1
0x1F8	SWAP2
0x1F9	PUSH(POP(@0x1B6) | POP(@0x1F6))
0x1FA	SWAP1
0x1FB	SSTORE(POP(@0x1EA), POP(@0x1F9))
0x1FC	PUSH(0x4)
0x1FE	DUP1
0x202	PUSH(0x1 + SLOAD(POP(0x4)))
0x203	SWAP1
0x204	SSTORE(POP(0x4), POP(@0x202))

:label16
# Stack: [0x0 [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x208	PUSH(SLOAD(0x4))
0x209	PUSH(0x9)
0x20B	SWAP1
0x210	JUMPI(:label19, POP(@0x208) < POP(0x9))

# Stack: [0x0 [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x211	POP()
0x212	PUSH(0x1)
0x214	DUP1
0x215	PUSH(SLOAD(POP(0x1)))
0x216	DUP1
0x217	DUP3
0x218	PUSH(POP(0x1) + POP(@0x215))
0x219	DUP1
0x21A	DUP4
0x21B	SSTORE(POP(0x1), POP(@0x218))
0x21C	SWAP1
0x21D	SWAP2
0x21E	DUP2
0x21F	DUP4
0x220	DUP1
0x221	PUSH(!POP(@0x215))
0x222	DUP2
0x223	SWAP1
0x228	JUMPI(:label18, POP(@0x221) > POP(@0x218))

# Stack: [@0x215 @0x218 0x1 @0x218 @0x215 [@0x168 | 0x0] [:label9 | :label10] [:label9 | @0x13]]
0x229	PUSH(0x0)
0x22B	DUP3
0x22C	SWAP1
0x22D	MSTORE(POP(0x0), POP(0x1))
0x22E	PUSH(:label18)
0x231	SWAP1
0x232	PUSH(0x0)
0x234	DUP1
0x23B	DUP1
0x23C	CODECOPY(POP(0x0), 0x3A4, 0x20)
0x23D	DUP1
0x23E	PUSH(MLOAD(POP(0x0)))
0x23F	SWAP1
0x240	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x241	SWAP1
0x242	DUP2
0x243	PUSH(POP(@0x23E) + POP(@0x215))
0x244	SWAP1
0x245	DUP4
0x246	PUSH(POP(@0x218) + POP(@0x23E))
0x24A	JUMP(:label14)

:label17
# Stack: [[@0x1AC | @0x246 | @0x18D] [@0x243 | @0x18B] [:label15 | :label18] [@0x16C | @0x218] [0x0 | 0x1] [@0x16C | @0x218] [0x0 | @0x215] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x24C	POP()
0x24D	SWAP1
0x24E	JUMP(POP())

:label18
# Stack: [[@0x243 | @0x215] @0x218 0x1 @0x218 @0x215 [@0x168 | 0x0] [:label9 | :label10] [:label9 | @0x13]]
0x250	POP()
0x251	POP()
0x252	POP()
0x253	POP()
0x254	PUSH(CALLER())
0x255	PUSH(0x1)
0x259	POP(0x0)
0x25A	DUP3
0x25B	DUP2
0x25D	DUP1
0x263	JUMPI(0x2, !(POP(@0x215) < SLOAD(POP(0x1))))

# Stack: [@0x215 0x1 @0x254 @0x215 [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x264	PUSH(0x0)
0x266	DUP2
0x267	SWAP1
0x268	MSTORE(POP(0x0), POP(0x1))
0x269	PUSH(0x0)
0x26B	DUP1
0x272	DUP1
0x273	CODECOPY(POP(0x0), 0x3A4, 0x20)
0x274	DUP1
0x275	PUSH(MLOAD(POP(0x0)))
0x276	SWAP1
0x277	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x278	PUSH(POP(@0x275) + POP(@0x215))
0x279	DUP1
0x284	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x278)))
0x285	SWAP1
0x286	SWAP3
0x287	PUSH(POP(@0x254) | POP(@0x284))
0x288	SWAP1
0x289	SWAP2
0x28A	SSTORE(POP(@0x278), POP(@0x287))
0x28B	PUSH(0x4)
0x28D	DUP1
0x28E	PUSH(SLOAD(POP(0x4)))
0x28F	SWAP1
0x290	SWAP2
0x291	PUSH(POP(0x1) + POP(@0x28E))
0x292	SWAP1
0x293	SSTORE(POP(0x4), POP(@0x291))

:label19
# Stack: [[@0x215 | 0x0] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x29F	JUMPI(:label20, !(0xA == SLOAD(0x4)))

# Stack: [[@0x215 | 0x0] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x2A2	PUSH(SLOAD(0x3))
0x2A3	PUSH(0x1)
0x2A5	DUP1
0x2A6	PUSH(SLOAD(POP(0x1)))
0x2A7	SWAP1
0x2A8	SWAP2
0x2A9	SWAP1
0x2AA	DUP2
0x2B0	JUMPI(0x2, !(POP(@0x2A2) < POP(@0x2A6)))

# Stack: [@0x2A2 0x1 [@0x215 | 0x0] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x2B1	PUSH(0x0)
0x2B3	SWAP2
0x2B4	DUP3
0x2B5	MSTORE(POP(0x0), POP(0x1))
0x2B6	PUSH(0x0)
0x2B8	DUP1
0x2BF	DUP1
0x2C0	CODECOPY(POP(0x0), 0x3A4, 0x20)
0x2C1	DUP1
0x2C2	PUSH(MLOAD(POP(0x0)))
0x2C3	SWAP1
0x2C4	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2C5	PUSH(POP(@0x2C2) + POP(@0x2A2))
0x2C6	SWAP1
0x2C7	POP()
0x2C8	PUSH(0x5)
0x2CA	DUP1
0x2CB	PUSH(SLOAD(POP(0x5)))
0x2CC	SWAP2
0x2D6	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x2C5)))
0x2DF	PUSH(~(0x2 ** 0xA0 - 0x1))
0x2E0	SWAP2
0x2E1	SWAP1
0x2E2	SWAP3
0x2E3	PUSH(POP(@0x2DF) & POP(@0x2CB))
0x2E4	SWAP2
0x2E5	SWAP1
0x2E6	SWAP2
0x2E7	PUSH(POP(@0x2E3) | POP(@0x2D6))
0x2E8	SWAP1
0x2E9	SSTORE(POP(0x5), POP(@0x2E7))
0x2EE	SSTORE(0x4, 0x0)
0x2EF	PUSH(0x3)
0x2F1	DUP1
0x2F5	PUSH(0x1 + SLOAD(POP(0x3)))
0x2F6	SWAP1
0x2F7	SSTORE(POP(0x3), POP(@0x2F5))

:label20
# Stack: [[@0x215 | 0x0] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x2FB	DUP2
0x300	JUMPI(:label21, POP() == 0x0)

# Stack: [[@0x215 | 0x0] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x303	PUSH(SLOAD(0x5))
0x306	PUSH(MLOAD(0x40))
0x30E	PUSH(0x2 ** 0xA0 - 0x1)
0x30F	SWAP1
0x310	SWAP1
0x311	SWAP2
0x312	PUSH(POP(@0x30E) & POP(@0x303))
0x313	SWAP1
0x314	PUSH(0x0)
0x316	SWAP1
0x317	DUP2
0x318	SWAP1
0x319	DUP2
0x31A	DUP2
0x31B	DUP2
0x31C	DUP2
0x31D	DUP2
0x31E	DUP9
0x31F	DUP2
0x320	PUSH(CALL(POP(0x0), POP(@0x312), POP(0x0), POP(@0x306), POP(0x0), POP(@0x306), POP(0x0)))
0x321	POP()
0x322	POP()
0x323	POP()
0x324	POP()
0x325	POP()

:label21
# Stack: [[@0x215 | 0x0] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x33A	JUMPI(:label22, !(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()) > 0x0))

# Stack: [[0x0 | @0x215] [0x0 | @0x168] [:label10 | :label9] [:label9 | @0x13]]
0x33D	PUSH(SLOAD(0x2))
0x33E	PUSH(0x0)
0x340	DUP1
0x341	PUSH(SLOAD(POP(0x0)))
0x342	SWAP1
0x343	SWAP2
0x344	SWAP1
0x345	DUP2
0x34B	JUMPI(0x2, !(POP(@0x33D) < POP(@0x341)))

# Stack: [@0x33D 0x0 [0x0 | @0x215] [0x0 | @0x168] [:label10 | :label9] [:label9 | @0x13]]
0x34C	DUP2
0x34D	DUP1
0x34E	MSTORE(POP(0x0), POP(0x0))
0x351	PUSH(MLOAD(0x40))
0x352	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563)
0x373	SWAP2
0x374	SWAP1
0x375	SWAP2
0x380	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563) + POP(@0x33D)))
0x381	SWAP2
0x382	SWAP1
0x383	DUP2
0x384	SWAP1
0x385	DUP2
0x386	DUP2
0x387	DUP2
0x388	DUP2
0x389	DUP2
0x38A	DUP9
0x38B	DUP2
0x38C	PUSH(CALL(POP(0x0), POP(@0x380), POP(0x0), POP(@0x351), POP(0x0), POP(@0x351), POP(0x0)))
0x38D	POP()
0x38E	POP()
0x38F	PUSH(0x2)
0x391	DUP1
0x395	PUSH(0x1 + SLOAD(POP(0x2)))
0x396	SWAP1
0x397	SSTORE(POP(0x2), POP(@0x395))
0x398	POP()
0x399	PUSH(:label21)
0x39C	SWAP2
0x39D	POP()
0x39E	POP()
0x39F	JUMP(POP(:label21))

:label22
# Stack: [[0x0 | @0x215] [0x0 | @0x168] [:label9 | :label10] [@0x13 | :label9]]
0x3A1	POP()
0x3A2	POP()
0x3A3	JUMP(POP())


