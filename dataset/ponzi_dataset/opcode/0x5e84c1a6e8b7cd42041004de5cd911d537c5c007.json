# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xE97DCB62 == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label11, 0xFE71AEC5 == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label12)
0x70	PUSH(:label13)
0x76	JUMP(:label9)

:label1
# Stack: [@0x13]
0x78	PUSH(:label12)
0x7D	PUSH(CALLDATALOAD(0x4))
0x80	PUSH(SLOAD(0x4))
0x88	PUSH(0x2 ** 0xA0 - 0x1)
0x89	SWAP1
0x8A	DUP2
0x8B	PUSH(POP(@0x88) & POP(@0x80))
0x8C	PUSH(CALLER())
0x8D	SWAP1
0x8E	SWAP1
0x8F	SWAP2
0x96	JUMPI(:label2, !(POP(@0x8C) & POP(@0x88) == POP(@0x8B)))

# Stack: [@0x7D :label12 @0x13]
0x97	PUSH(0x4)
0x99	DUP1
0xA5	DUP2
0xA6	PUSH(POP(@0x7D) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0xA7	SWAP1
0xA8	SSTORE(POP(0x4), POP(@0xA6))

:label2
# Stack: [@0x7D :label12 @0x13]
0xAA	POP()
0xAB	JUMP(POP(:label12))

:label3
# Stack: [@0x13]
0xAD	PUSH(:label14)
0xBB	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0xBC	DUP2
0xBD	JUMP(POP(:label14))

:label4
# Stack: [@0x13]
0xBF	PUSH(:label15)
0xC4	PUSH(SLOAD(0x2))
0xC5	DUP2
0xC6	JUMP(POP(:label15))

:label5
# Stack: [@0x13]
0xC8	PUSH(:label16)
0xCD	PUSH(CALLDATALOAD(0x4))
0xCE	PUSH(0x0)
0xD0	DUP1
0xD1	PUSH(SLOAD(POP(0x0)))
0xD2	DUP2
0xD3	SWAP1
0xD4	DUP2
0xDA	JUMPI(0x2, !(POP(@0xCD) < POP(@0xD1)))

# Stack: [@0xCD 0x0 @0xCD :label16 @0x13]
0xDB	POP()
0xDC	DUP1
0xDD	MSTORE(POP(0x0), POP(0x0))
0xE0	PUSH(0x2 * POP(@0xCD))
0x102	DUP1
0x104	PUSH(SLOAD(POP(@0xE0) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0x105	PUSH(0x0)
0x107	DUP1
0x10E	DUP1
0x10F	CODECOPY(POP(0x0), 0x437, 0x20)
0x110	DUP1
0x111	PUSH(MLOAD(POP(0x0)))
0x112	SWAP1
0x113	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x114	SWAP1
0x115	SWAP1
0x116	SWAP2
0x118	PUSH(SLOAD(POP(@0x111) + POP(@0xE0)))
0x120	PUSH(0x2 ** 0xA0 - 0x1)
0x121	SWAP2
0x122	SWAP1
0x123	SWAP2
0x124	PUSH(POP(@0x120) & POP(@0x104))
0x125	SWAP1
0x126	DUP3
0x127	JUMP(POP(:label16))

:label6
# Stack: [@0x13]
0x129	PUSH(:label15)
0x12E	PUSH(SLOAD(0x1))
0x12F	DUP2
0x130	JUMP(POP(:label15))

:label7
# Stack: [@0x13]
0x132	PUSH(:label15)
0x137	PUSH(SLOAD(0x3))
0x138	DUP2
0x139	JUMP(POP(:label15))

:label8
# Stack: [@0x13]
0x13B	PUSH(:label12)

:label9
# Stack: [[:label12 | :label13] [@0x13 | :label12]]
0x13F	PUSH(0x0)
0x141	PUSH(0x0)
0x143	PUSH(0x0)
0x14D	JUMPI(:label17, !(CALLVALUE() < 0x0))

# Stack: [0x0 0x0 0x0 [:label13 | :label12] [:label12 | @0x13]]
0x150	PUSH(MLOAD(0x40))
0x15A	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x15B	SWAP1
0x15C	DUP3
0x15D	SWAP1
0x15E	PUSH(CALLVALUE())
0x15F	SWAP1
0x160	DUP3
0x161	DUP2
0x162	DUP2
0x163	DUP2
0x164	DUP6
0x165	DUP9
0x166	DUP4
0x167	PUSH(CALL(POP(0x0), POP(@0x15A), POP(@0x15E), POP(@0x150), POP(0x0), POP(@0x150), POP(0x0)))
0x168	POP()
0x169	POP()
0x16A	POP()
0x16B	POP()
0x16C	POP()

:label10
# Stack: [[0x0 | @0x3CF] [0x0 | @0x239] [0x2B5E3AF16B1880000 | @0x232 | 0x0] [:label13 | :label12] [:label12 | @0x13]]
0x16E	POP()
0x16F	POP()
0x170	POP()
0x171	JUMP(POP())

:label11
# Stack: [@0x13]
0x176	PUSH(0x4)
0x178	DUP1
0x185	PUSH(CALLER() | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0x186	SWAP1
0x187	SSTORE(POP(0x4), POP(@0x185))
0x188	JUMP(:label12)

:label12
# Stack: []
0x18A	STOP()

:label13
# Stack: [:label12]
0x18C	JUMP(POP(:label12))

:label14
# Stack: [@0xBB :label14 @0x13]
0x18E	PUSH(0x40)
0x190	DUP1
0x191	PUSH(MLOAD(POP(0x40)))
0x199	PUSH(0x2 ** 0xA0 - 0x1)
0x19A	SWAP3
0x19B	SWAP1
0x19C	SWAP3
0x19E	DUP2
0x19F	MSTORE(POP(@0x191), POP(@0x199) & POP(@0xBB))
0x1A0	PUSH(MLOAD(POP(0x40)))
0x1A1	SWAP1
0x1A2	DUP2
0x1A3	SWAP1
0x1A7	PUSH(0x20 + POP(@0x191) - POP(@0x1A0))
0x1A8	SWAP1
0x1A9	RETURN(POP(@0x1A0), POP(@0x1A7))

:label15
# Stack: [[@0x137 | @0x12E | @0xC4] [:label15 | :label15 | :label15] @0x13]
0x1AB	PUSH(0x40)
0x1AD	DUP1
0x1AE	PUSH(MLOAD(POP(0x40)))
0x1AF	SWAP2
0x1B0	DUP3
0x1B1	MSTORE(POP(@0x1AE), POP())
0x1B2	PUSH(MLOAD(POP(0x40)))
0x1B3	SWAP1
0x1B4	DUP2
0x1B5	SWAP1
0x1B9	PUSH(0x20 + POP(@0x1AE) - POP(@0x1B2))
0x1BA	SWAP1
0x1BB	RETURN(POP(@0x1B2), POP(@0x1B9))

:label16
# Stack: [@0x118 @0x124 :label16 @0x13]
0x1BF	PUSH(MLOAD(0x40))
0x1C0	DUP1
0x1C1	DUP4
0x1CB	DUP1
0x1CC	MSTORE(POP(@0x1BF), 0x2 ** 0xA0 - 0x1 & POP(@0x124))
0x1CF	PUSH(0x20 + POP(@0x1BF))
0x1D0	DUP3
0x1D1	DUP2
0x1D2	MSTORE(POP(@0x1CF), POP(@0x118))
0x1D5	PUSH(0x20 + POP(@0x1CF))
0x1D6	SWAP3
0x1D7	POP()
0x1D8	POP()
0x1D9	POP()
0x1DC	PUSH(MLOAD(0x40))
0x1DD	DUP1
0x1DE	SWAP2
0x1DF	PUSH(POP(@0x1D5) - POP(@0x1DC))
0x1E0	SWAP1
0x1E1	RETURN(POP(@0x1DC), POP(@0x1DF))

:label17
# Stack: [0x0 0x0 0x0 [:label13 | :label12] [:label12 | @0x13]]
0x1F3	JUMPI(:label18, !(CALLVALUE() > 0x2B5E3AF16B1880000))

# Stack: [0x0 0x0 0x0 [:label13 | :label12] [:label12 | @0x13]]
0x1F6	PUSH(MLOAD(0x40))
0x200	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x201	SWAP1
0x202	PUSH(0x0)
0x204	SWAP1
0x211	PUSH(CALLVALUE() + ~0x2B5E3AF16B187FFFF)
0x212	SWAP1
0x213	DUP3
0x214	DUP2
0x215	DUP2
0x216	DUP2
0x217	DUP6
0x218	DUP9
0x219	DUP4
0x21A	PUSH(CALL(POP(0x0), POP(@0x200), POP(@0x211), POP(@0x1F6), POP(0x0), POP(@0x1F6), POP(0x0)))
0x21B	POP()
0x21C	PUSH(0x2B5E3AF16B1880000)
0x226	SWAP7
0x227	POP()
0x228	PUSH(:label19)
0x22B	SWAP4
0x22C	POP()
0x22D	POP()
0x22E	POP()
0x22F	POP()
0x230	JUMP(POP(:label19))

:label18
# Stack: [0x0 0x0 0x0 [:label13 | :label12] [@0x13 | :label12]]
0x232	PUSH(CALLVALUE())
0x233	SWAP3
0x234	POP()

:label19
# Stack: [0x0 0x0 [0x2B5E3AF16B1880000 | @0x232] [:label13 | :label12] [:label12 | @0x13]]
0x236	PUSH(0x0)
0x238	DUP1
0x239	PUSH(SLOAD(POP(0x0)))
0x23C	DUP1
0x23D	PUSH(POP(@0x239) + 0x1)
0x23E	DUP1
0x23F	DUP4
0x240	SSTORE(POP(0x0), POP(@0x23D))
0x241	SWAP1
0x242	SWAP4
0x243	POP()
0x244	SWAP1
0x245	DUP2
0x246	DUP5
0x247	DUP1
0x248	PUSH(!POP(@0x239))
0x249	DUP2
0x24A	SWAP1
0x24F	JUMPI(:label21, POP(@0x248) > POP(@0x23D))

# Stack: [@0x239 @0x23D 0x0 @0x23D 0x0 @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label13 | :label12] [:label12 | @0x13]]
0x252	PUSH(0x2 * POP(@0x239))
0x253	DUP1
0x257	DUP2
0x25A	MSTORE(0x0, POP(0x0))
0x25F	PUSH(SHA3(0x0, 0x20))
0x260	SWAP1
0x261	DUP2
0x262	PUSH(POP(@0x25F) + POP(@0x252))
0x263	SWAP1
0x264	PUSH(POP(@0x25F) + 0x2 * POP(@0x23D))
0x265	PUSH(:label21)
0x268	SWAP2
0x269	SWAP1

:label20
# Stack: [[@0x264 | @0x288] @0x262 :label21 @0x23D 0x0 @0x23D 0x0 @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label13 | :label12] [:label12 | @0x13]]
0x26B	DUP1
0x26C	DUP3
0x272	JUMPI(:label22, !(POP(@0x262) > POP()))

# Stack: [[@0x264 | @0x288] @0x262 :label21 @0x23D 0x0 @0x23D 0x0 @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label13 | :label12] [:label12 | @0x13]]
0x273	DUP1
0x27F	DUP1
0x280	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x281	PUSH(0x0)
0x283	PUSH(0x1)
0x285	SWAP1
0x286	SWAP1
0x287	SWAP2
0x288	PUSH(POP(0x1) + POP())
0x289	SWAP1
0x28A	DUP2
0x28B	SSTORE(POP(@0x288), POP(0x0))
0x28F	JUMP(:label20)

:label21
# Stack: [[@0x239 | @0x262] @0x23D 0x0 @0x23D 0x0 @0x239 [@0x232 | 0x2B5E3AF16B1880000] [:label13 | :label12] [:label12 | @0x13]]
0x291	POP()
0x292	POP()
0x293	POP()
0x294	POP()
0x295	PUSH(CALLER())
0x296	PUSH(0x0)
0x29A	POP(0x0)
0x29B	DUP4
0x29C	DUP2
0x29E	DUP1
0x2A4	JUMPI(0x2, !(POP(@0x239) < SLOAD(POP(0x0))))

# Stack: [@0x239 0x0 @0x295 0x0 @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label13 | :label12] [:label12 | @0x13]]
0x2A5	DUP2
0x2A6	DUP1
0x2A7	MSTORE(POP(0x0), POP(0x0))
0x2CC	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x239))
0x2CD	DUP1
0x2D8	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2CC)))
0x2D9	SWAP1
0x2DA	SWAP3
0x2DB	PUSH(POP(@0x295) | POP(@0x2D8))
0x2DC	SWAP1
0x2DD	SWAP2
0x2DE	SSTORE(POP(@0x2CC), POP(@0x2DB))
0x2DF	DUP1
0x2E0	PUSH(SLOAD(POP(0x0)))
0x2E1	DUP4
0x2E2	SWAP1
0x2E3	SWAP1
0x2E4	DUP5
0x2E5	SWAP1
0x2E6	DUP2
0x2EC	JUMPI(0x2, !(POP(@0x239) < POP(@0x2E0)))

# Stack: [@0x239 0x0 [0x2B5E3AF16B1880000 | @0x232] 0x0 @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label13 | :label12] [:label12 | @0x13]]
0x2F0	PUSH(0x0)
0x2F2	DUP1
0x2F9	DUP1
0x2FA	CODECOPY(POP(0x0), 0x437, 0x20)
0x2FB	DUP1
0x2FC	PUSH(MLOAD(POP(0x0)))
0x2FD	SWAP1
0x2FE	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2FF	PUSH(POP(@0x2FC) + 0x2 * POP(@0x239))
0x300	SWAP2
0x301	SWAP1
0x302	SWAP2
0x303	SSTORE(POP(@0x2FF), POP())
0x304	DUP3
0x309	JUMPI(:label23, POP(@0x239) == POP(0x0))

# Stack: [0x0 @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label13 | :label12] [:label12 | @0x13]]
0x30A	PUSH(0x2)
0x30C	DUP1
0x310	DUP4
0x312	PUSH(POP() / 0xA + SLOAD(POP(0x2)))
0x313	SWAP1
0x314	DUP2
0x315	SWAP1
0x316	SSTORE(POP(0x2), POP(@0x312))
0x319	PUSH(SLOAD(0x4))
0x31C	PUSH(MLOAD(0x40))
0x324	PUSH(0x2 ** 0xA0 - 0x1)
0x325	SWAP1
0x326	SWAP1
0x327	SWAP2
0x328	PUSH(POP(@0x324) & POP(@0x319))
0x329	SWAP2
0x32A	PUSH(0x0)
0x32C	SWAP2
0x32D	DUP3
0x32E	DUP2
0x32F	DUP2
0x330	DUP2
0x331	DUP6
0x332	DUP9
0x333	DUP4
0x334	PUSH(CALL(POP(0x0), POP(@0x328), POP(@0x312), POP(@0x31C), POP(0x0), POP(@0x31C), POP(0x0)))
0x335	POP()
0x336	POP()
0x337	POP()
0x33A	SSTORE(0x2, POP(0x0))
0x33B	POP()
0x33C	PUSH(0x3)
0x33E	DUP1
0x342	DUP4
0x344	DUP4
0x346	PUSH(POP() - POP() / 0xA + SLOAD(POP(0x3)))
0x347	SWAP1
0x348	SSTORE(POP(0x3), POP(@0x346))
0x34C	JUMP(:label24)

:label22
# Stack: [[@0x288 | @0x264] @0x262 :label21 @0x23D 0x0 @0x23D 0x0 @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label13 | :label12] [:label12 | @0x13]]
0x34E	POP()
0x34F	SWAP1
0x350	JUMP(POP(:label21))

:label23
# Stack: [0x0 @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label13 | :label12] [:label12 | @0x13]]
0x352	PUSH(0x3)
0x354	DUP1
0x356	DUP4
0x357	PUSH(POP() + SLOAD(POP(0x3)))
0x358	SWAP1
0x359	SSTORE(POP(0x3), POP(@0x357))

:label24
# Stack: [[0x0 | @0x3CF] @0x239 [@0x232 | 0x2B5E3AF16B1880000] [:label13 | :label12] [:label12 | @0x13]]
0x35E	PUSH(SLOAD(0x1))
0x35F	PUSH(0x0)
0x361	DUP1
0x362	PUSH(SLOAD(POP(0x0)))
0x363	PUSH(0x64)
0x365	SWAP2
0x366	SWAP1
0x367	DUP2
0x36D	JUMPI(0x2, !(POP(@0x35E) < POP(@0x362)))

# Stack: [@0x35E 0x0 0x64 [0x0 | @0x3CF] @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label12 | :label13] [:label12 | @0x13]]
0x36E	SWAP1
0x36F	DUP1
0x370	MSTORE(POP(0x0), POP(0x0))
0x373	PUSH(SLOAD(0x3))
0x374	PUSH(0x2)
0x376	SWAP1
0x377	SWAP1
0x378	SWAP2
0x37A	PUSH(0x0)
0x37C	DUP1
0x383	DUP1
0x384	CODECOPY(POP(0x0), 0x437, 0x20)
0x385	DUP1
0x386	PUSH(MLOAD(POP(0x0)))
0x387	SWAP1
0x388	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x38A	PUSH(SLOAD(POP(@0x386) + POP(0x2) * POP(@0x35E)))
0x38B	SWAP2
0x38C	SWAP1
0x38D	SWAP2
0x392	PUSH(0x12C * POP(@0x38A) / POP(0x64))
0x393	SWAP1
0x399	JUMPI(:label10, !(POP(@0x373) > POP(@0x392)))

# Stack: [[0x0 | @0x3CF] @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label13 | :label12] [:label12 | @0x13]]
0x39C	PUSH(SLOAD(0x1))
0x39D	PUSH(0x0)
0x39F	DUP1
0x3A0	PUSH(SLOAD(POP(0x0)))
0x3A1	PUSH(0x64)
0x3A3	SWAP2
0x3A4	SWAP1
0x3A5	DUP2
0x3AB	JUMPI(0x2, !(POP(@0x39C) < POP(@0x3A0)))

# Stack: [@0x39C 0x0 0x64 [0x0 | @0x3CF] @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label12 | :label13] [:label12 | @0x13]]
0x3AE	PUSH(SLOAD(0x1))
0x3AF	DUP3
0x3B0	PUSH(SLOAD(POP(0x0)))
0x3B1	PUSH(0x2)
0x3B3	SWAP2
0x3B4	SWAP1
0x3B5	SWAP3
0x3B7	PUSH(0x0)
0x3B9	DUP1
0x3C0	DUP1
0x3C1	CODECOPY(POP(0x0), 0x437, 0x20)
0x3C2	DUP1
0x3C3	PUSH(MLOAD(POP(0x0)))
0x3C4	SWAP1
0x3C5	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3C7	PUSH(SLOAD(POP(@0x3C3) + POP(0x2) * POP(@0x39C)))
0x3C8	SWAP4
0x3C9	SWAP1
0x3CA	SWAP4
0x3CF	PUSH(0x12C * POP(@0x3C7) / POP(0x64))
0x3D0	SWAP4
0x3D1	POP()
0x3D2	SWAP1
0x3D3	SWAP2
0x3D4	SWAP1
0x3D5	DUP2
0x3DB	JUMPI(0x2, !(POP(@0x3AE) < POP(@0x3B0)))

# Stack: [@0x3AE 0x0 @0x3CF @0x239 [0x2B5E3AF16B1880000 | @0x232] [:label13 | :label12] [:label12 | @0x13]]
0x3DE	PUSH(MLOAD(0x40))
0x3DF	PUSH(0x2)
0x3E1	SWAP2
0x3E2	SWAP1
0x3E3	SWAP2
0x410	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP(@0x3AE)))
0x411	SWAP2
0x412	SWAP1
0x413	DUP4
0x414	SWAP1
0x415	DUP3
0x416	DUP2
0x417	DUP2
0x418	DUP2
0x419	DUP6
0x41A	DUP9
0x41B	DUP4
0x41C	PUSH(CALL(POP(0x0), POP(@0x410), POP(@0x3CF), POP(@0x3DE), POP(0x0), POP(@0x3DE), POP(0x0)))
0x41D	POP()
0x41E	POP()
0x41F	PUSH(0x3)
0x421	DUP1
0x422	PUSH(SLOAD(POP(0x3)))
0x423	SWAP2
0x424	SWAP1
0x425	SWAP2
0x426	PUSH(POP(@0x422) - POP(@0x3CF))
0x427	SWAP1
0x428	SSTORE(POP(0x3), POP(@0x426))
0x429	POP()
0x42A	POP()
0x42B	PUSH(0x1)
0x42D	DUP1
0x42F	DUP1
0x430	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x431	SWAP1
0x432	SSTORE(POP(0x1), POP(@0x430))
0x436	JUMP(:label24)


