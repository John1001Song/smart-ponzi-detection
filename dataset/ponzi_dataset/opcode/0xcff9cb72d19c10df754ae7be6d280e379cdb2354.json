# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label11)
0x65	PUSH(:label12)
0x6B	JUMP(:label9)

:label1
# Stack: [@0x13]
0x6D	PUSH(:label11)
0x72	PUSH(CALLDATALOAD(0x4))
0x75	PUSH(SLOAD(0x4))
0x7D	PUSH(0x2 ** 0xA0 - 0x1)
0x7E	SWAP1
0x7F	DUP2
0x80	PUSH(POP(@0x7D) & POP(@0x75))
0x81	PUSH(CALLER())
0x82	SWAP1
0x83	SWAP1
0x84	SWAP2
0x8B	JUMPI(:label2, !(POP(@0x81) & POP(@0x7D) == POP(@0x80)))

# Stack: [@0x72 :label11 @0x13]
0x8C	PUSH(0x4)
0x8E	DUP1
0x9A	DUP2
0x9B	PUSH(POP(@0x72) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0x9C	SWAP1
0x9D	SSTORE(POP(0x4), POP(@0x9B))

:label2
# Stack: [@0x72 :label11 @0x13]
0x9F	POP()
0xA0	JUMP(POP(:label11))

:label3
# Stack: [@0x13]
0xA2	PUSH(:label13)
0xB0	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0xB1	DUP2
0xB2	JUMP(POP(:label13))

:label4
# Stack: [@0x13]
0xB4	PUSH(:label14)
0xB9	PUSH(SLOAD(0x2))
0xBA	DUP2
0xBB	JUMP(POP(:label14))

:label5
# Stack: [@0x13]
0xBD	PUSH(:label15)
0xC2	PUSH(CALLDATALOAD(0x4))
0xC3	PUSH(0x0)
0xC5	DUP1
0xC6	PUSH(SLOAD(POP(0x0)))
0xC7	DUP2
0xC8	SWAP1
0xC9	DUP2
0xCF	JUMPI(0x2, !(POP(@0xC2) < POP(@0xC6)))

# Stack: [@0xC2 0x0 @0xC2 :label15 @0x13]
0xD0	POP()
0xD1	DUP1
0xD2	MSTORE(POP(0x0), POP(0x0))
0xD5	PUSH(0x2 * POP(@0xC2))
0xF7	DUP1
0xF9	PUSH(SLOAD(POP(@0xD5) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0xFA	PUSH(0x0)
0xFC	DUP1
0x103	DUP1
0x104	CODECOPY(POP(0x0), 0x41A, 0x20)
0x105	DUP1
0x106	PUSH(MLOAD(POP(0x0)))
0x107	SWAP1
0x108	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x109	SWAP1
0x10A	SWAP1
0x10B	SWAP2
0x10D	PUSH(SLOAD(POP(@0x106) + POP(@0xD5)))
0x115	PUSH(0x2 ** 0xA0 - 0x1)
0x116	SWAP2
0x117	SWAP1
0x118	SWAP2
0x119	PUSH(POP(@0x115) & POP(@0xF9))
0x11A	SWAP1
0x11B	DUP3
0x11C	JUMP(POP(:label15))

:label6
# Stack: [@0x13]
0x11E	PUSH(:label14)
0x123	PUSH(SLOAD(0x1))
0x124	DUP2
0x125	JUMP(POP(:label14))

:label7
# Stack: [@0x13]
0x127	PUSH(:label14)
0x12C	PUSH(SLOAD(0x3))
0x12D	DUP2
0x12E	JUMP(POP(:label14))

:label8
# Stack: [@0x13]
0x130	PUSH(:label11)

:label9
# Stack: [[:label12 | :label11] [:label11 | @0x13]]
0x134	PUSH(0x0)
0x136	PUSH(0x0)
0x138	PUSH(0x0)
0x149	JUMPI(:label16, !(CALLVALUE() < 0xDE0B6B3A7640000))

# Stack: [0x0 0x0 0x0 [:label12 | :label11] [@0x13 | :label11]]
0x14C	PUSH(MLOAD(0x40))
0x156	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x157	SWAP1
0x158	DUP3
0x159	SWAP1
0x15A	PUSH(CALLVALUE())
0x15B	SWAP1
0x15C	DUP3
0x15D	DUP2
0x15E	DUP2
0x15F	DUP2
0x160	DUP6
0x161	DUP9
0x162	DUP4
0x163	PUSH(CALL(POP(0x0), POP(@0x156), POP(@0x15A), POP(@0x14C), POP(0x0), POP(@0x14C), POP(0x0)))
0x164	POP()
0x165	POP()
0x166	POP()
0x167	POP()
0x168	POP()

:label10
# Stack: [[0x0 | @0x3B2] [0x0 | @0x21E] [0x0 | 0x1158E460913D00000 | @0x217] [:label12 | :label11] [:label11 | @0x13]]
0x16A	POP()
0x16B	POP()
0x16C	POP()
0x16D	JUMP(POP())

:label11
# Stack: []
0x16F	STOP()

:label12
# Stack: [:label11]
0x171	JUMP(POP(:label11))

:label13
# Stack: [@0xB0 :label13 @0x13]
0x173	PUSH(0x40)
0x175	DUP1
0x176	PUSH(MLOAD(POP(0x40)))
0x17E	PUSH(0x2 ** 0xA0 - 0x1)
0x17F	SWAP3
0x180	SWAP1
0x181	SWAP3
0x183	DUP2
0x184	MSTORE(POP(@0x176), POP(@0x17E) & POP(@0xB0))
0x185	PUSH(MLOAD(POP(0x40)))
0x186	SWAP1
0x187	DUP2
0x188	SWAP1
0x18C	PUSH(0x20 + POP(@0x176) - POP(@0x185))
0x18D	SWAP1
0x18E	RETURN(POP(@0x185), POP(@0x18C))

:label14
# Stack: [[@0x12C | @0x123 | @0xB9] [:label14 | :label14 | :label14] @0x13]
0x190	PUSH(0x40)
0x192	DUP1
0x193	PUSH(MLOAD(POP(0x40)))
0x194	SWAP2
0x195	DUP3
0x196	MSTORE(POP(@0x193), POP())
0x197	PUSH(MLOAD(POP(0x40)))
0x198	SWAP1
0x199	DUP2
0x19A	SWAP1
0x19E	PUSH(0x20 + POP(@0x193) - POP(@0x197))
0x19F	SWAP1
0x1A0	RETURN(POP(@0x197), POP(@0x19E))

:label15
# Stack: [@0x10D @0x119 :label15 @0x13]
0x1A4	PUSH(MLOAD(0x40))
0x1A5	DUP1
0x1A6	DUP4
0x1B0	DUP1
0x1B1	MSTORE(POP(@0x1A4), 0x2 ** 0xA0 - 0x1 & POP(@0x119))
0x1B4	PUSH(0x20 + POP(@0x1A4))
0x1B5	DUP3
0x1B6	DUP2
0x1B7	MSTORE(POP(@0x1B4), POP(@0x10D))
0x1BA	PUSH(0x20 + POP(@0x1B4))
0x1BB	SWAP3
0x1BC	POP()
0x1BD	POP()
0x1BE	POP()
0x1C1	PUSH(MLOAD(0x40))
0x1C2	DUP1
0x1C3	SWAP2
0x1C4	PUSH(POP(@0x1BA) - POP(@0x1C1))
0x1C5	SWAP1
0x1C6	RETURN(POP(@0x1C1), POP(@0x1C4))

:label16
# Stack: [0x0 0x0 0x0 [:label12 | :label11] [@0x13 | :label11]]
0x1D8	JUMPI(:label17, !(CALLVALUE() > 0x1158E460913D00000))

# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x1DB	PUSH(MLOAD(0x40))
0x1E5	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x1E6	SWAP1
0x1E7	PUSH(0x0)
0x1E9	SWAP1
0x1F6	PUSH(CALLVALUE() + ~0x1158E460913CFFFFF)
0x1F7	SWAP1
0x1F8	DUP3
0x1F9	DUP2
0x1FA	DUP2
0x1FB	DUP2
0x1FC	DUP6
0x1FD	DUP9
0x1FE	DUP4
0x1FF	PUSH(CALL(POP(0x0), POP(@0x1E5), POP(@0x1F6), POP(@0x1DB), POP(0x0), POP(@0x1DB), POP(0x0)))
0x200	POP()
0x201	PUSH(0x1158E460913D00000)
0x20B	SWAP7
0x20C	POP()
0x20D	PUSH(:label18)
0x210	SWAP4
0x211	POP()
0x212	POP()
0x213	POP()
0x214	POP()
0x215	JUMP(POP(:label18))

:label17
# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x217	PUSH(CALLVALUE())
0x218	SWAP3
0x219	POP()

:label18
# Stack: [0x0 0x0 [0x1158E460913D00000 | @0x217] [:label12 | :label11] [:label11 | @0x13]]
0x21B	PUSH(0x0)
0x21D	DUP1
0x21E	PUSH(SLOAD(POP(0x0)))
0x221	DUP1
0x222	PUSH(POP(@0x21E) + 0x1)
0x223	DUP1
0x224	DUP4
0x225	SSTORE(POP(0x0), POP(@0x222))
0x226	SWAP1
0x227	SWAP4
0x228	POP()
0x229	SWAP1
0x22A	DUP2
0x22B	DUP5
0x22C	DUP1
0x22D	PUSH(!POP(@0x21E))
0x22E	DUP2
0x22F	SWAP1
0x234	JUMPI(:label20, POP(@0x22D) > POP(@0x222))

# Stack: [@0x21E @0x222 0x0 @0x222 0x0 @0x21E [0x1158E460913D00000 | @0x217] [:label11 | :label12] [:label11 | @0x13]]
0x237	PUSH(0x2 * POP(@0x21E))
0x238	DUP1
0x23C	DUP2
0x23F	MSTORE(0x0, POP(0x0))
0x244	PUSH(SHA3(0x0, 0x20))
0x245	SWAP1
0x246	DUP2
0x247	PUSH(POP(@0x244) + POP(@0x237))
0x248	SWAP1
0x249	PUSH(POP(@0x244) + 0x2 * POP(@0x222))
0x24A	PUSH(:label20)
0x24D	SWAP2
0x24E	SWAP1

:label19
# Stack: [[@0x249 | @0x26D] @0x247 :label20 @0x222 0x0 @0x222 0x0 @0x21E [0x1158E460913D00000 | @0x217] [:label12 | :label11] [:label11 | @0x13]]
0x250	DUP1
0x251	DUP3
0x257	JUMPI(:label21, !(POP(@0x247) > POP()))

# Stack: [[@0x249 | @0x26D] @0x247 :label20 @0x222 0x0 @0x222 0x0 @0x21E [0x1158E460913D00000 | @0x217] [:label12 | :label11] [:label11 | @0x13]]
0x258	DUP1
0x264	DUP1
0x265	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x266	PUSH(0x0)
0x268	PUSH(0x1)
0x26A	SWAP1
0x26B	SWAP1
0x26C	SWAP2
0x26D	PUSH(POP(0x1) + POP())
0x26E	SWAP1
0x26F	DUP2
0x270	SSTORE(POP(@0x26D), POP(0x0))
0x274	JUMP(:label19)

:label20
# Stack: [[@0x21E | @0x247] @0x222 0x0 @0x222 0x0 @0x21E [0x1158E460913D00000 | @0x217] [:label12 | :label11] [:label11 | @0x13]]
0x276	POP()
0x277	POP()
0x278	POP()
0x279	POP()
0x27A	PUSH(CALLER())
0x27B	PUSH(0x0)
0x27F	POP(0x0)
0x280	DUP4
0x281	DUP2
0x283	DUP1
0x289	JUMPI(0x2, !(POP(@0x21E) < SLOAD(POP(0x0))))

# Stack: [@0x21E 0x0 @0x27A 0x0 @0x21E [0x1158E460913D00000 | @0x217] [:label12 | :label11] [:label11 | @0x13]]
0x28A	DUP2
0x28B	DUP1
0x28C	MSTORE(POP(0x0), POP(0x0))
0x2B1	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x21E))
0x2B2	DUP1
0x2BD	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2B1)))
0x2BE	SWAP1
0x2BF	SWAP3
0x2C0	PUSH(POP(@0x27A) | POP(@0x2BD))
0x2C1	SWAP1
0x2C2	SWAP2
0x2C3	SSTORE(POP(@0x2B1), POP(@0x2C0))
0x2C4	DUP1
0x2C5	PUSH(SLOAD(POP(0x0)))
0x2C6	DUP4
0x2C7	SWAP1
0x2C8	SWAP1
0x2C9	DUP5
0x2CA	SWAP1
0x2CB	DUP2
0x2D1	JUMPI(0x2, !(POP(@0x21E) < POP(@0x2C5)))

# Stack: [@0x21E 0x0 [0x1158E460913D00000 | @0x217] 0x0 @0x21E [0x1158E460913D00000 | @0x217] [:label12 | :label11] [:label11 | @0x13]]
0x2D5	PUSH(0x0)
0x2D7	DUP1
0x2DE	DUP1
0x2DF	CODECOPY(POP(0x0), 0x41A, 0x20)
0x2E0	DUP1
0x2E1	PUSH(MLOAD(POP(0x0)))
0x2E2	SWAP1
0x2E3	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2E4	PUSH(POP(@0x2E1) + 0x2 * POP(@0x21E))
0x2E5	SWAP2
0x2E6	SWAP1
0x2E7	SWAP2
0x2E8	SSTORE(POP(@0x2E4), POP())
0x2E9	DUP3
0x2EE	JUMPI(:label22, POP(@0x21E) == POP(0x0))

# Stack: [0x0 @0x21E [0x1158E460913D00000 | @0x217] [:label12 | :label11] [@0x13 | :label11]]
0x2EF	PUSH(0x2)
0x2F1	DUP1
0x2F5	DUP4
0x2F7	PUSH(POP() / 0xA + SLOAD(POP(0x2)))
0x2F8	SWAP1
0x2F9	DUP2
0x2FA	SWAP1
0x2FB	SSTORE(POP(0x2), POP(@0x2F7))
0x2FE	PUSH(SLOAD(0x4))
0x301	PUSH(MLOAD(0x40))
0x309	PUSH(0x2 ** 0xA0 - 0x1)
0x30A	SWAP1
0x30B	SWAP1
0x30C	SWAP2
0x30D	PUSH(POP(@0x309) & POP(@0x2FE))
0x30E	SWAP2
0x30F	PUSH(0x0)
0x311	SWAP2
0x312	DUP3
0x313	DUP2
0x314	DUP2
0x315	DUP2
0x316	DUP6
0x317	DUP9
0x318	DUP4
0x319	PUSH(CALL(POP(0x0), POP(@0x30D), POP(@0x2F7), POP(@0x301), POP(0x0), POP(@0x301), POP(0x0)))
0x31A	POP()
0x31B	POP()
0x31C	POP()
0x31F	SSTORE(0x2, POP(0x0))
0x320	POP()
0x321	PUSH(0x3)
0x323	DUP1
0x327	DUP4
0x329	DUP4
0x32B	PUSH(POP() - POP() / 0xA + SLOAD(POP(0x3)))
0x32C	SWAP1
0x32D	SSTORE(POP(0x3), POP(@0x32B))
0x331	JUMP(:label23)

:label21
# Stack: [[@0x249 | @0x26D] @0x247 :label20 @0x222 0x0 @0x222 0x0 @0x21E [0x1158E460913D00000 | @0x217] [:label12 | :label11] [:label11 | @0x13]]
0x333	POP()
0x334	SWAP1
0x335	JUMP(POP(:label20))

:label22
# Stack: [0x0 @0x21E [0x1158E460913D00000 | @0x217] [:label11 | :label12] [:label11 | @0x13]]
0x337	PUSH(0x3)
0x339	DUP1
0x33B	DUP4
0x33C	PUSH(POP() + SLOAD(POP(0x3)))
0x33D	SWAP1
0x33E	SSTORE(POP(0x3), POP(@0x33C))

:label23
# Stack: [[0x0 | @0x3B2] @0x21E [0x1158E460913D00000 | @0x217] [:label12 | :label11] [:label11 | @0x13]]
0x343	PUSH(SLOAD(0x1))
0x344	PUSH(0x0)
0x346	DUP1
0x347	PUSH(SLOAD(POP(0x0)))
0x348	PUSH(0x64)
0x34A	SWAP2
0x34B	SWAP1
0x34C	DUP2
0x352	JUMPI(0x2, !(POP(@0x343) < POP(@0x347)))

# Stack: [@0x343 0x0 0x64 [0x0 | @0x3B2] @0x21E [@0x217 | 0x1158E460913D00000] [:label11 | :label12] [:label11 | @0x13]]
0x353	SWAP1
0x354	DUP1
0x355	MSTORE(POP(0x0), POP(0x0))
0x358	PUSH(SLOAD(0x3))
0x359	PUSH(0x2)
0x35B	SWAP1
0x35C	SWAP1
0x35D	SWAP2
0x35F	PUSH(0x0)
0x361	DUP1
0x368	DUP1
0x369	CODECOPY(POP(0x0), 0x41A, 0x20)
0x36A	DUP1
0x36B	PUSH(MLOAD(POP(0x0)))
0x36C	SWAP1
0x36D	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x36F	PUSH(SLOAD(POP(@0x36B) + POP(0x2) * POP(@0x343)))
0x370	SWAP2
0x371	SWAP1
0x372	SWAP2
0x376	PUSH(0x96 * POP(@0x36F) / POP(0x64))
0x377	SWAP1
0x37D	JUMPI(:label10, !(POP(@0x358) > POP(@0x376)))

# Stack: [[0x0 | @0x3B2] @0x21E [0x1158E460913D00000 | @0x217] [:label12 | :label11] [:label11 | @0x13]]
0x380	PUSH(SLOAD(0x1))
0x381	PUSH(0x0)
0x383	DUP1
0x384	PUSH(SLOAD(POP(0x0)))
0x385	PUSH(0x64)
0x387	SWAP2
0x388	SWAP1
0x389	DUP2
0x38F	JUMPI(0x2, !(POP(@0x380) < POP(@0x384)))

# Stack: [@0x380 0x0 0x64 [0x0 | @0x3B2] @0x21E [0x1158E460913D00000 | @0x217] [:label12 | :label11] [@0x13 | :label11]]
0x392	PUSH(SLOAD(0x1))
0x393	DUP3
0x394	PUSH(SLOAD(POP(0x0)))
0x395	PUSH(0x2)
0x397	SWAP2
0x398	SWAP1
0x399	SWAP3
0x39B	PUSH(0x0)
0x39D	DUP1
0x3A4	DUP1
0x3A5	CODECOPY(POP(0x0), 0x41A, 0x20)
0x3A6	DUP1
0x3A7	PUSH(MLOAD(POP(0x0)))
0x3A8	SWAP1
0x3A9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3AB	PUSH(SLOAD(POP(@0x3A7) + POP(0x2) * POP(@0x380)))
0x3AC	SWAP4
0x3AD	SWAP1
0x3AE	SWAP4
0x3B2	PUSH(0x96 * POP(@0x3AB) / POP(0x64))
0x3B3	SWAP4
0x3B4	POP()
0x3B5	SWAP1
0x3B6	SWAP2
0x3B7	SWAP1
0x3B8	DUP2
0x3BE	JUMPI(0x2, !(POP(@0x392) < POP(@0x394)))

# Stack: [@0x392 0x0 @0x3B2 @0x21E [0x1158E460913D00000 | @0x217] [:label12 | :label11] [:label11 | @0x13]]
0x3C1	PUSH(MLOAD(0x40))
0x3C2	PUSH(0x2)
0x3C4	SWAP2
0x3C5	SWAP1
0x3C6	SWAP2
0x3F3	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP(@0x392)))
0x3F4	SWAP2
0x3F5	SWAP1
0x3F6	DUP4
0x3F7	SWAP1
0x3F8	DUP3
0x3F9	DUP2
0x3FA	DUP2
0x3FB	DUP2
0x3FC	DUP6
0x3FD	DUP9
0x3FE	DUP4
0x3FF	PUSH(CALL(POP(0x0), POP(@0x3F3), POP(@0x3B2), POP(@0x3C1), POP(0x0), POP(@0x3C1), POP(0x0)))
0x400	POP()
0x401	POP()
0x402	PUSH(0x3)
0x404	DUP1
0x405	PUSH(SLOAD(POP(0x3)))
0x406	SWAP2
0x407	SWAP1
0x408	SWAP2
0x409	PUSH(POP(@0x405) - POP(@0x3B2))
0x40A	SWAP1
0x40B	SSTORE(POP(0x3), POP(@0x409))
0x40C	POP()
0x40D	POP()
0x40E	PUSH(0x1)
0x410	DUP1
0x412	DUP1
0x413	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x414	SWAP1
0x415	SSTORE(POP(0x1), POP(@0x413))
0x419	JUMP(:label23)


