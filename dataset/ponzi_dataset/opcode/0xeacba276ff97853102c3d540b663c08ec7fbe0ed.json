# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x35C1D349 == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xC8796572 == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label10, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label13)
0x70	PUSH(:label9)
0x76	JUMP(:label11)

:label1
# Stack: [@0x13]
0x78	PUSH(:label13)
0x7D	PUSH(CALLDATALOAD(0x4))
0x80	PUSH(SLOAD(0x4))
0x88	PUSH(0x2 ** 0xA0 - 0x1)
0x89	SWAP1
0x8A	DUP2
0x8B	PUSH(POP(@0x88) & POP(@0x80))
0x8C	PUSH(CALLER())
0x8D	SWAP1
0x8E	SWAP1
0x8F	SWAP2
0x96	JUMPI(:label2, !(POP(@0x8C) & POP(@0x88) == POP(@0x8B)))

# Stack: [@0x7D :label13 @0x13]
0x97	PUSH(0x4)
0x99	DUP1
0xA5	DUP2
0xA6	PUSH(POP(@0x7D) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0xA7	SWAP1
0xA8	SSTORE(POP(0x4), POP(@0xA6))

:label2
# Stack: [@0x7D :label13 @0x13]
0xAA	POP()
0xAB	JUMP(POP(:label13))

:label3
# Stack: [@0x13]
0xAD	PUSH(:label14)
0xB2	PUSH(CALLDATALOAD(0x4))
0xB3	PUSH(0x0)
0xB5	DUP1
0xB6	PUSH(SLOAD(POP(0x0)))
0xB7	DUP2
0xB8	SWAP1
0xB9	DUP2
0xBF	JUMPI(0x2, !(POP(@0xB2) < POP(@0xB6)))

# Stack: [@0xB2 0x0 @0xB2 :label14 @0x13]
0xC0	POP()
0xC1	DUP1
0xC2	MSTORE(POP(0x0), POP(0x0))
0xC5	PUSH(0x2 * POP(@0xB2))
0xE7	DUP1
0xE9	PUSH(SLOAD(POP(@0xC5) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0xEA	PUSH(0x0)
0xEC	DUP1
0xF3	DUP1
0xF4	CODECOPY(POP(0x0), 0x444, 0x20)
0xF5	DUP1
0xF6	PUSH(MLOAD(POP(0x0)))
0xF7	SWAP1
0xF8	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xF9	SWAP1
0xFA	SWAP1
0xFB	SWAP2
0xFD	PUSH(SLOAD(POP(@0xF6) + POP(@0xC5)))
0x105	PUSH(0x2 ** 0xA0 - 0x1)
0x106	SWAP2
0x107	SWAP1
0x108	SWAP2
0x109	PUSH(POP(@0x105) & POP(@0xE9))
0x10A	SWAP1
0x10B	DUP3
0x10C	JUMP(POP(:label14))

:label4
# Stack: [@0x13]
0x10E	PUSH(:label15)
0x11C	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0x11D	DUP2
0x11E	JUMP(POP(:label15))

:label5
# Stack: [@0x13]
0x120	PUSH(:label16)
0x125	PUSH(SLOAD(0x2))
0x126	DUP2
0x127	JUMP(POP(:label16))

:label6
# Stack: [@0x13]
0x129	PUSH(:label16)
0x12E	PUSH(SLOAD(0x1))
0x12F	DUP2
0x130	JUMP(POP(:label16))

:label7
# Stack: [@0x13]
0x132	PUSH(:label16)
0x137	PUSH(SLOAD(0x3))
0x138	DUP2
0x139	JUMP(POP(:label16))

:label8
# Stack: [@0x13]
0x13B	PUSH(:label13)
0x140	PUSH(SLOAD(0x4))
0x148	PUSH(0x2 ** 0xA0 - 0x1)
0x149	SWAP1
0x14A	DUP2
0x14B	PUSH(POP(@0x148) & POP(@0x140))
0x14C	PUSH(CALLER())
0x14D	SWAP1
0x14E	SWAP1
0x14F	SWAP2
0x156	JUMPI(:label9, !(POP(@0x14C) & POP(@0x148) == POP(@0x14B)))

# Stack: [:label13 @0x13]
0x161	JUMPI(:label17, !(0x0 == SLOAD(0x2)))

:label9
# Stack: [[:label13 | :label13]]
0x163	JUMP(POP())

:label10
# Stack: [@0x13]
0x165	PUSH(:label13)

:label11
# Stack: [[:label9 | :label13] [@0x13 | :label13]]
0x169	PUSH(0x0)
0x16B	PUSH(0x0)
0x16D	PUSH(0x0)
0x17D	JUMPI(:label18, !(CALLVALUE() < 0x2386F26FC10000))

# Stack: [0x0 0x0 0x0 [:label9 | :label13] [:label13 | @0x13]]
0x180	PUSH(MLOAD(0x40))
0x18A	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x18B	SWAP1
0x18C	DUP3
0x18D	SWAP1
0x18E	PUSH(CALLVALUE())
0x18F	SWAP1
0x190	DUP3
0x191	DUP2
0x192	DUP2
0x193	DUP2
0x194	DUP6
0x195	DUP9
0x196	DUP4
0x197	PUSH(CALL(POP(0x0), POP(@0x18A), POP(@0x18E), POP(@0x180), POP(0x0), POP(@0x180), POP(0x0)))
0x198	POP()
0x199	POP()
0x19A	POP()
0x19B	POP()
0x19C	POP()

:label12
# Stack: [[0x0 | @0x3DE] [0x0 | @0x27B] [0x0 | 0x2B5E3AF16B1880000 | @0x274] [:label13 | :label9] [:label13 | @0x13]]
0x19E	POP()
0x19F	POP()
0x1A0	POP()
0x1A1	JUMP(POP())

:label13
# Stack: []
0x1A3	STOP()

:label14
# Stack: [@0xFD @0x109 :label14 @0x13]
0x1A7	PUSH(MLOAD(0x40))
0x1A8	DUP1
0x1A9	DUP4
0x1B3	DUP1
0x1B4	MSTORE(POP(@0x1A7), 0x2 ** 0xA0 - 0x1 & POP(@0x109))
0x1B7	PUSH(0x20 + POP(@0x1A7))
0x1B8	DUP3
0x1B9	DUP2
0x1BA	MSTORE(POP(@0x1B7), POP(@0xFD))
0x1BD	PUSH(0x20 + POP(@0x1B7))
0x1BE	SWAP3
0x1BF	POP()
0x1C0	POP()
0x1C1	POP()
0x1C4	PUSH(MLOAD(0x40))
0x1C5	DUP1
0x1C6	SWAP2
0x1C7	PUSH(POP(@0x1BD) - POP(@0x1C4))
0x1C8	SWAP1
0x1C9	RETURN(POP(@0x1C4), POP(@0x1C7))

:label15
# Stack: [@0x11C :label15 @0x13]
0x1CB	PUSH(0x40)
0x1CD	DUP1
0x1CE	PUSH(MLOAD(POP(0x40)))
0x1D6	PUSH(0x2 ** 0xA0 - 0x1)
0x1D7	SWAP3
0x1D8	SWAP1
0x1D9	SWAP3
0x1DB	DUP2
0x1DC	MSTORE(POP(@0x1CE), POP(@0x1D6) & POP(@0x11C))
0x1DD	PUSH(MLOAD(POP(0x40)))
0x1DE	SWAP1
0x1DF	DUP2
0x1E0	SWAP1
0x1E4	PUSH(0x20 + POP(@0x1CE) - POP(@0x1DD))
0x1E5	SWAP1
0x1E6	RETURN(POP(@0x1DD), POP(@0x1E4))

:label16
# Stack: [[@0x137 | @0x12E | @0x125] [:label16 | :label16 | :label16] @0x13]
0x1E8	PUSH(0x40)
0x1EA	DUP1
0x1EB	PUSH(MLOAD(POP(0x40)))
0x1EC	SWAP2
0x1ED	DUP3
0x1EE	MSTORE(POP(@0x1EB), POP())
0x1EF	PUSH(MLOAD(POP(0x40)))
0x1F0	SWAP1
0x1F1	DUP2
0x1F2	SWAP1
0x1F6	PUSH(0x20 + POP(@0x1EB) - POP(@0x1EF))
0x1F7	SWAP1
0x1F8	RETURN(POP(@0x1EF), POP(@0x1F6))

:label17
# Stack: [:label13 @0x13]
0x1FC	PUSH(SLOAD(0x4))
0x1FF	PUSH(SLOAD(0x2))
0x202	PUSH(MLOAD(0x40))
0x20A	PUSH(0x2 ** 0xA0 - 0x1)
0x20B	SWAP1
0x20C	SWAP1
0x20D	SWAP3
0x20E	PUSH(POP(@0x20A) & POP(@0x1FC))
0x20F	SWAP2
0x210	PUSH(0x0)
0x212	SWAP2
0x213	SWAP1
0x214	DUP3
0x215	DUP2
0x216	DUP2
0x217	DUP2
0x218	DUP6
0x219	DUP9
0x21A	DUP4
0x21B	PUSH(CALL(POP(0x0), POP(@0x20E), POP(@0x1FF), POP(@0x202), POP(0x0), POP(@0x202), POP(0x0)))
0x21C	POP()
0x21D	POP()
0x21E	POP()
0x221	SSTORE(0x2, POP(0x0))
0x222	POP()
0x223	JUMP(POP(:label13))

:label18
# Stack: [0x0 0x0 0x0 [:label9 | :label13] [:label13 | @0x13]]
0x235	JUMPI(:label19, !(CALLVALUE() > 0x2B5E3AF16B1880000))

# Stack: [0x0 0x0 0x0 [:label9 | :label13] [@0x13 | :label13]]
0x238	PUSH(MLOAD(0x40))
0x242	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x243	SWAP1
0x244	PUSH(0x0)
0x246	SWAP1
0x253	PUSH(CALLVALUE() + ~0x2B5E3AF16B187FFFF)
0x254	SWAP1
0x255	DUP3
0x256	DUP2
0x257	DUP2
0x258	DUP2
0x259	DUP6
0x25A	DUP9
0x25B	DUP4
0x25C	PUSH(CALL(POP(0x0), POP(@0x242), POP(@0x253), POP(@0x238), POP(0x0), POP(@0x238), POP(0x0)))
0x25D	POP()
0x25E	PUSH(0x2B5E3AF16B1880000)
0x268	SWAP7
0x269	POP()
0x26A	PUSH(:label20)
0x26D	SWAP4
0x26E	POP()
0x26F	POP()
0x270	POP()
0x271	POP()
0x272	JUMP(POP(:label20))

:label19
# Stack: [0x0 0x0 0x0 [:label9 | :label13] [:label13 | @0x13]]
0x274	PUSH(CALLVALUE())
0x275	SWAP3
0x276	POP()

:label20
# Stack: [0x0 0x0 [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x278	PUSH(0x0)
0x27A	DUP1
0x27B	PUSH(SLOAD(POP(0x0)))
0x27E	DUP1
0x27F	PUSH(POP(@0x27B) + 0x1)
0x280	DUP1
0x281	DUP4
0x282	SSTORE(POP(0x0), POP(@0x27F))
0x283	SWAP1
0x284	SWAP4
0x285	POP()
0x286	SWAP1
0x287	DUP2
0x288	DUP5
0x289	DUP1
0x28A	PUSH(!POP(@0x27B))
0x28B	DUP2
0x28C	SWAP1
0x291	JUMPI(:label22, POP(@0x28A) > POP(@0x27F))

# Stack: [@0x27B @0x27F 0x0 @0x27F 0x0 @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x294	PUSH(0x2 * POP(@0x27B))
0x295	DUP1
0x299	DUP2
0x29C	MSTORE(0x0, POP(0x0))
0x2A1	PUSH(SHA3(0x0, 0x20))
0x2A2	SWAP1
0x2A3	DUP2
0x2A4	PUSH(POP(@0x2A1) + POP(@0x294))
0x2A5	SWAP1
0x2A6	PUSH(POP(@0x2A1) + 0x2 * POP(@0x27F))
0x2A7	PUSH(:label22)
0x2AA	SWAP2
0x2AB	SWAP1

:label21
# Stack: [[@0x2A6 | @0x2CA] @0x2A4 :label22 @0x27F 0x0 @0x27F 0x0 @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x2AD	DUP1
0x2AE	DUP3
0x2B4	JUMPI(:label23, !(POP(@0x2A4) > POP()))

# Stack: [[@0x2A6 | @0x2CA] @0x2A4 :label22 @0x27F 0x0 @0x27F 0x0 @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x2B5	DUP1
0x2C1	DUP1
0x2C2	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x2C3	PUSH(0x0)
0x2C5	PUSH(0x1)
0x2C7	SWAP1
0x2C8	SWAP1
0x2C9	SWAP2
0x2CA	PUSH(POP(0x1) + POP())
0x2CB	SWAP1
0x2CC	DUP2
0x2CD	SSTORE(POP(@0x2CA), POP(0x0))
0x2D1	JUMP(:label21)

:label22
# Stack: [[@0x27B | @0x2A4] @0x27F 0x0 @0x27F 0x0 @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x2D3	POP()
0x2D4	POP()
0x2D5	POP()
0x2D6	POP()
0x2D7	PUSH(CALLER())
0x2D8	PUSH(0x0)
0x2DC	POP(0x0)
0x2DD	DUP4
0x2DE	DUP2
0x2E0	DUP1
0x2E6	JUMPI(0x2, !(POP(@0x27B) < SLOAD(POP(0x0))))

# Stack: [@0x27B 0x0 @0x2D7 0x0 @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x2E7	DUP2
0x2E8	DUP1
0x2E9	MSTORE(POP(0x0), POP(0x0))
0x30E	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x27B))
0x30F	DUP1
0x31A	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x30E)))
0x31B	SWAP1
0x31C	SWAP3
0x31D	PUSH(POP(@0x2D7) | POP(@0x31A))
0x31E	SWAP1
0x31F	SWAP2
0x320	SSTORE(POP(@0x30E), POP(@0x31D))
0x321	DUP1
0x322	PUSH(SLOAD(POP(0x0)))
0x323	DUP4
0x324	SWAP1
0x325	SWAP1
0x326	DUP5
0x327	SWAP1
0x328	DUP2
0x32E	JUMPI(0x2, !(POP(@0x27B) < POP(@0x322)))

# Stack: [@0x27B 0x0 [@0x274 | 0x2B5E3AF16B1880000] 0x0 @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x332	PUSH(0x0)
0x334	DUP1
0x33B	DUP1
0x33C	CODECOPY(POP(0x0), 0x444, 0x20)
0x33D	DUP1
0x33E	PUSH(MLOAD(POP(0x0)))
0x33F	SWAP1
0x340	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x341	PUSH(POP(@0x33E) + 0x2 * POP(@0x27B))
0x342	SWAP2
0x343	SWAP1
0x344	SWAP2
0x345	SSTORE(POP(@0x341), POP())
0x346	DUP3
0x34B	JUMPI(:label24, POP(@0x27B) == POP(0x0))

# Stack: [0x0 @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x34C	PUSH(0x2)
0x34E	DUP1
0x34F	PUSH(SLOAD(POP(0x2)))
0x352	DUP4
0x353	PUSH(POP() / 0xA)
0x354	SWAP1
0x355	DUP2
0x356	PUSH(POP(@0x353) + POP(@0x34F))
0x357	SWAP1
0x358	SWAP2
0x359	SSTORE(POP(0x2), POP(@0x356))
0x35A	PUSH(0x3)
0x35C	DUP1
0x35D	PUSH(SLOAD(POP(0x3)))
0x35E	SWAP2
0x35F	DUP6
0x360	PUSH(POP() - POP(@0x353))
0x361	SWAP1
0x362	SWAP2
0x363	PUSH(POP(@0x35D) + POP(@0x360))
0x364	SWAP1
0x365	SSTORE(POP(0x3), POP(@0x363))
0x369	JUMP(:label25)

:label23
# Stack: [[@0x2CA | @0x2A6] @0x2A4 :label22 @0x27F 0x0 @0x27F 0x0 @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x36B	POP()
0x36C	SWAP1
0x36D	JUMP(POP(:label22))

:label24
# Stack: [0x0 @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x36F	PUSH(0x2)
0x371	DUP1
0x373	DUP4
0x374	PUSH(POP() + SLOAD(POP(0x2)))
0x375	SWAP1
0x376	SSTORE(POP(0x2), POP(@0x374))

:label25
# Stack: [[0x0 | @0x3DE] @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x37B	PUSH(SLOAD(0x1))
0x37C	PUSH(0x0)
0x37E	DUP1
0x37F	PUSH(SLOAD(POP(0x0)))
0x380	SWAP1
0x381	SWAP2
0x382	SWAP1
0x383	DUP2
0x389	JUMPI(0x2, !(POP(@0x37B) < POP(@0x37F)))

# Stack: [@0x37B 0x0 [@0x3DE | 0x0] @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x38A	SWAP1
0x38B	DUP1
0x38C	MSTORE(POP(0x0), POP(0x0))
0x38F	PUSH(SLOAD(0x3))
0x390	PUSH(0x2)
0x392	SWAP1
0x393	DUP2
0x395	PUSH(0x0)
0x397	DUP1
0x39E	DUP1
0x39F	CODECOPY(POP(0x0), 0x444, 0x20)
0x3A0	DUP1
0x3A1	PUSH(MLOAD(POP(0x0)))
0x3A2	SWAP1
0x3A3	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3A5	PUSH(SLOAD(POP(@0x3A1) + POP(0x2) * POP(@0x37B)))
0x3A6	SWAP1
0x3A7	SWAP2
0x3A8	PUSH(POP(0x2) * POP(@0x3A5))
0x3A9	SWAP1
0x3AF	JUMPI(:label12, !(POP(@0x38F) > POP(@0x3A8)))

# Stack: [[0x0 | @0x3DE] @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [:label13 | @0x13]]
0x3B2	PUSH(SLOAD(0x1))
0x3B3	PUSH(0x0)
0x3B5	DUP1
0x3B6	PUSH(SLOAD(POP(0x0)))
0x3B7	SWAP1
0x3B8	SWAP2
0x3B9	SWAP1
0x3BA	DUP2
0x3C0	JUMPI(0x2, !(POP(@0x3B2) < POP(@0x3B6)))

# Stack: [@0x3B2 0x0 [0x0 | @0x3DE] @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [@0x13 | :label13]]
0x3C3	PUSH(SLOAD(0x1))
0x3C4	DUP3
0x3C5	PUSH(SLOAD(POP(0x0)))
0x3C6	PUSH(0x2)
0x3C8	SWAP2
0x3C9	DUP3
0x3CB	PUSH(0x0)
0x3CD	DUP1
0x3D4	DUP1
0x3D5	CODECOPY(POP(0x0), 0x444, 0x20)
0x3D6	DUP1
0x3D7	PUSH(MLOAD(POP(0x0)))
0x3D8	SWAP1
0x3D9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3DB	PUSH(SLOAD(POP(@0x3D7) + POP(0x2) * POP(@0x3B2)))
0x3DC	SWAP1
0x3DD	SWAP3
0x3DE	PUSH(POP(0x2) * POP(@0x3DB))
0x3DF	SWAP4
0x3E0	POP()
0x3E1	SWAP1
0x3E2	DUP2
0x3E8	JUMPI(0x2, !(POP(@0x3C3) < POP(@0x3C5)))

# Stack: [@0x3C3 0x0 @0x3DE @0x27B [0x2B5E3AF16B1880000 | @0x274] [:label9 | :label13] [@0x13 | :label13]]
0x3EB	PUSH(MLOAD(0x40))
0x3EC	PUSH(0x2)
0x3EE	SWAP2
0x3EF	SWAP1
0x3F0	SWAP2
0x41D	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP(@0x3C3)))
0x41E	SWAP2
0x41F	SWAP1
0x420	DUP4
0x421	SWAP1
0x422	DUP3
0x423	DUP2
0x424	DUP2
0x425	DUP2
0x426	DUP6
0x427	DUP9
0x428	DUP4
0x429	PUSH(CALL(POP(0x0), POP(@0x41D), POP(@0x3DE), POP(@0x3EB), POP(0x0), POP(@0x3EB), POP(0x0)))
0x42A	POP()
0x42B	POP()
0x42C	PUSH(0x3)
0x42E	DUP1
0x42F	PUSH(SLOAD(POP(0x3)))
0x430	SWAP2
0x431	SWAP1
0x432	SWAP2
0x433	PUSH(POP(@0x42F) - POP(@0x3DE))
0x434	SWAP1
0x435	SSTORE(POP(0x3), POP(@0x433))
0x436	POP()
0x437	POP()
0x438	PUSH(0x1)
0x43A	DUP1
0x43C	DUP1
0x43D	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x43E	SWAP1
0x43F	SSTORE(POP(0x1), POP(@0x43D))
0x443	JUMP(:label25)


