# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x1E0018D6)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label2, 0x1FC06F0D == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label3, 0x32D79689 == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label4, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label5, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label6, 0xD377DEDD == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label7, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label9)
0x65	PUSH(:label10)
0x6B	JUMP(:label8)

:label1
# Stack: [@0x13]
0x6D	PUSH(:label11)
0x72	PUSH(SLOAD(0x4))
0x73	DUP2
0x74	JUMP(POP(:label11))

:label2
# Stack: [@0x13]
0x76	PUSH(:label12)
0x7B	PUSH(CALLDATALOAD(0x4))
0x7C	PUSH(0x1)
0x7E	DUP1
0x7F	PUSH(SLOAD(POP(0x1)))
0x80	DUP2
0x81	SWAP1
0x82	DUP2
0x88	JUMPI(0x2, !(POP(@0x7B) < POP(@0x7F)))

# Stack: [@0x7B 0x1 @0x7B :label12 @0x13]
0x89	POP()
0x8C	MSTORE(0x0, POP(0x1))
0x8D	PUSH(0x0)
0x8F	DUP1
0x96	DUP1
0x97	CODECOPY(POP(0x0), 0x3C3, 0x20)
0x98	DUP1
0x99	PUSH(MLOAD(POP(0x0)))
0x9A	SWAP1
0x9B	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xA6	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x99) + POP(@0x7B)))
0xA7	DUP2
0xA8	JUMP(POP(:label12))

:label3
# Stack: [@0x13]
0xAA	PUSH(:label11)
0xAF	PUSH(SLOAD(0x3))
0xB0	DUP2
0xB1	JUMP(POP(:label11))

:label4
# Stack: [@0x13]
0xB3	PUSH(:label12)
0xB8	PUSH(CALLDATALOAD(0x4))
0xB9	PUSH(0x0)
0xBB	DUP1
0xBC	PUSH(SLOAD(POP(0x0)))
0xBD	DUP2
0xBE	SWAP1
0xBF	DUP2
0xC5	JUMPI(0x2, !(POP(@0xB8) < POP(@0xBC)))

# Stack: [@0xB8 0x0 @0xB8 :label12 @0x13]
0xC6	POP()
0xC7	DUP1
0xC8	MSTORE(POP(0x0), POP(0x0))
0xF4	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(@0xB8)))
0xF5	DUP2
0xF6	JUMP(POP(:label12))

:label5
# Stack: [@0x13]
0xF8	PUSH(:label11)
0xFD	PUSH(SLOAD(0x2))
0xFE	DUP2
0xFF	JUMP(POP(:label11))

:label6
# Stack: [@0x13]
0x101	PUSH(:label12)
0x10F	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x5))
0x110	DUP2
0x111	JUMP(POP(:label12))

:label7
# Stack: [@0x13]
0x113	PUSH(:label9)

:label8
# Stack: [[:label9 | :label10] [:label9 | @0x13]]
0x117	PUSH(0x0)
0x119	DUP1
0x128	JUMPI(:label13, CALLVALUE() == 0x7CE66C50E2840000)

# Stack: [0x0 0x0 [:label10 | :label9] [:label9 | @0x13]]
0x12C	JUMP(0x2)

:label9
# Stack: []
0x12E	STOP()

:label10
# Stack: [:label9]
0x130	JUMP(POP(:label9))

:label11
# Stack: [[@0xFD | @0xAF | @0x72] [:label11 | :label11 | :label11] @0x13]
0x132	PUSH(0x40)
0x134	DUP1
0x135	PUSH(MLOAD(POP(0x40)))
0x136	SWAP2
0x137	DUP3
0x138	MSTORE(POP(@0x135), POP())
0x139	PUSH(MLOAD(POP(0x40)))
0x13A	SWAP1
0x13B	DUP2
0x13C	SWAP1
0x140	PUSH(0x20 + POP(@0x135) - POP(@0x139))
0x141	SWAP1
0x142	RETURN(POP(@0x139), POP(@0x140))

:label12
# Stack: [[@0x10F | @0xF4 | @0xA6] [:label12 | :label12 | :label12] @0x13]
0x144	PUSH(0x40)
0x146	DUP1
0x147	PUSH(MLOAD(POP(0x40)))
0x14F	PUSH(0x2 ** 0xA0 - 0x1)
0x150	SWAP3
0x151	SWAP1
0x152	SWAP3
0x154	DUP2
0x155	MSTORE(POP(@0x147), POP(@0x14F) & POP())
0x156	PUSH(MLOAD(POP(0x40)))
0x157	SWAP1
0x158	DUP2
0x159	SWAP1
0x15D	PUSH(0x20 + POP(@0x147) - POP(@0x156))
0x15E	SWAP1
0x15F	RETURN(POP(@0x156), POP(@0x15D))

:label13
# Stack: [0x0 0x0 [:label10 | :label9] [:label9 | @0x13]]
0x163	PUSH(SLOAD(0x4))
0x164	PUSH(0x9)
0x166	SWAP1
0x16C	JUMPI(:label16, !(POP(@0x163) < POP(0x9)))

# Stack: [0x0 0x0 [:label10 | :label9] [:label9 | @0x13]]
0x16D	PUSH(0x0)
0x16F	DUP1
0x170	PUSH(SLOAD(POP(0x0)))
0x173	DUP1
0x174	PUSH(POP(@0x170) + 0x1)
0x175	DUP1
0x176	DUP4
0x177	SSTORE(POP(0x0), POP(@0x174))
0x178	SWAP1
0x179	SWAP4
0x17A	POP()
0x17B	SWAP1
0x17C	DUP2
0x17D	DUP5
0x17E	DUP1
0x17F	PUSH(!POP(@0x170))
0x180	DUP2
0x181	SWAP1
0x186	JUMPI(:label15, POP(@0x17F) > POP(@0x174))

# Stack: [@0x170 @0x174 0x0 @0x174 0x0 @0x170 [:label10 | :label9] [:label9 | @0x13]]
0x187	DUP2
0x188	DUP4
0x18B	MSTORE(0x0, POP(0x0))
0x190	PUSH(SHA3(0x0, 0x20))
0x191	SWAP2
0x192	DUP3
0x193	PUSH(POP(@0x190) + POP(@0x170))
0x194	SWAP2
0x195	PUSH(POP(@0x190) + POP(@0x174))
0x196	PUSH(:label15)
0x199	SWAP2
0x19A	SWAP1

:label14
# Stack: [[@0x195 | @0x1B4 | @0x24E] [@0x193 | @0x24B] [:label15 | :label18] [@0x174 | @0x220] [0x0 | 0x1] [@0x174 | @0x220] [0x0 | @0x21D] [0x0 | @0x170] [:label10 | :label9] [:label9 | @0x13]]
0x19C	DUP1
0x19D	DUP3
0x1A3	JUMPI(:label17, !(POP() > POP()))

# Stack: [[@0x1B4 | @0x24E | @0x195] [@0x193 | @0x24B] [:label15 | :label18] [@0x174 | @0x220] [0x0 | 0x1] [@0x174 | @0x220] [0x0 | @0x21D] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x1A4	DUP1
0x1B0	DUP1
0x1B1	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x1B4	PUSH(0x1 + POP())
0x1B8	JUMP(:label14)

:label15
# Stack: [[@0x193 | @0x170] @0x174 0x0 @0x174 0x0 @0x170 [:label10 | :label9] [:label9 | @0x13]]
0x1BA	POP()
0x1BB	POP()
0x1BC	POP()
0x1BD	POP()
0x1BE	PUSH(CALLER())
0x1BF	PUSH(0x0)
0x1C3	POP(0x0)
0x1C4	DUP4
0x1C5	DUP2
0x1C7	DUP1
0x1CD	JUMPI(0x2, !(POP(@0x170) < SLOAD(POP(0x0))))

# Stack: [@0x170 0x0 @0x1BE 0x0 @0x170 [:label10 | :label9] [:label9 | @0x13]]
0x1CE	SWAP1
0x1CF	DUP1
0x1D0	MSTORE(POP(0x0), POP(0x0))
0x1F2	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(@0x170))
0x1F3	DUP1
0x1FE	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x1F2)))
0x1FF	SWAP1
0x200	SWAP2
0x201	PUSH(POP(@0x1BE) | POP(@0x1FE))
0x202	SWAP1
0x203	SSTORE(POP(@0x1F2), POP(@0x201))
0x204	PUSH(0x4)
0x206	DUP1
0x20A	PUSH(0x1 + SLOAD(POP(0x4)))
0x20B	SWAP1
0x20C	SSTORE(POP(0x4), POP(@0x20A))

:label16
# Stack: [0x0 [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x210	PUSH(SLOAD(0x4))
0x211	PUSH(0x9)
0x213	SWAP1
0x218	JUMPI(:label19, POP(@0x210) < POP(0x9))

# Stack: [0x0 [0x0 | @0x170] [:label10 | :label9] [@0x13 | :label9]]
0x219	POP()
0x21A	PUSH(0x1)
0x21C	DUP1
0x21D	PUSH(SLOAD(POP(0x1)))
0x21E	DUP1
0x21F	DUP3
0x220	PUSH(POP(0x1) + POP(@0x21D))
0x221	DUP1
0x222	DUP4
0x223	SSTORE(POP(0x1), POP(@0x220))
0x224	SWAP1
0x225	SWAP2
0x226	DUP2
0x227	DUP4
0x228	DUP1
0x229	PUSH(!POP(@0x21D))
0x22A	DUP2
0x22B	SWAP1
0x230	JUMPI(:label18, POP(@0x229) > POP(@0x220))

# Stack: [@0x21D @0x220 0x1 @0x220 @0x21D [@0x170 | 0x0] [:label9 | :label10] [:label9 | @0x13]]
0x231	PUSH(0x0)
0x233	DUP3
0x234	SWAP1
0x235	MSTORE(POP(0x0), POP(0x1))
0x236	PUSH(:label18)
0x239	SWAP1
0x23A	PUSH(0x0)
0x23C	DUP1
0x243	DUP1
0x244	CODECOPY(POP(0x0), 0x3C3, 0x20)
0x245	DUP1
0x246	PUSH(MLOAD(POP(0x0)))
0x247	SWAP1
0x248	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x249	SWAP1
0x24A	DUP2
0x24B	PUSH(POP(@0x246) + POP(@0x21D))
0x24C	SWAP1
0x24D	DUP4
0x24E	PUSH(POP(@0x220) + POP(@0x246))
0x252	JUMP(:label14)

:label17
# Stack: [[@0x1B4 | @0x24E | @0x195] [@0x193 | @0x24B] [:label15 | :label18] [@0x174 | @0x220] [0x1 | 0x0] [@0x174 | @0x220] [@0x21D | 0x0] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x254	POP()
0x255	SWAP1
0x256	JUMP(POP())

:label18
# Stack: [[@0x24B | @0x21D] @0x220 0x1 @0x220 @0x21D [@0x170 | 0x0] [:label10 | :label9] [@0x13 | :label9]]
0x258	POP()
0x259	POP()
0x25A	POP()
0x25B	POP()
0x25C	PUSH(CALLER())
0x25D	PUSH(0x1)
0x261	POP(0x0)
0x262	DUP3
0x263	DUP2
0x265	DUP1
0x26B	JUMPI(0x2, !(POP(@0x21D) < SLOAD(POP(0x1))))

# Stack: [@0x21D 0x1 @0x25C @0x21D [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x26C	PUSH(0x0)
0x26E	DUP2
0x26F	SWAP1
0x270	MSTORE(POP(0x0), POP(0x1))
0x271	PUSH(0x0)
0x273	DUP1
0x27A	DUP1
0x27B	CODECOPY(POP(0x0), 0x3C3, 0x20)
0x27C	DUP1
0x27D	PUSH(MLOAD(POP(0x0)))
0x27E	SWAP1
0x27F	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x280	PUSH(POP(@0x27D) + POP(@0x21D))
0x281	DUP1
0x28C	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x280)))
0x28D	SWAP1
0x28E	SWAP3
0x28F	PUSH(POP(@0x25C) | POP(@0x28C))
0x290	SWAP1
0x291	SWAP2
0x292	SSTORE(POP(@0x280), POP(@0x28F))
0x293	PUSH(0x4)
0x295	DUP1
0x296	PUSH(SLOAD(POP(0x4)))
0x297	SWAP1
0x298	SWAP2
0x299	PUSH(POP(0x1) + POP(@0x296))
0x29A	SWAP1
0x29B	SSTORE(POP(0x4), POP(@0x299))

:label19
# Stack: [[0x0 | @0x21D] [0x0 | @0x170] [:label9 | :label10] [:label9 | @0x13]]
0x2A7	JUMPI(:label20, !(0xA == SLOAD(0x4)))

# Stack: [[0x0 | @0x21D] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x2AA	PUSH(SLOAD(0x3))
0x2AB	PUSH(0x1)
0x2AD	DUP1
0x2AE	PUSH(SLOAD(POP(0x1)))
0x2AF	SWAP1
0x2B0	SWAP2
0x2B1	SWAP1
0x2B2	DUP2
0x2B8	JUMPI(0x2, !(POP(@0x2AA) < POP(@0x2AE)))

# Stack: [@0x2AA 0x1 [@0x21D | 0x0] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x2B9	PUSH(0x0)
0x2BB	SWAP2
0x2BC	DUP3
0x2BD	MSTORE(POP(0x0), POP(0x1))
0x2BE	PUSH(0x0)
0x2C0	DUP1
0x2C7	DUP1
0x2C8	CODECOPY(POP(0x0), 0x3C3, 0x20)
0x2C9	DUP1
0x2CA	PUSH(MLOAD(POP(0x0)))
0x2CB	SWAP1
0x2CC	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2CD	PUSH(POP(@0x2CA) + POP(@0x2AA))
0x2CE	SWAP1
0x2CF	POP()
0x2D0	PUSH(0x5)
0x2D2	DUP1
0x2D3	PUSH(SLOAD(POP(0x5)))
0x2D4	SWAP2
0x2DE	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x2CD)))
0x2E7	PUSH(~(0x2 ** 0xA0 - 0x1))
0x2E8	SWAP2
0x2E9	SWAP1
0x2EA	SWAP3
0x2EB	PUSH(POP(@0x2E7) & POP(@0x2D3))
0x2EC	SWAP2
0x2ED	SWAP1
0x2EE	SWAP2
0x2EF	PUSH(POP(@0x2EB) | POP(@0x2DE))
0x2F0	SWAP1
0x2F1	SSTORE(POP(0x5), POP(@0x2EF))
0x2F6	SSTORE(0x4, 0x0)
0x2F7	PUSH(0x3)
0x2F9	DUP1
0x2FD	PUSH(0x1 + SLOAD(POP(0x3)))
0x2FE	SWAP1
0x2FF	SSTORE(POP(0x3), POP(@0x2FD))

:label20
# Stack: [[@0x21D | 0x0] [@0x170 | 0x0] [:label9 | :label10] [:label9 | @0x13]]
0x303	DUP2
0x308	JUMPI(:label21, POP() == 0x0)

# Stack: [[@0x21D | 0x0] [0x0 | @0x170] [:label9 | :label10] [:label9 | @0x13]]
0x30B	PUSH(SLOAD(0x5))
0x30E	PUSH(MLOAD(0x40))
0x316	PUSH(0x2 ** 0xA0 - 0x1)
0x317	SWAP1
0x318	SWAP1
0x319	SWAP2
0x31A	PUSH(POP(@0x316) & POP(@0x30B))
0x31B	SWAP1
0x31C	PUSH(0x0)
0x31E	SWAP1
0x31F	PUSH(0xDE0B6B3A7640000)
0x328	SWAP1
0x329	DUP3
0x32A	DUP2
0x32B	DUP2
0x32C	DUP2
0x32D	DUP6
0x32E	DUP9
0x32F	DUP4
0x330	PUSH(CALL(POP(0x0), POP(@0x31A), POP(0xDE0B6B3A7640000), POP(@0x30E), POP(0x0), POP(@0x30E), POP(0x0)))
0x331	POP()
0x332	POP()
0x333	POP()
0x334	POP()
0x335	POP()

:label21
# Stack: [[@0x21D | 0x0] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x351	JUMPI(:label22, !(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()) > 0x8AC7230489E80000))

# Stack: [[@0x21D | 0x0] [@0x170 | 0x0] [:label10 | :label9] [@0x13 | :label9]]
0x354	PUSH(SLOAD(0x2))
0x355	PUSH(0x0)
0x357	DUP1
0x358	PUSH(SLOAD(POP(0x0)))
0x359	SWAP1
0x35A	SWAP2
0x35B	SWAP1
0x35C	DUP2
0x362	JUMPI(0x2, !(POP(@0x354) < POP(@0x358)))

# Stack: [@0x354 0x0 [@0x21D | 0x0] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x363	DUP2
0x364	DUP1
0x365	MSTORE(POP(0x0), POP(0x0))
0x368	PUSH(MLOAD(0x40))
0x369	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563)
0x38A	SWAP2
0x38B	SWAP1
0x38C	SWAP2
0x397	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563) + POP(@0x354)))
0x398	SWAP2
0x399	SWAP1
0x39A	PUSH(0x8AC7230489E80000)
0x3A3	SWAP1
0x3A4	DUP3
0x3A5	DUP2
0x3A6	DUP2
0x3A7	DUP2
0x3A8	DUP6
0x3A9	DUP9
0x3AA	DUP4
0x3AB	PUSH(CALL(POP(0x0), POP(@0x397), POP(0x8AC7230489E80000), POP(@0x368), POP(0x0), POP(@0x368), POP(0x0)))
0x3AC	POP()
0x3AD	POP()
0x3AE	PUSH(0x2)
0x3B0	DUP1
0x3B4	PUSH(0x1 + SLOAD(POP(0x2)))
0x3B5	SWAP1
0x3B6	SSTORE(POP(0x2), POP(@0x3B4))
0x3B7	POP()
0x3B8	PUSH(:label21)
0x3BB	SWAP2
0x3BC	POP()
0x3BD	POP()
0x3BE	JUMP(POP(:label21))

:label22
# Stack: [[@0x21D | 0x0] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x3C0	POP()
0x3C1	POP()
0x3C2	JUMP(POP())


