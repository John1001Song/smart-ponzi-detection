# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xE8C6ED14 == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label9, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label11)
0x70	PUSH(:label12)
0x76	JUMP(:label10)

:label1
# Stack: [@0x13]
0x78	PUSH(:label11)
0x7D	PUSH(CALLDATALOAD(0x4))
0x80	PUSH(SLOAD(0x5))
0x88	PUSH(0x2 ** 0xA0 - 0x1)
0x89	SWAP1
0x8A	DUP2
0x8B	PUSH(POP(@0x88) & POP(@0x80))
0x8C	PUSH(CALLER())
0x8D	SWAP1
0x8E	SWAP1
0x8F	SWAP2
0x96	JUMPI(:label2, !(POP(@0x8C) & POP(@0x88) == POP(@0x8B)))

# Stack: [@0x7D :label11 @0x13]
0x97	PUSH(0x5)
0x99	DUP1
0xA5	DUP2
0xA6	PUSH(POP(@0x7D) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x5)))
0xA7	SWAP1
0xA8	SSTORE(POP(0x5), POP(@0xA6))

:label2
# Stack: [@0x7D :label11 @0x13]
0xAA	POP()
0xAB	JUMP(POP(:label11))

:label3
# Stack: [@0x13]
0xAD	PUSH(:label13)
0xBB	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x5))
0xBC	DUP2
0xBD	JUMP(POP(:label13))

:label4
# Stack: [@0x13]
0xBF	PUSH(:label14)
0xC4	PUSH(SLOAD(0x2))
0xC5	DUP2
0xC6	JUMP(POP(:label14))

:label5
# Stack: [@0x13]
0xC8	PUSH(:label15)
0xCD	PUSH(CALLDATALOAD(0x4))
0xCE	PUSH(0x0)
0xD0	DUP1
0xD1	PUSH(SLOAD(POP(0x0)))
0xD2	DUP2
0xD3	SWAP1
0xD4	DUP2
0xDA	JUMPI(0x2, !(POP(@0xCD) < POP(@0xD1)))

# Stack: [@0xCD 0x0 @0xCD :label15 @0x13]
0xDB	POP()
0xDC	DUP1
0xDD	MSTORE(POP(0x0), POP(0x0))
0xE0	PUSH(0x2 * POP(@0xCD))
0x102	DUP1
0x104	PUSH(SLOAD(POP(@0xE0) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0x105	PUSH(0x0)
0x107	DUP1
0x10E	DUP1
0x10F	CODECOPY(POP(0x0), 0x456, 0x20)
0x110	DUP1
0x111	PUSH(MLOAD(POP(0x0)))
0x112	SWAP1
0x113	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x114	SWAP1
0x115	SWAP1
0x116	SWAP2
0x118	PUSH(SLOAD(POP(@0x111) + POP(@0xE0)))
0x120	PUSH(0x2 ** 0xA0 - 0x1)
0x121	SWAP2
0x122	SWAP1
0x123	SWAP2
0x124	PUSH(POP(@0x120) & POP(@0x104))
0x125	SWAP1
0x126	DUP3
0x127	JUMP(POP(:label15))

:label6
# Stack: [@0x13]
0x129	PUSH(:label14)
0x12E	PUSH(SLOAD(0x1))
0x12F	DUP2
0x130	JUMP(POP(:label14))

:label7
# Stack: [@0x13]
0x132	PUSH(:label14)
0x137	PUSH(SLOAD(0x3))
0x138	DUP2
0x139	JUMP(POP(:label14))

:label8
# Stack: [@0x13]
0x13B	PUSH(:label14)
0x140	PUSH(SLOAD(0x4))
0x141	DUP2
0x142	JUMP(POP(:label14))

:label9
# Stack: [@0x13]
0x144	PUSH(:label11)

:label10
# Stack: [[:label12 | :label11] [:label11 | @0x13]]
0x148	PUSH(0x0)
0x14A	PUSH(0x0)
0x14C	PUSH(0x0)
0x156	JUMPI(:label16, !(CALLVALUE() < 0x0))

# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x159	PUSH(MLOAD(0x40))
0x163	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x164	SWAP1
0x165	DUP3
0x166	SWAP1
0x167	PUSH(CALLVALUE())
0x168	SWAP1
0x169	DUP3
0x16A	DUP2
0x16B	DUP2
0x16C	DUP2
0x16D	DUP6
0x16E	DUP9
0x16F	DUP4
0x170	PUSH(CALL(POP(0x0), POP(@0x163), POP(@0x167), POP(@0x159), POP(0x0), POP(@0x159), POP(0x0)))
0x171	SWAP4
0x172	POP()
0x173	POP()
0x174	POP()
0x175	POP()
0x176	POP()
0x17A	JUMP(:label21)

:label11
# Stack: []
0x17C	STOP()

:label12
# Stack: [:label11]
0x17E	JUMP(POP(:label11))

:label13
# Stack: [@0xBB :label13 @0x13]
0x180	PUSH(0x40)
0x182	DUP1
0x183	PUSH(MLOAD(POP(0x40)))
0x18B	PUSH(0x2 ** 0xA0 - 0x1)
0x18C	SWAP3
0x18D	SWAP1
0x18E	SWAP3
0x190	DUP2
0x191	MSTORE(POP(@0x183), POP(@0x18B) & POP(@0xBB))
0x192	PUSH(MLOAD(POP(0x40)))
0x193	SWAP1
0x194	DUP2
0x195	SWAP1
0x199	PUSH(0x20 + POP(@0x183) - POP(@0x192))
0x19A	SWAP1
0x19B	RETURN(POP(@0x192), POP(@0x199))

:label14
# Stack: [[@0x140 | @0x137 | @0x12E | @0xC4] [:label14 | :label14 | :label14 | :label14] @0x13]
0x19D	PUSH(0x40)
0x19F	DUP1
0x1A0	PUSH(MLOAD(POP(0x40)))
0x1A1	SWAP2
0x1A2	DUP3
0x1A3	MSTORE(POP(@0x1A0), POP())
0x1A4	PUSH(MLOAD(POP(0x40)))
0x1A5	SWAP1
0x1A6	DUP2
0x1A7	SWAP1
0x1AB	PUSH(0x20 + POP(@0x1A0) - POP(@0x1A4))
0x1AC	SWAP1
0x1AD	RETURN(POP(@0x1A4), POP(@0x1AB))

:label15
# Stack: [@0x118 @0x124 :label15 @0x13]
0x1B1	PUSH(MLOAD(0x40))
0x1B2	DUP1
0x1B3	DUP4
0x1BD	DUP1
0x1BE	MSTORE(POP(@0x1B1), 0x2 ** 0xA0 - 0x1 & POP(@0x124))
0x1C1	PUSH(0x20 + POP(@0x1B1))
0x1C2	DUP3
0x1C3	DUP2
0x1C4	MSTORE(POP(@0x1C1), POP(@0x118))
0x1C7	PUSH(0x20 + POP(@0x1C1))
0x1C8	SWAP3
0x1C9	POP()
0x1CA	POP()
0x1CB	POP()
0x1CE	PUSH(MLOAD(0x40))
0x1CF	DUP1
0x1D0	SWAP2
0x1D1	PUSH(POP(@0x1C7) - POP(@0x1CE))
0x1D2	SWAP1
0x1D3	RETURN(POP(@0x1CE), POP(@0x1D1))

:label16
# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x1E4	JUMPI(:label17, !(CALLVALUE() > 0x8AC7230489E80000))

# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x1E7	PUSH(MLOAD(0x40))
0x1F1	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x1F2	SWAP1
0x1F3	PUSH(0x0)
0x1F5	SWAP1
0x201	PUSH(CALLVALUE() + ~0x8AC7230489E7FFFF)
0x202	SWAP1
0x203	DUP3
0x204	DUP2
0x205	DUP2
0x206	DUP2
0x207	DUP6
0x208	DUP9
0x209	DUP4
0x20A	PUSH(CALL(POP(0x0), POP(@0x1F1), POP(@0x201), POP(@0x1E7), POP(0x0), POP(@0x1E7), POP(0x0)))
0x20B	POP()
0x20C	PUSH(0x8AC7230489E80000)
0x215	SWAP7
0x216	POP()
0x217	PUSH(:label18)
0x21A	SWAP4
0x21B	POP()
0x21C	POP()
0x21D	POP()
0x21E	POP()
0x21F	JUMP(POP(:label18))

:label17
# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x221	PUSH(CALLVALUE())
0x222	SWAP3
0x223	POP()

:label18
# Stack: [0x0 0x0 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x227	PUSH(SLOAD(0x4))
0x228	PUSH(0xA)
0x22A	SWAP1
0x230	JUMPI(:label20, !(POP(@0x227) < POP(0xA)))

# Stack: [0x0 0x0 [@0x221 | 0x8AC7230489E80000] [:label12 | :label11] [:label11 | @0x13]]
0x231	PUSH(0x0)
0x233	DUP1
0x234	PUSH(SLOAD(POP(0x0)))
0x237	DUP1
0x238	PUSH(POP(@0x234) + 0x1)
0x239	DUP1
0x23A	DUP4
0x23B	SSTORE(POP(0x0), POP(@0x238))
0x23C	SWAP1
0x23D	SWAP4
0x23E	POP()
0x23F	SWAP1
0x240	DUP2
0x241	DUP5
0x242	DUP1
0x243	PUSH(!POP(@0x234))
0x244	DUP2
0x245	SWAP1
0x24A	JUMPI(:label22, POP(@0x243) > POP(@0x238))

# Stack: [@0x234 @0x238 0x0 @0x238 0x0 @0x234 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x24D	PUSH(0x2 * POP(@0x234))
0x24E	DUP1
0x252	DUP2
0x255	MSTORE(0x0, POP(0x0))
0x25A	PUSH(SHA3(0x0, 0x20))
0x25B	SWAP1
0x25C	DUP2
0x25D	PUSH(POP(@0x25A) + POP(@0x24D))
0x25E	SWAP1
0x25F	PUSH(POP(@0x25A) + 0x2 * POP(@0x238))
0x260	PUSH(:label22)
0x263	SWAP2
0x264	SWAP1

:label19
# Stack: [[@0x25F | @0x283] @0x25D :label22 @0x238 0x0 @0x238 0x0 @0x234 [0x8AC7230489E80000 | @0x221] [:label11 | :label12] [@0x13 | :label11]]
0x266	DUP1
0x267	DUP3
0x26D	JUMPI(:label23, !(POP(@0x25D) > POP()))

# Stack: [[@0x25F | @0x283] @0x25D :label22 @0x238 0x0 @0x238 0x0 @0x234 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x26E	DUP1
0x27A	DUP1
0x27B	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x27C	PUSH(0x0)
0x27E	PUSH(0x1)
0x280	SWAP1
0x281	SWAP1
0x282	SWAP2
0x283	PUSH(POP(0x1) + POP())
0x284	SWAP1
0x285	DUP2
0x286	SSTORE(POP(@0x283), POP(0x0))
0x28A	JUMP(:label19)

:label20
# Stack: [0x0 0x0 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x28C	PUSH(0x5)
0x28E	DUP1
0x29B	PUSH(CALLER() | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x5)))
0x29C	SWAP1
0x29D	SSTORE(POP(0x5), POP(@0x29B))
0x2A2	SSTORE(0x4, 0x0)

:label21
# Stack: [[0x0 | @0x3EE] [0x0 | @0x234] [0x0 | 0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x2A4	POP()
0x2A5	POP()
0x2A6	POP()
0x2A7	JUMP(POP())

:label22
# Stack: [[@0x25D | @0x234] @0x238 0x0 @0x238 0x0 @0x234 [0x8AC7230489E80000 | @0x221] [:label11 | :label12] [@0x13 | :label11]]
0x2A9	POP()
0x2AA	POP()
0x2AB	POP()
0x2AC	POP()
0x2AD	PUSH(CALLER())
0x2AE	PUSH(0x0)
0x2B2	POP(0x0)
0x2B3	DUP4
0x2B4	DUP2
0x2B6	DUP1
0x2BC	JUMPI(0x2, !(POP(@0x234) < SLOAD(POP(0x0))))

# Stack: [@0x234 0x0 @0x2AD 0x0 @0x234 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x2BD	DUP2
0x2BE	DUP1
0x2BF	MSTORE(POP(0x0), POP(0x0))
0x2E4	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x234))
0x2E5	DUP1
0x2F0	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2E4)))
0x2F1	SWAP1
0x2F2	SWAP3
0x2F3	PUSH(POP(@0x2AD) | POP(@0x2F0))
0x2F4	SWAP1
0x2F5	SWAP2
0x2F6	SSTORE(POP(@0x2E4), POP(@0x2F3))
0x2F7	DUP1
0x2F8	PUSH(SLOAD(POP(0x0)))
0x2F9	DUP4
0x2FA	SWAP1
0x2FB	SWAP1
0x2FC	DUP5
0x2FD	SWAP1
0x2FE	DUP2
0x304	JUMPI(0x2, !(POP(@0x234) < POP(@0x2F8)))

# Stack: [@0x234 0x0 [@0x221 | 0x8AC7230489E80000] 0x0 @0x234 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x308	PUSH(0x0)
0x30A	DUP1
0x311	DUP1
0x312	CODECOPY(POP(0x0), 0x456, 0x20)
0x313	DUP1
0x314	PUSH(MLOAD(POP(0x0)))
0x315	SWAP1
0x316	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x317	PUSH(POP(@0x314) + 0x2 * POP(@0x234))
0x318	SWAP2
0x319	SWAP1
0x31A	SWAP2
0x31B	SSTORE(POP(@0x317), POP())
0x31C	PUSH(0x4)
0x31E	DUP1
0x322	PUSH(0x1 + SLOAD(POP(0x4)))
0x323	SWAP1
0x324	SSTORE(POP(0x4), POP(@0x322))
0x325	DUP3
0x32A	JUMPI(:label24, POP(@0x234) == POP(0x0))

# Stack: [0x0 @0x234 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x32B	PUSH(0x2)
0x32D	DUP1
0x331	DUP4
0x333	PUSH(POP() / 0xA + SLOAD(POP(0x2)))
0x334	SWAP1
0x335	DUP2
0x336	SWAP1
0x337	SSTORE(POP(0x2), POP(@0x333))
0x33A	PUSH(SLOAD(0x5))
0x33D	PUSH(MLOAD(0x40))
0x345	PUSH(0x2 ** 0xA0 - 0x1)
0x346	SWAP1
0x347	SWAP1
0x348	SWAP2
0x349	PUSH(POP(@0x345) & POP(@0x33A))
0x34A	SWAP2
0x34B	PUSH(0x0)
0x34D	SWAP2
0x34E	DUP3
0x34F	DUP2
0x350	DUP2
0x351	DUP2
0x352	DUP6
0x353	DUP9
0x354	DUP4
0x355	PUSH(CALL(POP(0x0), POP(@0x349), POP(@0x333), POP(@0x33D), POP(0x0), POP(@0x33D), POP(0x0)))
0x356	POP()
0x357	POP()
0x358	POP()
0x35B	SSTORE(0x2, POP(0x0))
0x35C	POP()
0x35D	PUSH(0x3)
0x35F	DUP1
0x363	DUP4
0x365	DUP4
0x367	PUSH(POP() - POP() / 0xA + SLOAD(POP(0x3)))
0x368	SWAP1
0x369	SSTORE(POP(0x3), POP(@0x367))
0x36D	JUMP(:label25)

:label23
# Stack: [[@0x283 | @0x25F] @0x25D :label22 @0x238 0x0 @0x238 0x0 @0x234 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x36F	POP()
0x370	SWAP1
0x371	JUMP(POP(:label22))

:label24
# Stack: [0x0 @0x234 [0x8AC7230489E80000 | @0x221] [:label11 | :label12] [:label11 | @0x13]]
0x373	PUSH(0x3)
0x375	DUP1
0x377	DUP4
0x378	PUSH(POP() + SLOAD(POP(0x3)))
0x379	SWAP1
0x37A	SSTORE(POP(0x3), POP(@0x378))

:label25
# Stack: [[0x0 | @0x3EE] @0x234 [@0x221 | 0x8AC7230489E80000] [:label12 | :label11] [:label11 | @0x13]]
0x37F	PUSH(SLOAD(0x1))
0x380	PUSH(0x0)
0x382	DUP1
0x383	PUSH(SLOAD(POP(0x0)))
0x384	PUSH(0x64)
0x386	SWAP2
0x387	SWAP1
0x388	DUP2
0x38E	JUMPI(0x2, !(POP(@0x37F) < POP(@0x383)))

# Stack: [@0x37F 0x0 0x64 [0x0 | @0x3EE] @0x234 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x38F	SWAP1
0x390	DUP1
0x391	MSTORE(POP(0x0), POP(0x0))
0x394	PUSH(SLOAD(0x3))
0x395	PUSH(0x2)
0x397	SWAP1
0x398	SWAP1
0x399	SWAP2
0x39B	PUSH(0x0)
0x39D	DUP1
0x3A4	DUP1
0x3A5	CODECOPY(POP(0x0), 0x456, 0x20)
0x3A6	DUP1
0x3A7	PUSH(MLOAD(POP(0x0)))
0x3A8	SWAP1
0x3A9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3AB	PUSH(SLOAD(POP(@0x3A7) + POP(0x2) * POP(@0x37F)))
0x3AC	SWAP2
0x3AD	SWAP1
0x3AE	SWAP2
0x3B2	PUSH(0x7D * POP(@0x3AB) / POP(0x64))
0x3B3	SWAP1
0x3B9	JUMPI(:label21, !(POP(@0x394) > POP(@0x3B2)))

# Stack: [[@0x3EE | 0x0] @0x234 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x3BC	PUSH(SLOAD(0x1))
0x3BD	PUSH(0x0)
0x3BF	DUP1
0x3C0	PUSH(SLOAD(POP(0x0)))
0x3C1	PUSH(0x64)
0x3C3	SWAP2
0x3C4	SWAP1
0x3C5	DUP2
0x3CB	JUMPI(0x2, !(POP(@0x3BC) < POP(@0x3C0)))

# Stack: [@0x3BC 0x0 0x64 [0x0 | @0x3EE] @0x234 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x3CE	PUSH(SLOAD(0x1))
0x3CF	DUP3
0x3D0	PUSH(SLOAD(POP(0x0)))
0x3D1	PUSH(0x2)
0x3D3	SWAP2
0x3D4	SWAP1
0x3D5	SWAP3
0x3D7	PUSH(0x0)
0x3D9	DUP1
0x3E0	DUP1
0x3E1	CODECOPY(POP(0x0), 0x456, 0x20)
0x3E2	DUP1
0x3E3	PUSH(MLOAD(POP(0x0)))
0x3E4	SWAP1
0x3E5	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3E7	PUSH(SLOAD(POP(@0x3E3) + POP(0x2) * POP(@0x3BC)))
0x3E8	SWAP4
0x3E9	SWAP1
0x3EA	SWAP4
0x3EE	PUSH(0x7D * POP(@0x3E7) / POP(0x64))
0x3EF	SWAP4
0x3F0	POP()
0x3F1	SWAP1
0x3F2	SWAP2
0x3F3	SWAP1
0x3F4	DUP2
0x3FA	JUMPI(0x2, !(POP(@0x3CE) < POP(@0x3D0)))

# Stack: [@0x3CE 0x0 @0x3EE @0x234 [0x8AC7230489E80000 | @0x221] [:label12 | :label11] [:label11 | @0x13]]
0x3FD	PUSH(MLOAD(0x40))
0x3FE	PUSH(0x2)
0x400	SWAP2
0x401	SWAP1
0x402	SWAP2
0x42F	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP(@0x3CE)))
0x430	SWAP2
0x431	SWAP1
0x432	DUP4
0x433	SWAP1
0x434	DUP3
0x435	DUP2
0x436	DUP2
0x437	DUP2
0x438	DUP6
0x439	DUP9
0x43A	DUP4
0x43B	PUSH(CALL(POP(0x0), POP(@0x42F), POP(@0x3EE), POP(@0x3FD), POP(0x0), POP(@0x3FD), POP(0x0)))
0x43C	POP()
0x43D	POP()
0x43E	PUSH(0x3)
0x440	DUP1
0x441	PUSH(SLOAD(POP(0x3)))
0x442	SWAP2
0x443	SWAP1
0x444	SWAP2
0x445	PUSH(POP(@0x441) - POP(@0x3EE))
0x446	SWAP1
0x447	SSTORE(POP(0x3), POP(@0x445))
0x448	POP()
0x449	POP()
0x44A	PUSH(0x1)
0x44C	DUP1
0x44E	DUP1
0x44F	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x450	SWAP1
0x451	SSTORE(POP(0x1), POP(@0x44F))
0x455	JUMP(:label25)


