# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x35C1D349 == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xC8796572 == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label10, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label13)
0x70	PUSH(:label9)
0x76	JUMP(:label11)

:label1
# Stack: [@0x13]
0x78	PUSH(:label13)
0x7D	PUSH(CALLDATALOAD(0x4))
0x80	PUSH(SLOAD(0x4))
0x88	PUSH(0x2 ** 0xA0 - 0x1)
0x89	SWAP1
0x8A	DUP2
0x8B	PUSH(POP(@0x88) & POP(@0x80))
0x8C	PUSH(CALLER())
0x8D	SWAP1
0x8E	SWAP1
0x8F	SWAP2
0x96	JUMPI(:label2, !(POP(@0x8C) & POP(@0x88) == POP(@0x8B)))

# Stack: [@0x7D :label13 @0x13]
0x97	PUSH(0x4)
0x99	DUP1
0xA5	DUP2
0xA6	PUSH(POP(@0x7D) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0xA7	SWAP1
0xA8	SSTORE(POP(0x4), POP(@0xA6))

:label2
# Stack: [@0x7D :label13 @0x13]
0xAA	POP()
0xAB	JUMP(POP(:label13))

:label3
# Stack: [@0x13]
0xAD	PUSH(:label14)
0xB2	PUSH(CALLDATALOAD(0x4))
0xB3	PUSH(0x0)
0xB5	DUP1
0xB6	PUSH(SLOAD(POP(0x0)))
0xB7	DUP2
0xB8	SWAP1
0xB9	DUP2
0xBF	JUMPI(0x2, !(POP(@0xB2) < POP(@0xB6)))

# Stack: [@0xB2 0x0 @0xB2 :label14 @0x13]
0xC0	POP()
0xC1	DUP1
0xC2	MSTORE(POP(0x0), POP(0x0))
0xC5	PUSH(0x2 * POP(@0xB2))
0xE7	DUP1
0xE9	PUSH(SLOAD(POP(@0xC5) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0xEA	PUSH(0x0)
0xEC	DUP1
0xF3	DUP1
0xF4	CODECOPY(POP(0x0), 0x42B, 0x20)
0xF5	DUP1
0xF6	PUSH(MLOAD(POP(0x0)))
0xF7	SWAP1
0xF8	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xF9	SWAP1
0xFA	SWAP1
0xFB	SWAP2
0xFD	PUSH(SLOAD(POP(@0xF6) + POP(@0xC5)))
0x105	PUSH(0x2 ** 0xA0 - 0x1)
0x106	SWAP2
0x107	SWAP1
0x108	SWAP2
0x109	PUSH(POP(@0x105) & POP(@0xE9))
0x10A	SWAP1
0x10B	DUP3
0x10C	JUMP(POP(:label14))

:label4
# Stack: [@0x13]
0x10E	PUSH(:label15)
0x11C	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0x11D	DUP2
0x11E	JUMP(POP(:label15))

:label5
# Stack: [@0x13]
0x120	PUSH(:label16)
0x125	PUSH(SLOAD(0x2))
0x126	DUP2
0x127	JUMP(POP(:label16))

:label6
# Stack: [@0x13]
0x129	PUSH(:label16)
0x12E	PUSH(SLOAD(0x1))
0x12F	DUP2
0x130	JUMP(POP(:label16))

:label7
# Stack: [@0x13]
0x132	PUSH(:label16)
0x137	PUSH(SLOAD(0x3))
0x138	DUP2
0x139	JUMP(POP(:label16))

:label8
# Stack: [@0x13]
0x13B	PUSH(:label13)
0x140	PUSH(SLOAD(0x4))
0x148	PUSH(0x2 ** 0xA0 - 0x1)
0x149	SWAP1
0x14A	DUP2
0x14B	PUSH(POP(@0x148) & POP(@0x140))
0x14C	PUSH(CALLER())
0x14D	SWAP1
0x14E	SWAP1
0x14F	SWAP2
0x156	JUMPI(:label9, !(POP(@0x14C) & POP(@0x148) == POP(@0x14B)))

# Stack: [:label13 @0x13]
0x161	JUMPI(:label25, !(0x0 == SLOAD(0x2)))

:label9
# Stack: [[:label13 | :label13]]
0x163	JUMP(POP())

:label10
# Stack: [@0x13]
0x165	PUSH(:label13)

:label11
# Stack: [[:label9 | :label13] [:label13 | @0x13]]
0x169	PUSH(0x0)
0x16B	PUSH(0x0)
0x16D	PUSH(0x0)
0x17D	JUMPI(:label17, !(CALLVALUE() < 0x2386F26FC10000))

# Stack: [0x0 0x0 0x0 [:label9 | :label13] [@0x13 | :label13]]
0x180	PUSH(MLOAD(0x40))
0x18A	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x18B	SWAP1
0x18C	DUP3
0x18D	SWAP1
0x18E	PUSH(CALLVALUE())
0x18F	SWAP1
0x190	DUP3
0x191	DUP2
0x192	DUP2
0x193	DUP2
0x194	DUP6
0x195	DUP9
0x196	DUP4
0x197	PUSH(CALL(POP(0x0), POP(@0x18A), POP(@0x18E), POP(@0x180), POP(0x0), POP(@0x180), POP(0x0)))
0x198	POP()
0x199	POP()
0x19A	POP()
0x19B	POP()
0x19C	POP()

:label12
# Stack: [[0x0 | @0x39A] [@0x237 | 0x0] [0x0 | 0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [:label13 | @0x13]]
0x19E	POP()
0x19F	POP()
0x1A0	POP()
0x1A1	JUMP(POP())

:label13
# Stack: []
0x1A3	STOP()

:label14
# Stack: [@0xFD @0x109 :label14 @0x13]
0x1A7	PUSH(MLOAD(0x40))
0x1A8	DUP1
0x1A9	DUP4
0x1B3	DUP1
0x1B4	MSTORE(POP(@0x1A7), 0x2 ** 0xA0 - 0x1 & POP(@0x109))
0x1B7	PUSH(0x20 + POP(@0x1A7))
0x1B8	DUP3
0x1B9	DUP2
0x1BA	MSTORE(POP(@0x1B7), POP(@0xFD))
0x1BD	PUSH(0x20 + POP(@0x1B7))
0x1BE	SWAP3
0x1BF	POP()
0x1C0	POP()
0x1C1	POP()
0x1C4	PUSH(MLOAD(0x40))
0x1C5	DUP1
0x1C6	SWAP2
0x1C7	PUSH(POP(@0x1BD) - POP(@0x1C4))
0x1C8	SWAP1
0x1C9	RETURN(POP(@0x1C4), POP(@0x1C7))

:label15
# Stack: [@0x11C :label15 @0x13]
0x1CB	PUSH(0x40)
0x1CD	DUP1
0x1CE	PUSH(MLOAD(POP(0x40)))
0x1D6	PUSH(0x2 ** 0xA0 - 0x1)
0x1D7	SWAP3
0x1D8	SWAP1
0x1D9	SWAP3
0x1DB	DUP2
0x1DC	MSTORE(POP(@0x1CE), POP(@0x1D6) & POP(@0x11C))
0x1DD	PUSH(MLOAD(POP(0x40)))
0x1DE	SWAP1
0x1DF	DUP2
0x1E0	SWAP1
0x1E4	PUSH(0x20 + POP(@0x1CE) - POP(@0x1DD))
0x1E5	SWAP1
0x1E6	RETURN(POP(@0x1DD), POP(@0x1E4))

:label16
# Stack: [[@0x137 | @0x12E | @0x125] [:label16 | :label16 | :label16] @0x13]
0x1E8	PUSH(0x40)
0x1EA	DUP1
0x1EB	PUSH(MLOAD(POP(0x40)))
0x1EC	SWAP2
0x1ED	DUP3
0x1EE	MSTORE(POP(@0x1EB), POP())
0x1EF	PUSH(MLOAD(POP(0x40)))
0x1F0	SWAP1
0x1F1	DUP2
0x1F2	SWAP1
0x1F6	PUSH(0x20 + POP(@0x1EB) - POP(@0x1EF))
0x1F7	SWAP1
0x1F8	RETURN(POP(@0x1EF), POP(@0x1F6))

:label17
# Stack: [0x0 0x0 0x0 [:label9 | :label13] [@0x13 | :label13]]
0x20A	JUMPI(:label18, !(CALLVALUE() > 0x56BC75E2D63100000))

# Stack: [0x0 0x0 0x0 [:label9 | :label13] [:label13 | @0x13]]
0x20B	PUSH(0x2)
0x20D	DUP1
0x21C	PUSH(~0x56BC75E2D630FFFFF + CALLVALUE() + SLOAD(POP(0x2)))
0x21D	SWAP1
0x21E	SSTORE(POP(0x2), POP(@0x21C))
0x21F	PUSH(0x56BC75E2D63100000)
0x229	SWAP3
0x22A	POP()
0x22E	JUMP(:label19)

:label18
# Stack: [0x0 0x0 0x0 [:label9 | :label13] [:label13 | @0x13]]
0x230	PUSH(CALLVALUE())
0x231	SWAP3
0x232	POP()

:label19
# Stack: [0x0 0x0 [0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [:label13 | @0x13]]
0x234	PUSH(0x0)
0x236	DUP1
0x237	PUSH(SLOAD(POP(0x0)))
0x23A	DUP1
0x23B	PUSH(POP(@0x237) + 0x1)
0x23C	DUP1
0x23D	DUP4
0x23E	SSTORE(POP(0x0), POP(@0x23B))
0x23F	SWAP1
0x240	SWAP4
0x241	POP()
0x242	SWAP1
0x243	DUP2
0x244	DUP5
0x245	DUP1
0x246	PUSH(!POP(@0x237))
0x247	DUP2
0x248	SWAP1
0x24D	JUMPI(:label21, POP(@0x246) > POP(@0x23B))

# Stack: [@0x237 @0x23B 0x0 @0x23B 0x0 @0x237 [0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [:label13 | @0x13]]
0x250	PUSH(0x2 * POP(@0x237))
0x251	DUP1
0x255	DUP2
0x258	MSTORE(0x0, POP(0x0))
0x25D	PUSH(SHA3(0x0, 0x20))
0x25E	SWAP1
0x25F	DUP2
0x260	PUSH(POP(@0x25D) + POP(@0x250))
0x261	SWAP1
0x262	PUSH(POP(@0x25D) + 0x2 * POP(@0x23B))
0x263	PUSH(:label21)
0x266	SWAP2
0x267	SWAP1

:label20
# Stack: [[@0x262 | @0x286] @0x260 :label21 @0x23B 0x0 @0x23B 0x0 @0x237 [0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [:label13 | @0x13]]
0x269	DUP1
0x26A	DUP3
0x270	JUMPI(:label22, !(POP(@0x260) > POP()))

# Stack: [[@0x262 | @0x286] @0x260 :label21 @0x23B 0x0 @0x23B 0x0 @0x237 [0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [:label13 | @0x13]]
0x271	DUP1
0x27D	DUP1
0x27E	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x27F	PUSH(0x0)
0x281	PUSH(0x1)
0x283	SWAP1
0x284	SWAP1
0x285	SWAP2
0x286	PUSH(POP(0x1) + POP())
0x287	SWAP1
0x288	DUP2
0x289	SSTORE(POP(@0x286), POP(0x0))
0x28D	JUMP(:label20)

:label21
# Stack: [[@0x260 | @0x237] @0x23B 0x0 @0x23B 0x0 @0x237 [0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [:label13 | @0x13]]
0x28F	POP()
0x290	POP()
0x291	POP()
0x292	POP()
0x293	PUSH(CALLER())
0x294	PUSH(0x0)
0x298	POP(0x0)
0x299	DUP4
0x29A	DUP2
0x29C	DUP1
0x2A2	JUMPI(0x2, !(POP(@0x237) < SLOAD(POP(0x0))))

# Stack: [@0x237 0x0 @0x293 0x0 @0x237 [0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [:label13 | @0x13]]
0x2A3	DUP2
0x2A4	DUP1
0x2A5	MSTORE(POP(0x0), POP(0x0))
0x2CA	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x237))
0x2CB	DUP1
0x2D6	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2CA)))
0x2D7	SWAP1
0x2D8	SWAP3
0x2D9	PUSH(POP(@0x293) | POP(@0x2D6))
0x2DA	SWAP1
0x2DB	SWAP2
0x2DC	SSTORE(POP(@0x2CA), POP(@0x2D9))
0x2DD	DUP1
0x2DE	PUSH(SLOAD(POP(0x0)))
0x2DF	DUP4
0x2E0	SWAP1
0x2E1	SWAP1
0x2E2	DUP5
0x2E3	SWAP1
0x2E4	DUP2
0x2EA	JUMPI(0x2, !(POP(@0x237) < POP(@0x2DE)))

# Stack: [@0x237 0x0 [@0x230 | 0x56BC75E2D63100000] 0x0 @0x237 [0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [:label13 | @0x13]]
0x2EE	PUSH(0x0)
0x2F0	DUP1
0x2F7	DUP1
0x2F8	CODECOPY(POP(0x0), 0x42B, 0x20)
0x2F9	DUP1
0x2FA	PUSH(MLOAD(POP(0x0)))
0x2FB	SWAP1
0x2FC	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2FD	PUSH(POP(@0x2FA) + 0x2 * POP(@0x237))
0x2FE	SWAP2
0x2FF	SWAP1
0x300	SWAP2
0x301	SSTORE(POP(@0x2FD), POP())
0x302	DUP3
0x307	JUMPI(:label23, POP(@0x237) == POP(0x0))

# Stack: [0x0 @0x237 [0x56BC75E2D63100000 | @0x230] [:label13 | :label9] [@0x13 | :label13]]
0x308	PUSH(0x2)
0x30A	DUP1
0x30B	PUSH(SLOAD(POP(0x2)))
0x30E	DUP4
0x30F	PUSH(POP() / 0xF)
0x310	SWAP1
0x311	DUP2
0x312	PUSH(POP(@0x30F) + POP(@0x30B))
0x313	SWAP1
0x314	SWAP2
0x315	SSTORE(POP(0x2), POP(@0x312))
0x316	PUSH(0x3)
0x318	DUP1
0x319	PUSH(SLOAD(POP(0x3)))
0x31A	SWAP2
0x31B	DUP6
0x31C	PUSH(POP() - POP(@0x30F))
0x31D	SWAP1
0x31E	SWAP2
0x31F	PUSH(POP(@0x319) + POP(@0x31C))
0x320	SWAP1
0x321	SSTORE(POP(0x3), POP(@0x31F))
0x325	JUMP(:label24)

:label22
# Stack: [[@0x286 | @0x262] @0x260 :label21 @0x23B 0x0 @0x23B 0x0 @0x237 [0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [@0x13 | :label13]]
0x327	POP()
0x328	SWAP1
0x329	JUMP(POP(:label21))

:label23
# Stack: [0x0 @0x237 [@0x230 | 0x56BC75E2D63100000] [:label9 | :label13] [:label13 | @0x13]]
0x32B	PUSH(0x2)
0x32D	DUP1
0x32F	DUP4
0x330	PUSH(POP() + SLOAD(POP(0x2)))
0x331	SWAP1
0x332	SSTORE(POP(0x2), POP(@0x330))

:label24
# Stack: [[0x0 | @0x39A] @0x237 [0x56BC75E2D63100000 | @0x230] [:label13 | :label9] [:label13 | @0x13]]
0x337	PUSH(SLOAD(0x1))
0x338	PUSH(0x0)
0x33A	DUP1
0x33B	PUSH(SLOAD(POP(0x0)))
0x33C	SWAP1
0x33D	SWAP2
0x33E	SWAP1
0x33F	DUP2
0x345	JUMPI(0x2, !(POP(@0x337) < POP(@0x33B)))

# Stack: [@0x337 0x0 [0x0 | @0x39A] @0x237 [0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [@0x13 | :label13]]
0x346	SWAP1
0x347	DUP1
0x348	MSTORE(POP(0x0), POP(0x0))
0x34B	PUSH(SLOAD(0x3))
0x34C	PUSH(0x2)
0x34E	SWAP1
0x34F	DUP2
0x351	PUSH(0x0)
0x353	DUP1
0x35A	DUP1
0x35B	CODECOPY(POP(0x0), 0x42B, 0x20)
0x35C	DUP1
0x35D	PUSH(MLOAD(POP(0x0)))
0x35E	SWAP1
0x35F	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x361	PUSH(SLOAD(POP(@0x35D) + POP(0x2) * POP(@0x337)))
0x362	SWAP1
0x363	SWAP2
0x364	PUSH(POP(0x2) * POP(@0x361))
0x365	SWAP1
0x36B	JUMPI(:label12, !(POP(@0x34B) > POP(@0x364)))

# Stack: [[0x0 | @0x39A] @0x237 [0x56BC75E2D63100000 | @0x230] [:label13 | :label9] [:label13 | @0x13]]
0x36E	PUSH(SLOAD(0x1))
0x36F	PUSH(0x0)
0x371	DUP1
0x372	PUSH(SLOAD(POP(0x0)))
0x373	SWAP1
0x374	SWAP2
0x375	SWAP1
0x376	DUP2
0x37C	JUMPI(0x2, !(POP(@0x36E) < POP(@0x372)))

# Stack: [@0x36E 0x0 [0x0 | @0x39A] @0x237 [0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [:label13 | @0x13]]
0x37F	PUSH(SLOAD(0x1))
0x380	DUP3
0x381	PUSH(SLOAD(POP(0x0)))
0x382	PUSH(0x2)
0x384	SWAP2
0x385	DUP3
0x387	PUSH(0x0)
0x389	DUP1
0x390	DUP1
0x391	CODECOPY(POP(0x0), 0x42B, 0x20)
0x392	DUP1
0x393	PUSH(MLOAD(POP(0x0)))
0x394	SWAP1
0x395	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x397	PUSH(SLOAD(POP(@0x393) + POP(0x2) * POP(@0x36E)))
0x398	SWAP1
0x399	SWAP3
0x39A	PUSH(POP(0x2) * POP(@0x397))
0x39B	SWAP4
0x39C	POP()
0x39D	SWAP1
0x39E	DUP2
0x3A4	JUMPI(0x2, !(POP(@0x37F) < POP(@0x381)))

# Stack: [@0x37F 0x0 @0x39A @0x237 [0x56BC75E2D63100000 | @0x230] [:label9 | :label13] [:label13 | @0x13]]
0x3A7	PUSH(MLOAD(0x40))
0x3A8	PUSH(0x2)
0x3AA	SWAP2
0x3AB	SWAP1
0x3AC	SWAP2
0x3D9	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP(@0x37F)))
0x3DA	SWAP2
0x3DB	SWAP1
0x3DC	DUP4
0x3DD	SWAP1
0x3DE	DUP3
0x3DF	DUP2
0x3E0	DUP2
0x3E1	DUP2
0x3E2	DUP6
0x3E3	DUP9
0x3E4	DUP4
0x3E5	PUSH(CALL(POP(0x0), POP(@0x3D9), POP(@0x39A), POP(@0x3A7), POP(0x0), POP(@0x3A7), POP(0x0)))
0x3E6	POP()
0x3E7	POP()
0x3E8	PUSH(0x3)
0x3EA	DUP1
0x3EB	PUSH(SLOAD(POP(0x3)))
0x3EC	SWAP2
0x3ED	SWAP1
0x3EE	SWAP2
0x3EF	PUSH(POP(@0x3EB) - POP(@0x39A))
0x3F0	SWAP1
0x3F1	SSTORE(POP(0x3), POP(@0x3EF))
0x3F2	POP()
0x3F3	POP()
0x3F4	PUSH(0x1)
0x3F6	DUP1
0x3F8	DUP1
0x3F9	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x3FA	SWAP1
0x3FB	SSTORE(POP(0x1), POP(@0x3F9))
0x3FF	JUMP(:label24)

:label25
# Stack: [:label13 @0x13]
0x403	PUSH(SLOAD(0x4))
0x406	PUSH(SLOAD(0x2))
0x409	PUSH(MLOAD(0x40))
0x411	PUSH(0x2 ** 0xA0 - 0x1)
0x412	SWAP1
0x413	SWAP1
0x414	SWAP3
0x415	PUSH(POP(@0x411) & POP(@0x403))
0x416	SWAP2
0x417	PUSH(0x0)
0x419	SWAP2
0x41A	SWAP1
0x41B	DUP3
0x41C	DUP2
0x41D	DUP2
0x41E	DUP2
0x41F	DUP6
0x420	DUP9
0x421	DUP4
0x422	PUSH(CALL(POP(0x0), POP(@0x415), POP(@0x406), POP(@0x409), POP(0x0), POP(@0x409), POP(0x0)))
0x423	POP()
0x424	POP()
0x425	POP()
0x428	SSTORE(0x2, POP(0x0))
0x429	POP()
0x42A	JUMP(POP(:label13))


