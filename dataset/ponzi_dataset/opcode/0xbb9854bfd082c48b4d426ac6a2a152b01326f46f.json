# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x35C1D349 == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xC8796572 == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label10, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label12)
0x70	PUSH(:label9)
0x76	JUMP(:label11)

:label1
# Stack: [@0x13]
0x78	PUSH(:label12)
0x7D	PUSH(CALLDATALOAD(0x4))
0x80	PUSH(SLOAD(0x4))
0x88	PUSH(0x2 ** 0xA0 - 0x1)
0x89	SWAP1
0x8A	DUP2
0x8B	PUSH(POP(@0x88) & POP(@0x80))
0x8C	PUSH(CALLER())
0x8D	SWAP1
0x8E	SWAP1
0x8F	SWAP2
0x96	JUMPI(:label2, !(POP(@0x8C) & POP(@0x88) == POP(@0x8B)))

# Stack: [@0x7D :label12 @0x13]
0x97	PUSH(0x4)
0x99	DUP1
0xA5	DUP2
0xA6	PUSH(POP(@0x7D) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0xA7	SWAP1
0xA8	SSTORE(POP(0x4), POP(@0xA6))

:label2
# Stack: [@0x7D :label12 @0x13]
0xAA	POP()
0xAB	JUMP(POP(:label12))

:label3
# Stack: [@0x13]
0xAD	PUSH(:label13)
0xB2	PUSH(CALLDATALOAD(0x4))
0xB3	PUSH(0x0)
0xB5	DUP1
0xB6	PUSH(SLOAD(POP(0x0)))
0xB7	DUP2
0xB8	SWAP1
0xB9	DUP2
0xBF	JUMPI(0x2, !(POP(@0xB2) < POP(@0xB6)))

# Stack: [@0xB2 0x0 @0xB2 :label13 @0x13]
0xC0	POP()
0xC1	DUP1
0xC2	MSTORE(POP(0x0), POP(0x0))
0xC5	PUSH(0x2 * POP(@0xB2))
0xC6	PUSH(0x0)
0xC8	DUP1
0xCF	DUP1
0xD0	CODECOPY(POP(0x0), 0x42D, 0x20)
0xD1	DUP1
0xD2	PUSH(MLOAD(POP(0x0)))
0xD3	SWAP1
0xD4	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xD5	DUP2
0xD7	PUSH(SLOAD(POP(@0xC5) + POP(@0xD2)))
0xD8	PUSH(0x0)
0xDA	DUP1
0xE1	DUP1
0xE2	CODECOPY(POP(0x0), 0x44D, 0x20)
0xE3	DUP1
0xE4	PUSH(MLOAD(POP(0x0)))
0xE5	SWAP1
0xE6	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xE7	SWAP1
0xE8	SWAP1
0xE9	SWAP2
0xEB	PUSH(SLOAD(POP(@0xE4) + POP(@0xC5)))
0xF3	PUSH(0x2 ** 0xA0 - 0x1)
0xF4	SWAP2
0xF5	SWAP1
0xF6	SWAP2
0xF7	PUSH(POP(@0xF3) & POP(@0xD7))
0xF8	SWAP1
0xF9	DUP3
0xFA	JUMP(POP(:label13))

:label4
# Stack: [@0x13]
0xFC	PUSH(:label14)
0x10A	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0x10B	DUP2
0x10C	JUMP(POP(:label14))

:label5
# Stack: [@0x13]
0x10E	PUSH(:label15)
0x113	PUSH(SLOAD(0x2))
0x114	DUP2
0x115	JUMP(POP(:label15))

:label6
# Stack: [@0x13]
0x117	PUSH(:label15)
0x11C	PUSH(SLOAD(0x1))
0x11D	DUP2
0x11E	JUMP(POP(:label15))

:label7
# Stack: [@0x13]
0x120	PUSH(:label15)
0x125	PUSH(SLOAD(0x3))
0x126	DUP2
0x127	JUMP(POP(:label15))

:label8
# Stack: [@0x13]
0x129	PUSH(:label12)
0x12E	PUSH(SLOAD(0x4))
0x136	PUSH(0x2 ** 0xA0 - 0x1)
0x137	SWAP1
0x138	DUP2
0x139	PUSH(POP(@0x136) & POP(@0x12E))
0x13A	PUSH(CALLER())
0x13B	SWAP1
0x13C	SWAP1
0x13D	SWAP2
0x144	JUMPI(:label9, !(POP(@0x13A) & POP(@0x136) == POP(@0x139)))

# Stack: [:label12 @0x13]
0x14F	JUMPI(:label23, !(0x0 == SLOAD(0x2)))

:label9
# Stack: [[:label12 | :label12]]
0x151	JUMP(POP())

:label10
# Stack: [@0x13]
0x153	PUSH(:label12)

:label11
# Stack: [[:label12 | :label9] [:label12 | @0x13]]
0x157	PUSH(0x0)
0x159	PUSH(0x0)
0x16A	JUMPI(:label16, !(CALLVALUE() < 0xDE0B6B3A7640000))

# Stack: [0x0 0x0 [:label9 | :label12] [:label12 | @0x13]]
0x16D	PUSH(MLOAD(0x40))
0x177	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x178	SWAP1
0x179	DUP3
0x17A	SWAP1
0x17B	PUSH(CALLVALUE())
0x17C	SWAP1
0x17D	DUP3
0x17E	DUP2
0x17F	DUP2
0x180	DUP2
0x181	DUP6
0x182	DUP9
0x183	DUP4
0x184	PUSH(CALL(POP(0x0), POP(@0x177), POP(@0x17B), POP(@0x16D), POP(0x0), POP(@0x16D), POP(0x0)))
0x185	SWAP4
0x186	POP()
0x187	POP()
0x188	POP()
0x189	POP()
0x18A	POP()
0x18E	JUMP(:label22)

:label12
# Stack: []
0x190	STOP()

:label13
# Stack: [@0xEB @0xF7 :label13 @0x13]
0x194	PUSH(MLOAD(0x40))
0x195	DUP1
0x196	DUP4
0x1A0	DUP1
0x1A1	MSTORE(POP(@0x194), 0x2 ** 0xA0 - 0x1 & POP(@0xF7))
0x1A4	PUSH(0x20 + POP(@0x194))
0x1A5	DUP3
0x1A6	DUP2
0x1A7	MSTORE(POP(@0x1A4), POP(@0xEB))
0x1AA	PUSH(0x20 + POP(@0x1A4))
0x1AB	SWAP3
0x1AC	POP()
0x1AD	POP()
0x1AE	POP()
0x1B1	PUSH(MLOAD(0x40))
0x1B2	DUP1
0x1B3	SWAP2
0x1B4	PUSH(POP(@0x1AA) - POP(@0x1B1))
0x1B5	SWAP1
0x1B6	RETURN(POP(@0x1B1), POP(@0x1B4))

:label14
# Stack: [@0x10A :label14 @0x13]
0x1B8	PUSH(0x40)
0x1BA	DUP1
0x1BB	PUSH(MLOAD(POP(0x40)))
0x1C3	PUSH(0x2 ** 0xA0 - 0x1)
0x1C4	SWAP3
0x1C5	SWAP1
0x1C6	SWAP3
0x1C8	DUP2
0x1C9	MSTORE(POP(@0x1BB), POP(@0x1C3) & POP(@0x10A))
0x1CA	PUSH(MLOAD(POP(0x40)))
0x1CB	SWAP1
0x1CC	DUP2
0x1CD	SWAP1
0x1D1	PUSH(0x20 + POP(@0x1BB) - POP(@0x1CA))
0x1D2	SWAP1
0x1D3	RETURN(POP(@0x1CA), POP(@0x1D1))

:label15
# Stack: [[@0x125 | @0x11C | @0x113] [:label15 | :label15 | :label15] @0x13]
0x1D5	PUSH(0x40)
0x1D7	DUP1
0x1D8	PUSH(MLOAD(POP(0x40)))
0x1D9	SWAP2
0x1DA	DUP3
0x1DB	MSTORE(POP(@0x1D8), POP())
0x1DC	PUSH(MLOAD(POP(0x40)))
0x1DD	SWAP1
0x1DE	DUP2
0x1DF	SWAP1
0x1E3	PUSH(0x20 + POP(@0x1D8) - POP(@0x1DC))
0x1E4	SWAP1
0x1E5	RETURN(POP(@0x1DC), POP(@0x1E3))

:label16
# Stack: [0x0 0x0 [:label9 | :label12] [:label12 | @0x13]]
0x1E7	PUSH(0x0)
0x1E9	DUP1
0x1EA	PUSH(SLOAD(POP(0x0)))
0x1ED	DUP1
0x1EE	PUSH(POP(@0x1EA) + 0x1)
0x1EF	DUP1
0x1F0	DUP4
0x1F1	SSTORE(POP(0x0), POP(@0x1EE))
0x1F2	SWAP1
0x1F3	SWAP4
0x1F4	POP()
0x1F5	SWAP1
0x1F6	DUP2
0x1F7	DUP5
0x1F8	DUP1
0x1F9	PUSH(!POP(@0x1EA))
0x1FA	DUP2
0x1FB	SWAP1
0x200	JUMPI(:label18, POP(@0x1F9) > POP(@0x1EE))

# Stack: [@0x1EA @0x1EE 0x0 @0x1EE 0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x203	PUSH(0x2 * POP(@0x1EA))
0x204	DUP1
0x208	DUP2
0x20B	MSTORE(0x0, POP(0x0))
0x210	PUSH(SHA3(0x0, 0x20))
0x211	SWAP1
0x212	DUP2
0x213	PUSH(POP(@0x210) + POP(@0x203))
0x214	SWAP1
0x215	PUSH(POP(@0x210) + 0x2 * POP(@0x1EE))
0x216	PUSH(:label18)
0x219	SWAP2
0x21A	SWAP1

:label17
# Stack: [[@0x215 | @0x239] @0x213 :label18 @0x1EE 0x0 @0x1EE 0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x21C	DUP1
0x21D	DUP3
0x223	JUMPI(:label19, !(POP(@0x213) > POP()))

# Stack: [[@0x215 | @0x239] @0x213 :label18 @0x1EE 0x0 @0x1EE 0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x224	DUP1
0x230	DUP1
0x231	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x232	PUSH(0x0)
0x234	PUSH(0x1)
0x236	SWAP1
0x237	SWAP1
0x238	SWAP2
0x239	PUSH(POP(0x1) + POP())
0x23A	SWAP1
0x23B	DUP2
0x23C	SSTORE(POP(@0x239), POP(0x0))
0x240	JUMP(:label17)

:label18
# Stack: [[@0x1EA | @0x213] @0x1EE 0x0 @0x1EE 0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x242	POP()
0x243	POP()
0x244	POP()
0x245	POP()
0x246	PUSH(CALLER())
0x247	PUSH(0x0)
0x24B	POP(0x0)
0x24C	DUP4
0x24D	DUP2
0x24F	DUP1
0x255	JUMPI(0x2, !(POP(@0x1EA) < SLOAD(POP(0x0))))

# Stack: [@0x1EA 0x0 @0x246 0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x256	DUP2
0x257	DUP1
0x258	MSTORE(POP(0x0), POP(0x0))
0x25C	PUSH(0x0)
0x25E	DUP1
0x265	DUP1
0x266	CODECOPY(POP(0x0), 0x42D, 0x20)
0x267	DUP1
0x268	PUSH(MLOAD(POP(0x0)))
0x269	SWAP1
0x26A	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x26B	PUSH(POP(@0x268) + 0x2 * POP(@0x1EA))
0x26C	DUP1
0x277	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x26B)))
0x278	SWAP1
0x279	SWAP3
0x27A	PUSH(POP(@0x246) | POP(@0x277))
0x27B	SWAP1
0x27C	SWAP2
0x27D	SSTORE(POP(@0x26B), POP(@0x27A))
0x27E	DUP1
0x27F	PUSH(SLOAD(POP(0x0)))
0x280	PUSH(CALLVALUE())
0x281	SWAP1
0x282	SWAP1
0x283	DUP5
0x284	SWAP1
0x285	DUP2
0x28B	JUMPI(0x2, !(POP(@0x1EA) < POP(@0x27F)))

# Stack: [@0x1EA 0x0 @0x280 0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x28F	PUSH(0x0)
0x291	DUP1
0x298	DUP1
0x299	CODECOPY(POP(0x0), 0x44D, 0x20)
0x29A	DUP1
0x29B	PUSH(MLOAD(POP(0x0)))
0x29C	SWAP1
0x29D	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x29E	PUSH(POP(@0x29B) + 0x2 * POP(@0x1EA))
0x29F	SWAP2
0x2A0	SWAP1
0x2A1	SWAP2
0x2A2	SSTORE(POP(@0x29E), POP(@0x280))
0x2A3	DUP3
0x2A8	JUMPI(:label20, POP(@0x1EA) == POP(0x0))

# Stack: [0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x2A9	PUSH(0x2)
0x2AB	DUP1
0x2AC	PUSH(SLOAD(POP(0x2)))
0x2AD	PUSH(0x3)
0x2AF	PUSH(CALLVALUE())
0x2B0	DUP2
0x2B1	DUP2
0x2B2	PUSH(POP(@0x2AF) / POP(0x3))
0x2B3	SWAP1
0x2B4	SWAP1
0x2B5	SWAP3
0x2B6	PUSH(POP(@0x2B2) + POP(@0x2AC))
0x2B7	SWAP1
0x2B8	SWAP3
0x2B9	SSTORE(POP(0x2), POP(@0x2B6))
0x2BA	DUP2
0x2BC	PUSH(SLOAD(POP(0x3)) + POP(@0x2AF))
0x2BD	SWAP1
0x2BE	SSTORE(POP(0x3), POP(@0x2BC))
0x2C2	JUMP(:label21)

:label19
# Stack: [[@0x215 | @0x239] @0x213 :label18 @0x1EE 0x0 @0x1EE 0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x2C4	POP()
0x2C5	SWAP1
0x2C6	JUMP(POP(:label18))

:label20
# Stack: [0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x2C8	PUSH(0x2)
0x2CA	DUP1
0x2CD	PUSH(CALLVALUE() + SLOAD(POP(0x2)))
0x2CE	SWAP1
0x2CF	SSTORE(POP(0x2), POP(@0x2CD))

:label21
# Stack: [0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x2D3	PUSH(SLOAD(0x1))
0x2D4	PUSH(0x0)
0x2D6	DUP1
0x2D7	PUSH(SLOAD(POP(0x0)))
0x2D8	SWAP1
0x2D9	SWAP2
0x2DA	SWAP1
0x2DB	DUP2
0x2E1	JUMPI(0x2, !(POP(@0x2D3) < POP(@0x2D7)))

# Stack: [@0x2D3 0x0 0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x2E2	SWAP1
0x2E3	DUP1
0x2E4	MSTORE(POP(0x0), POP(0x0))
0x2E5	PUSH(0x3)
0x2E7	DUP1
0x2E8	PUSH(SLOAD(POP(0x3)))
0x2E9	PUSH(0x2)
0x2EB	SWAP2
0x2EC	SWAP1
0x2ED	SWAP3
0x2EF	PUSH(0x0)
0x2F1	DUP1
0x2F8	DUP1
0x2F9	CODECOPY(POP(0x0), 0x44D, 0x20)
0x2FA	DUP1
0x2FB	PUSH(MLOAD(POP(0x0)))
0x2FC	SWAP1
0x2FD	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x300	PUSH(SLOAD(POP(@0x2FB) + POP(0x2) * POP(@0x2D3)) * POP(0x3))
0x301	SWAP1
0x307	JUMPI(:label22, !(POP(@0x2E8) > POP(@0x300)))

# Stack: [0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x30A	PUSH(SLOAD(0x1))
0x30B	PUSH(0x0)
0x30D	DUP1
0x30E	PUSH(SLOAD(POP(0x0)))
0x30F	PUSH(0x3)
0x311	SWAP2
0x312	SWAP1
0x313	DUP2
0x319	JUMPI(0x2, !(POP(@0x30A) < POP(@0x30E)))

# Stack: [@0x30A 0x0 0x3 0x0 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x31A	DUP2
0x31B	DUP1
0x31C	MSTORE(POP(0x0), POP(0x0))
0x320	PUSH(0x0)
0x322	DUP1
0x329	DUP1
0x32A	CODECOPY(POP(0x0), 0x42D, 0x20)
0x32B	DUP1
0x32C	PUSH(MLOAD(POP(0x0)))
0x32D	SWAP1
0x32E	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x32F	PUSH(POP(@0x32C) + 0x2 * POP(@0x30A))
0x330	SWAP1
0x331	POP()
0x337	POP(0x0)
0x339	PUSH(SLOAD(0x1 + POP(@0x32F)) / POP(0x3))
0x33A	PUSH(0x0)
0x33E	POP(0x0)
0x343	POP(0x0)
0x344	PUSH(SLOAD(0x1))
0x345	DUP2
0x347	DUP1
0x34D	JUMPI(0x2, !(POP(@0x344) < SLOAD(POP(0x0))))

# Stack: [@0x344 0x0 @0x339 0x0 @0x1EA [:label9 | :label12] [@0x13 | :label12]]
0x34E	DUP2
0x34F	DUP1
0x350	MSTORE(POP(0x0), POP(0x0))
0x354	PUSH(0x0)
0x356	DUP1
0x35D	DUP1
0x35E	CODECOPY(POP(0x0), 0x42D, 0x20)
0x35F	DUP1
0x360	PUSH(MLOAD(POP(0x0)))
0x361	SWAP1
0x362	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x363	PUSH(POP(@0x360) + 0x2 * POP(@0x344))
0x364	SWAP1
0x365	POP()
0x36B	POP(0x0)
0x370	PUSH(0x3 * (SLOAD(0x1 + POP(@0x363)) - POP(@0x339)))
0x371	SWAP1
0x372	POP()
0x373	PUSH(0x0)
0x377	POP(0x0)
0x37C	POP(0x0)
0x37D	PUSH(SLOAD(0x1))
0x37E	DUP2
0x380	DUP1
0x386	JUMPI(0x2, !(POP(@0x37D) < SLOAD(POP(0x0))))

# Stack: [@0x37D 0x0 @0x370 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x387	DUP2
0x388	DUP1
0x389	MSTORE(POP(0x0), POP(0x0))
0x38D	PUSH(0x0)
0x38F	DUP1
0x396	DUP1
0x397	CODECOPY(POP(0x0), 0x42D, 0x20)
0x398	DUP1
0x399	PUSH(MLOAD(POP(0x0)))
0x39A	SWAP1
0x39B	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x39C	PUSH(POP(@0x399) + 0x2 * POP(@0x37D))
0x39D	SWAP1
0x39E	POP()
0x39F	PUSH(SLOAD(POP(@0x39C)))
0x3A2	PUSH(MLOAD(0x40))
0x3AA	PUSH(0x2 ** 0xA0 - 0x1)
0x3AB	SWAP1
0x3AC	SWAP1
0x3AD	SWAP2
0x3AE	PUSH(POP(@0x3AA) & POP(@0x39F))
0x3AF	SWAP1
0x3B0	PUSH(0x0)
0x3B2	SWAP1
0x3B3	DUP4
0x3B4	SWAP1
0x3B5	DUP3
0x3B6	DUP2
0x3B7	DUP2
0x3B8	DUP2
0x3B9	DUP6
0x3BA	DUP9
0x3BB	DUP4
0x3BC	PUSH(CALL(POP(0x0), POP(@0x3AE), POP(@0x370), POP(@0x3A2), POP(0x0), POP(@0x3A2), POP(0x0)))
0x3BD	POP()
0x3BE	POP()
0x3C1	PUSH(SLOAD(0x1))
0x3C2	DUP3
0x3C3	PUSH(SLOAD(POP(0x0)))
0x3C4	SWAP3
0x3C5	SWAP4
0x3C6	POP()
0x3C7	SWAP2
0x3C8	DUP3
0x3CA	PUSH(!(POP(@0x3C1) < POP(@0x3C3)))
0x3CB	SWAP1
0x3CC	POP()
0x3D0	JUMPI(0x2, POP(@0x3CA))

# Stack: [@0x3C1 0x0 @0x370 @0x1EA [:label9 | :label12] [:label12 | @0x13]]
0x3D1	SWAP1
0x3D2	DUP1
0x3D3	MSTORE(POP(0x0), POP(0x0))
0x3D4	PUSH(0x3)
0x3D6	DUP1
0x3D7	PUSH(SLOAD(POP(0x3)))
0x3D8	PUSH(0x2)
0x3DA	SWAP2
0x3DB	SWAP1
0x3DC	SWAP3
0x3DE	PUSH(0x0)
0x3E0	DUP1
0x3E7	DUP1
0x3E8	CODECOPY(POP(0x0), 0x44D, 0x20)
0x3E9	DUP1
0x3EA	PUSH(MLOAD(POP(0x0)))
0x3EB	SWAP1
0x3EC	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3EF	DUP1
0x3F0	PUSH(POP(0x3) * SLOAD(POP(@0x3EA) + POP(0x2) * POP(@0x3C1)))
0x3F1	SWAP1
0x3F2	SWAP2
0x3F3	PUSH(POP(@0x3D7) - POP(@0x3F0))
0x3F4	SWAP1
0x3F5	SSTORE(POP(0x3), POP(@0x3F3))
0x3F6	PUSH(0x1)
0x3F8	DUP1
0x3FA	DUP1
0x3FB	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x3FC	SWAP1
0x3FD	SSTORE(POP(0x1), POP(@0x3FB))

:label22
# Stack: [[0x0 | @0x370] [0x0 | @0x1EA] [:label9 | :label12] [:label12 | @0x13]]
0x3FF	POP()
0x400	POP()
0x401	JUMP(POP())

:label23
# Stack: [:label12 @0x13]
0x405	PUSH(SLOAD(0x4))
0x408	PUSH(SLOAD(0x2))
0x40B	PUSH(MLOAD(0x40))
0x413	PUSH(0x2 ** 0xA0 - 0x1)
0x414	SWAP1
0x415	SWAP1
0x416	SWAP3
0x417	PUSH(POP(@0x413) & POP(@0x405))
0x418	SWAP2
0x419	PUSH(0x0)
0x41B	SWAP2
0x41C	SWAP1
0x41D	DUP3
0x41E	DUP2
0x41F	DUP2
0x420	DUP2
0x421	DUP6
0x422	DUP9
0x423	DUP4
0x424	PUSH(CALL(POP(0x0), POP(@0x417), POP(@0x408), POP(@0x40B), POP(0x0), POP(@0x40B), POP(0x0)))
0x425	POP()
0x426	POP()
0x427	POP()
0x42A	SSTORE(0x2, POP(0x0))
0x42B	POP()
0x42C	JUMP(POP(:label12))


