# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0xD	PUSH(CALLDATALOAD(0x0))
0xE	PUSH(0x100000000000000000000000000000000000000000000000000000000)
0x2C	SWAP1
0x33	PUSH(0xFFFFFFFF & POP(@0xD) / POP(0x100000000000000000000000000000000000000000000000000000000))
0x34	DUP1
0x3E	JUMPI(:label3, 0x27E235E3 == POP(@0x33))

# Stack: [@0x33]
0x3F	DUP1
0x49	JUMPI(:label6, 0x2DDBD13A == POP(@0x33))

# Stack: [@0x33]
0x4A	DUP1
0x54	JUMPI(:label9, 0x3CCFD60B == POP(@0x33))

# Stack: [@0x33]
0x55	DUP1
0x5F	JUMPI(:label12, 0x66B3F6BF == POP(@0x33))

# Stack: [@0x33]
0x60	DUP1
0x6A	JUMPI(:label15, 0x8DA5CB5B == POP(@0x33))

# Stack: [@0x33]
0x6B	DUP1
0x75	JUMPI(:label18, 0xE8B5E51F == POP(@0x33))

# Stack: [@0x33]
0x76	DUP1
0x80	JUMPI(:label20, 0xFDB5A03E == POP(@0x33))

:label0
# Stack: []
0x87	JUMPI(:label1, !CALLVALUE())

# Stack: []
0x88	INVALID()

:label1
# Stack: []
0x8A	PUSH(:label2)

# Stack: [:label2]
0x8E	PUSH(0x0)
0x90	PUSH(0x0)
0x92	REVERT()

:label2
:label3
# Stack: [@0x33]
0x9D	JUMPI(:label4, !CALLVALUE())

# Stack: [@0x33]
0x9E	INVALID()

:label4
# Stack: [@0x33]
0xA0	PUSH(:label5)
0xA3	PUSH(0x4)
0xA5	DUP1
0xA6	DUP1
0xBD	PUSH(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLDATALOAD(POP(0x4)))
0xBE	SWAP1
0xC1	PUSH(0x20 + POP(0x4))
0xC2	SWAP1
0xC3	SWAP2
0xC4	SWAP1
0xC5	POP()
0xC6	POP()
0xCA	JUMP(:label23)

:label5
# Stack: [@0x1E6 :label5 @0x33]
0xCE	PUSH(MLOAD(0x40))
0xCF	DUP1
0xD0	DUP3
0xD1	DUP2
0xD2	MSTORE(POP(@0xCE), POP(@0x1E6))
0xD5	PUSH(0x20 + POP(@0xCE))
0xD6	SWAP2
0xD7	POP()
0xD8	POP()
0xDB	PUSH(MLOAD(0x40))
0xDC	DUP1
0xDD	SWAP2
0xDE	PUSH(POP(@0xD5) - POP(@0xDB))
0xDF	SWAP1
0xE0	RETURN(POP(@0xDB), POP(@0xDE))

:label6
# Stack: [@0x33]
0xE7	JUMPI(:label7, !CALLVALUE())

# Stack: [@0x33]
0xE8	INVALID()

:label7
# Stack: [@0x33]
0xEA	PUSH(:label8)
0xF0	JUMP(:label24)

:label8
# Stack: [@0x1EC :label8 @0x33]
0xF4	PUSH(MLOAD(0x40))
0xF5	DUP1
0xF6	DUP3
0xF7	DUP2
0xF8	MSTORE(POP(@0xF4), POP(@0x1EC))
0xFB	PUSH(0x20 + POP(@0xF4))
0xFC	SWAP2
0xFD	POP()
0xFE	POP()
0x101	PUSH(MLOAD(0x40))
0x102	DUP1
0x103	SWAP2
0x104	PUSH(POP(@0xFB) - POP(@0x101))
0x105	SWAP1
0x106	RETURN(POP(@0x101), POP(@0x104))

:label9
# Stack: [@0x33]
0x10D	JUMPI(:label10, !CALLVALUE())

# Stack: [@0x33]
0x10E	INVALID()

:label10
# Stack: [@0x33]
0x110	PUSH(:label11)
0x116	JUMP(:label25)

:label11
# Stack: [@0x33]
0x118	STOP()

:label12
# Stack: [@0x33]
0x11F	JUMPI(:label13, !CALLVALUE())

# Stack: [@0x33]
0x120	INVALID()

:label13
# Stack: [@0x33]
0x122	PUSH(:label14)
0x125	PUSH(0x4)
0x127	DUP1
0x128	DUP1
0x13F	PUSH(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLDATALOAD(POP(0x4)))
0x140	SWAP1
0x143	PUSH(0x20 + POP(0x4))
0x144	SWAP1
0x145	SWAP2
0x146	SWAP1
0x147	POP()
0x148	POP()
0x14C	JUMP(:label29)

:label14
# Stack: [@0x3D3 :label14 @0x33]
0x150	PUSH(MLOAD(0x40))
0x151	DUP1
0x152	DUP3
0x153	DUP2
0x154	MSTORE(POP(@0x150), POP(@0x3D3))
0x157	PUSH(0x20 + POP(@0x150))
0x158	SWAP2
0x159	POP()
0x15A	POP()
0x15D	PUSH(MLOAD(0x40))
0x15E	DUP1
0x15F	SWAP2
0x160	PUSH(POP(@0x157) - POP(@0x15D))
0x161	SWAP1
0x162	RETURN(POP(@0x15D), POP(@0x160))

:label15
# Stack: [@0x33]
0x169	JUMPI(:label16, !CALLVALUE())

# Stack: [@0x33]
0x16A	INVALID()

:label16
# Stack: [@0x33]
0x16C	PUSH(:label17)
0x172	JUMP(:label30)

:label17
# Stack: [@0x3F9 :label17 @0x33]
0x176	PUSH(MLOAD(0x40))
0x177	DUP1
0x178	DUP3
0x1A5	DUP1
0x1A6	MSTORE(POP(@0x176), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x3F9))
0x1A9	PUSH(0x20 + POP(@0x176))
0x1AA	SWAP2
0x1AB	POP()
0x1AC	POP()
0x1AF	PUSH(MLOAD(0x40))
0x1B0	DUP1
0x1B1	SWAP2
0x1B2	PUSH(POP(@0x1A9) - POP(@0x1AF))
0x1B3	SWAP1
0x1B4	RETURN(POP(@0x1AF), POP(@0x1B2))

:label18
# Stack: [@0x33]
0x1B6	PUSH(:label19)
0x1BC	JUMP(:label31)

:label19
# Stack: [@0x33]
0x1BE	STOP()

:label20
# Stack: [@0x33]
0x1C5	JUMPI(:label21, !CALLVALUE())

# Stack: [@0x33]
0x1C6	INVALID()

:label21
# Stack: [@0x33]
0x1C8	PUSH(:label22)
0x1CE	JUMP(:label42)

:label22
# Stack: [@0x33]
0x1D0	STOP()

:label23
# Stack: [@0xBD :label5 @0x33]
0x1D6	MSTORE(0x20, 0x3)
0x1D7	DUP1
0x1DA	MSTORE(0x0, POP(@0xBD))
0x1DF	PUSH(SHA3(0x0, 0x40))
0x1E0	PUSH(0x0)
0x1E2	SWAP1
0x1E3	POP()
0x1E4	SWAP1
0x1E5	POP()
0x1E6	PUSH(SLOAD(POP(@0x1DF)))
0x1E7	DUP2
0x1E8	JUMP(POP(:label5))

:label24
# Stack: [:label8 @0x33]
0x1EC	PUSH(SLOAD(0x1))
0x1ED	DUP2
0x1EE	JUMP(POP(:label8))

:label25
# Stack: [:label11 @0x33]
0x1F0	PUSH(0x0)
0x1F4	PUSH(0x3)
0x1F6	PUSH(0x0)
0x225	DUP1
0x226	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x229	PUSH(0x20 + POP(0x0))
0x22A	SWAP1
0x22B	DUP2
0x22C	MSTORE(POP(@0x229), POP(0x3))
0x239	JUMPI(:label26, !(SLOAD(SHA3(0x0, 0x20 + POP(@0x229))) == 0x0))

# Stack: [0x0 :label11 @0x33]
0x23A	PUSH(0x0)
0x23C	PUSH(0x0)
0x23E	REVERT()

:label26
# Stack: [0x0 :label11 @0x33]
0x240	PUSH(0x3)
0x242	PUSH(0x0)
0x271	DUP1
0x272	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x275	PUSH(0x20 + POP(0x0))
0x276	SWAP1
0x277	DUP2
0x278	MSTORE(POP(@0x275), POP(0x3))
0x27F	PUSH(SLOAD(SHA3(0x0, 0x20 + POP(@0x275))))
0x280	SWAP1
0x281	POP()
0x282	PUSH(0x0)
0x284	PUSH(0x3)
0x286	PUSH(0x0)
0x2B5	DUP1
0x2B6	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x2B9	PUSH(0x20 + POP(0x0))
0x2BA	SWAP1
0x2BB	DUP2
0x2BC	MSTORE(POP(@0x2B9), POP(0x3))
0x2C2	PUSH(SHA3(0x0, 0x20 + POP(@0x2B9)))
0x2C3	DUP1
0x2C4	SWAP1
0x2C5	SSTORE(POP(@0x2C2), POP(0x0))
0x2C6	POP()
0x2DD	PUSH(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x2DE	PUSH(0x8FC)
0x2E1	DUP2
0x2E2	SWAP1
0x2E3	DUP2
0x2E5	PUSH(!POP(@0x27F) * POP(0x8FC))
0x2E6	SWAP1
0x2E9	PUSH(MLOAD(0x40))
0x2EA	DUP1
0x2EB	SWAP1
0x2EC	POP()
0x2F1	PUSH(MLOAD(0x40))
0x2F2	DUP1
0x2F3	DUP3
0x2F5	DUP1
0x2F6	DUP4
0x2F7	DUP7
0x2F8	DUP7
0x2F9	PUSH(CALL(POP(@0x2E5), POP(@0x2DD), POP(@0x27F), POP(@0x2F1), POP(@0x2E9) - POP(@0x2F1), POP(@0x2F1), 0x0))
0x2FA	SWAP4
0x2FB	POP()
0x2FC	POP()
0x2FD	POP()
0x2FE	POP()
0x304	JUMPI(:label27, !!POP(@0x2F9))

# Stack: [@0x27F :label11 @0x33]
0x305	DUP1
0x306	PUSH(0x3)
0x308	PUSH(0x0)
0x337	DUP1
0x338	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x33B	PUSH(0x20 + POP(0x0))
0x33C	SWAP1
0x33D	DUP2
0x33E	MSTORE(POP(@0x33B), POP(0x3))
0x344	PUSH(SHA3(0x0, 0x20 + POP(@0x33B)))
0x345	DUP1
0x346	SWAP1
0x347	SSTORE(POP(@0x344), POP(@0x27F))
0x348	POP()
0x34C	JUMP(:label28)

:label27
# Stack: [@0x27F :label11 @0x33]
0x36F	PUSH(CALLER())
0x370	DUP2
0x373	PUSH(MLOAD(0x40))
0x374	DUP1
0x375	DUP4
0x3A2	DUP1
0x3A3	MSTORE(POP(@0x373), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x36F))
0x3A6	PUSH(0x20 + POP(@0x373))
0x3A7	DUP3
0x3A8	DUP2
0x3A9	MSTORE(POP(@0x3A6), POP(@0x27F))
0x3AC	PUSH(0x20 + POP(@0x3A6))
0x3AD	SWAP3
0x3AE	POP()
0x3AF	POP()
0x3B0	POP()
0x3B3	PUSH(MLOAD(0x40))
0x3B4	DUP1
0x3B5	SWAP2
0x3B6	PUSH(POP(@0x3AC) - POP(@0x3B3))
0x3B7	SWAP1
0x3B8	LOG1(POP(@0x3B3), POP(@0x3B6), 0xB4214C8C54FC7442F36D3682F59AEBAF09358A4431835B30EFB29D52CF9E1E91)

:label28
# Stack: [@0x27F :label11 @0x33]
0x3BC	POP()
0x3BD	JUMP(POP(:label11))

:label29
# Stack: [@0x13F :label14 @0x33]
0x3C3	MSTORE(0x20, 0x2)
0x3C4	DUP1
0x3C7	MSTORE(0x0, POP(@0x13F))
0x3CC	PUSH(SHA3(0x0, 0x40))
0x3CD	PUSH(0x0)
0x3CF	SWAP1
0x3D0	POP()
0x3D1	SWAP1
0x3D2	POP()
0x3D3	PUSH(SLOAD(POP(@0x3CC)))
0x3D4	DUP2
0x3D5	JUMP(POP(:label14))

:label30
# Stack: [:label17 @0x33]
0x3D7	PUSH(0x0)
0x3D9	PUSH(0x0)
0x3DB	SWAP1
0x3DC	PUSH(SLOAD(POP(0x0)))
0x3DD	SWAP1
0x3E1	PUSH(0x100 ** POP(0x0))
0x3E2	SWAP1
0x3F9	PUSH(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x3DC) / POP(@0x3E1))
0x3FA	DUP2
0x3FB	JUMP(POP(:label17))

:label31
# Stack: [:label19 @0x33]
0x3FD	PUSH(0x0)
0x3FF	PUSH(0x0)
0x401	PUSH(0x0)
0x412	JUMPI(:label32, !(CALLVALUE() < 0x16345785D8A0000))

# Stack: [0x0 0x0 0x0 :label19 @0x33]
0x413	PUSH(0x0)
0x415	PUSH(0x0)
0x417	REVERT()

:label32
# Stack: [0x0 0x0 0x0 :label19 @0x33]
0x419	PUSH(CALLVALUE())
0x41A	SWAP3
0x41B	POP()
0x41C	PUSH(:label33)
0x41F	DUP4
0x423	JUMP(:label50)

:label33
# Stack: [[0x0 | @0xA35] 0x0 0x0 @0x419 :label19 @0x33]
0x425	SWAP2
0x426	POP()
0x427	DUP2
0x428	DUP4
0x429	PUSH(POP(@0x419) - POP())
0x42A	SWAP3
0x42B	POP()
0x42C	PUSH(0x0)
0x42E	SWAP1
0x42F	POP()

:label34
# Stack: [[0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x431	PUSH(0x4)
0x433	DUP1
0x434	PUSH(SLOAD(POP(0x4)))
0x435	SWAP1
0x436	POP()
0x437	DUP2
0x43D	JUMPI(:label38, !(POP() < POP(@0x434)))

# Stack: [[0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x440	PUSH(SLOAD(0x1))
0x441	PUSH(0x2)
0x443	PUSH(0x0)
0x445	PUSH(0x4)
0x447	DUP5
0x448	DUP2
0x44A	DUP1
0x451	JUMPI(:label35, !!(POP() < SLOAD(POP(0x4))))

# Stack: [[0x0 | @0x554] 0x4 0x0 0x2 @0x440 [0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x452	INVALID()

:label35
# Stack: [[0x0 | @0x554] 0x4 0x0 0x2 @0x440 [0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x454	SWAP1
0x457	MSTORE(0x0, POP(0x4))
0x45C	PUSH(SHA3(0x0, 0x20))
0x45D	SWAP1
0x45E	PUSH(POP() + POP(@0x45C))
0x45F	PUSH(0x0)

# Stack: [0x0 @0x45E 0x0 0x2 @0x440 [0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x462	SWAP1
0x463	PUSH(SLOAD(POP(@0x45E)))
0x464	SWAP1
0x468	PUSH(0x100 ** POP(0x0))
0x469	SWAP1
0x4AD	DUP1
0x4AE	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x463) / POP(@0x468))
0x4B1	PUSH(0x20 + POP(0x0))
0x4B2	SWAP1
0x4B3	DUP2
0x4B4	MSTORE(POP(@0x4B1), POP(0x2))
0x4BC	DUP4
0x4BD	PUSH(POP(@0x429) * SLOAD(SHA3(0x0, 0x20 + POP(@0x4B1))))
0x4BE	DUP2
0x4C4	JUMPI(:label36, !!POP(@0x440))

# Stack: [@0x4BD @0x440 [0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x4C5	INVALID()

:label36
# Stack: [@0x4BD @0x440 [0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x4C7	PUSH(POP(@0x4BD) / POP(@0x440))
0x4C8	PUSH(0x3)
0x4CA	PUSH(0x0)
0x4CC	PUSH(0x4)
0x4CE	DUP5
0x4CF	DUP2
0x4D1	DUP1
0x4D8	JUMPI(:label37, !!(POP() < SLOAD(POP(0x4))))

# Stack: [[0x0 | @0x554] 0x4 0x0 0x3 @0x4C7 [0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x4D9	INVALID()

:label37
# Stack: [[0x0 | @0x554] 0x4 0x0 0x3 @0x4C7 [0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x4DB	SWAP1
0x4DE	MSTORE(0x0, POP(0x4))
0x4E3	PUSH(SHA3(0x0, 0x20))
0x4E4	SWAP1
0x4E5	PUSH(POP() + POP(@0x4E3))
0x4E6	PUSH(0x0)

# Stack: [0x0 @0x4E5 0x0 0x3 @0x4C7 [0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x4E9	SWAP1
0x4EA	PUSH(SLOAD(POP(@0x4E5)))
0x4EB	SWAP1
0x4EF	PUSH(0x100 ** POP(0x0))
0x4F0	SWAP1
0x534	DUP1
0x535	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x4EA) / POP(@0x4EF))
0x538	PUSH(0x20 + POP(0x0))
0x539	SWAP1
0x53A	DUP2
0x53B	MSTORE(POP(@0x538), POP(0x3))
0x541	PUSH(SHA3(0x0, 0x20 + POP(@0x538)))
0x544	DUP2
0x545	DUP2
0x547	PUSH(SLOAD(POP(@0x541)) + POP(@0x4C7))
0x548	SWAP2
0x549	POP()
0x54A	POP(0x0)
0x54B	DUP2
0x54C	SWAP1
0x54D	SSTORE(POP(@0x541), POP(@0x547))
0x54E	POP()

# Stack: [[0x0 | @0x554] [0x0 | @0xA35] @0x429 :label19 @0x33]
0x550	DUP1
0x551	DUP1
0x554	PUSH(0x1 + POP())
0x555	SWAP2
0x556	POP()
0x557	POP()
0x55B	JUMP(:label34)

:label38
# Stack: [[0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x55F	PUSH(0x2)
0x561	PUSH(0x0)
0x590	DUP1
0x591	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x594	PUSH(0x20 + POP(0x0))
0x595	SWAP1
0x596	DUP2
0x597	MSTORE(POP(@0x594), POP(0x2))
0x5A4	JUMPI(:label40, !(SLOAD(SHA3(0x0, 0x20 + POP(@0x594))) == 0x0))

# Stack: [[@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x5A5	PUSH(0x4)
0x5A7	DUP1
0x5A8	PUSH(SLOAD(POP(0x4)))
0x5A9	DUP1
0x5AC	PUSH(0x1 + POP(@0x5A8))
0x5AD	DUP3
0x5AE	DUP2
0x5AF	PUSH(:label39)
0x5B2	SWAP2
0x5B3	SWAP1
0x5B7	JUMP(:label53)

:label39
# Stack: [@0x5AC @0x5A8 0x4 [@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x5B9	SWAP2
0x5BC	MSTORE(0x0, POP(0x4))
0x5C1	PUSH(SHA3(0x0, 0x20))
0x5C2	SWAP1
0x5C3	PUSH(POP(@0x5A8) + POP(@0x5C1))
0x5C4	PUSH(0x0)

# Stack: [0x0 @0x5C3 @0x5AC [@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x5C7	PUSH(CALLER())
0x5C8	SWAP1
0x5C9	SWAP2
0x5CA	SWAP1
0x5CB	SWAP2
0x5CF	PUSH(0x100 ** POP(0x0))
0x5D0	DUP2
0x5D2	DUP1
0x5EA	PUSH(~(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF * POP(@0x5CF)) & SLOAD(POP(@0x5C3)))
0x5EB	SWAP1
0x5EC	DUP4
0x604	PUSH((0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x5C7)) * POP(@0x5CF) | POP(@0x5EA))
0x605	SWAP1
0x606	SSTORE(POP(@0x5C3), POP(@0x604))
0x607	POP()
0x608	POP()
0x609	PUSH(CALLVALUE())
0x60A	PUSH(0x2)
0x60C	PUSH(0x0)
0x63B	DUP1
0x63C	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x63F	PUSH(0x20 + POP(0x0))
0x640	SWAP1
0x641	DUP2
0x642	MSTORE(POP(@0x63F), POP(0x2))
0x648	PUSH(SHA3(0x0, 0x20 + POP(@0x63F)))
0x649	DUP1
0x64A	SWAP1
0x64B	SSTORE(POP(@0x648), POP(@0x609))
0x64C	POP()
0x650	JUMP(:label41)

:label40
# Stack: [[0x0 | @0x554] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x652	PUSH(CALLVALUE())
0x653	PUSH(0x2)
0x655	PUSH(0x0)
0x684	DUP1
0x685	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x688	PUSH(0x20 + POP(0x0))
0x689	SWAP1
0x68A	DUP2
0x68B	MSTORE(POP(@0x688), POP(0x2))
0x691	PUSH(SHA3(0x0, 0x20 + POP(@0x688)))
0x694	DUP2
0x695	DUP2
0x697	PUSH(SLOAD(POP(@0x691)) + POP(@0x652))
0x698	SWAP2
0x699	POP()
0x69A	POP(0x0)
0x69B	DUP2
0x69C	SWAP1
0x69D	SSTORE(POP(@0x691), POP(@0x697))
0x69E	POP()

:label41
# Stack: [[@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x6A0	PUSH(CALLVALUE())
0x6A1	PUSH(0x1)
0x6A5	DUP2
0x6A6	DUP2
0x6A8	PUSH(SLOAD(POP(0x1)) + POP(@0x6A0))
0x6A9	SWAP2
0x6AA	POP()
0x6AB	POP(0x0)
0x6AC	DUP2
0x6AD	SWAP1
0x6AE	SSTORE(POP(0x1), POP(@0x6A8))
0x6AF	POP()
0x6D1	PUSH(CALLER())
0x6D2	PUSH(CALLVALUE())
0x6D5	PUSH(MLOAD(0x40))
0x6D6	DUP1
0x6D7	DUP4
0x704	DUP1
0x705	MSTORE(POP(@0x6D5), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x6D1))
0x708	PUSH(0x20 + POP(@0x6D5))
0x709	DUP3
0x70A	DUP2
0x70B	MSTORE(POP(@0x708), POP(@0x6D2))
0x70E	PUSH(0x20 + POP(@0x708))
0x70F	SWAP3
0x710	POP()
0x711	POP()
0x712	POP()
0x715	PUSH(MLOAD(0x40))
0x716	DUP1
0x717	SWAP2
0x718	PUSH(POP(@0x70E) - POP(@0x715))
0x719	SWAP1
0x71A	LOG1(POP(@0x715), POP(@0x718), 0xC74590E3281392E897F5C0F45530951CFE0DB0E86C76D65AF861E80B925871A4)

# Stack: [[@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0x71D	POP()
0x71E	POP()
0x71F	POP()
0x720	JUMP(POP(:label19))

:label42
# Stack: [:label22 @0x33]
0x722	PUSH(0x0)
0x724	PUSH(0x0)
0x726	PUSH(0x0)
0x72A	PUSH(0x3)
0x72C	PUSH(0x0)
0x75B	DUP1
0x75C	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x75F	PUSH(0x20 + POP(0x0))
0x760	SWAP1
0x761	DUP2
0x762	MSTORE(POP(@0x75F), POP(0x3))
0x76F	JUMPI(:label43, !(SLOAD(SHA3(0x0, 0x20 + POP(@0x75F))) == 0x0))

# Stack: [0x0 0x0 0x0 :label22 @0x33]
0x770	PUSH(0x0)
0x772	PUSH(0x0)
0x774	REVERT()

:label43
# Stack: [0x0 0x0 0x0 :label22 @0x33]
0x776	PUSH(0x3)
0x778	PUSH(0x0)
0x7A7	DUP1
0x7A8	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x7AB	PUSH(0x20 + POP(0x0))
0x7AC	SWAP1
0x7AD	DUP2
0x7AE	MSTORE(POP(@0x7AB), POP(0x3))
0x7B5	PUSH(SLOAD(SHA3(0x0, 0x20 + POP(@0x7AB))))
0x7B6	SWAP3
0x7B7	POP()
0x7B8	PUSH(0x0)
0x7BA	PUSH(0x3)
0x7BC	PUSH(0x0)
0x7EB	DUP1
0x7EC	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x7EF	PUSH(0x20 + POP(0x0))
0x7F0	SWAP1
0x7F1	DUP2
0x7F2	MSTORE(POP(@0x7EF), POP(0x3))
0x7F8	PUSH(SHA3(0x0, 0x20 + POP(@0x7EF)))
0x7F9	DUP1
0x7FA	SWAP1
0x7FB	SSTORE(POP(@0x7F8), POP(0x0))
0x7FC	POP()
0x7FD	PUSH(:label44)
0x800	DUP4
0x804	JUMP(:label50)

:label44
# Stack: [[@0xA35 | 0x0] 0x0 0x0 @0x7B5 :label22 @0x33]
0x806	SWAP2
0x807	POP()
0x808	DUP2
0x809	DUP4
0x80A	PUSH(POP(@0x7B5) - POP())
0x80B	SWAP3
0x80C	POP()
0x80D	PUSH(0x0)
0x80F	SWAP1
0x810	POP()

:label45
# Stack: [[0x0 | @0x935] [@0xA35 | 0x0] @0x80A :label22 @0x33]
0x812	PUSH(0x4)
0x814	DUP1
0x815	PUSH(SLOAD(POP(0x4)))
0x816	SWAP1
0x817	POP()
0x818	DUP2
0x81E	JUMPI(:label49, !(POP() < POP(@0x815)))

# Stack: [[0x0 | @0x935] [0x0 | @0xA35] @0x80A :label22 @0x33]
0x821	PUSH(SLOAD(0x1))
0x822	PUSH(0x2)
0x824	PUSH(0x0)
0x826	PUSH(0x4)
0x828	DUP5
0x829	DUP2
0x82B	DUP1
0x832	JUMPI(:label46, !!(POP() < SLOAD(POP(0x4))))

# Stack: [[0x0 | @0x935] 0x4 0x0 0x2 @0x821 [@0x935 | 0x0] [@0xA35 | 0x0] @0x80A :label22 @0x33]
0x833	INVALID()

:label46
# Stack: [[@0x935 | 0x0] 0x4 0x0 0x2 @0x821 [0x0 | @0x935] [@0xA35 | 0x0] @0x80A :label22 @0x33]
0x835	SWAP1
0x838	MSTORE(0x0, POP(0x4))
0x83D	PUSH(SHA3(0x0, 0x20))
0x83E	SWAP1
0x83F	PUSH(POP() + POP(@0x83D))
0x840	PUSH(0x0)

# Stack: [0x0 @0x83F 0x0 0x2 @0x821 [0x0 | @0x935] [0x0 | @0xA35] @0x80A :label22 @0x33]
0x843	SWAP1
0x844	PUSH(SLOAD(POP(@0x83F)))
0x845	SWAP1
0x849	PUSH(0x100 ** POP(0x0))
0x84A	SWAP1
0x88E	DUP1
0x88F	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x844) / POP(@0x849))
0x892	PUSH(0x20 + POP(0x0))
0x893	SWAP1
0x894	DUP2
0x895	MSTORE(POP(@0x892), POP(0x2))
0x89D	DUP4
0x89E	PUSH(POP(@0x80A) * SLOAD(SHA3(0x0, 0x20 + POP(@0x892))))
0x89F	DUP2
0x8A5	JUMPI(:label47, !!POP(@0x821))

# Stack: [@0x89E @0x821 [0x0 | @0x935] [@0xA35 | 0x0] @0x80A :label22 @0x33]
0x8A6	INVALID()

:label47
# Stack: [@0x89E @0x821 [0x0 | @0x935] [@0xA35 | 0x0] @0x80A :label22 @0x33]
0x8A8	PUSH(POP(@0x89E) / POP(@0x821))
0x8A9	PUSH(0x3)
0x8AB	PUSH(0x0)
0x8AD	PUSH(0x4)
0x8AF	DUP5
0x8B0	DUP2
0x8B2	DUP1
0x8B9	JUMPI(:label48, !!(POP() < SLOAD(POP(0x4))))

# Stack: [[0x0 | @0x935] 0x4 0x0 0x3 @0x8A8 [0x0 | @0x935] [@0xA35 | 0x0] @0x80A :label22 @0x33]
0x8BA	INVALID()

:label48
# Stack: [[0x0 | @0x935] 0x4 0x0 0x3 @0x8A8 [0x0 | @0x935] [@0xA35 | 0x0] @0x80A :label22 @0x33]
0x8BC	SWAP1
0x8BF	MSTORE(0x0, POP(0x4))
0x8C4	PUSH(SHA3(0x0, 0x20))
0x8C5	SWAP1
0x8C6	PUSH(POP() + POP(@0x8C4))
0x8C7	PUSH(0x0)

# Stack: [0x0 @0x8C6 0x0 0x3 @0x8A8 [@0x935 | 0x0] [@0xA35 | 0x0] @0x80A :label22 @0x33]
0x8CA	SWAP1
0x8CB	PUSH(SLOAD(POP(@0x8C6)))
0x8CC	SWAP1
0x8D0	PUSH(0x100 ** POP(0x0))
0x8D1	SWAP1
0x915	DUP1
0x916	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x8CB) / POP(@0x8D0))
0x919	PUSH(0x20 + POP(0x0))
0x91A	SWAP1
0x91B	DUP2
0x91C	MSTORE(POP(@0x919), POP(0x3))
0x922	PUSH(SHA3(0x0, 0x20 + POP(@0x919)))
0x925	DUP2
0x926	DUP2
0x928	PUSH(SLOAD(POP(@0x922)) + POP(@0x8A8))
0x929	SWAP2
0x92A	POP()
0x92B	POP(0x0)
0x92C	DUP2
0x92D	SWAP1
0x92E	SSTORE(POP(@0x922), POP(@0x928))
0x92F	POP()

# Stack: [[0x0 | @0x935] [@0xA35 | 0x0] @0x80A :label22 @0x33]
0x931	DUP1
0x932	DUP1
0x935	PUSH(0x1 + POP())
0x936	SWAP2
0x937	POP()
0x938	POP()
0x93C	JUMP(:label45)

:label49
# Stack: [[@0x935 | 0x0] [@0xA35 | 0x0] @0x80A :label22 @0x33]
0x93E	DUP2
0x93F	DUP4
0x940	PUSH(POP(@0x80A) + POP())
0x941	PUSH(0x2)
0x943	PUSH(0x0)
0x972	DUP1
0x973	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x976	PUSH(0x20 + POP(0x0))
0x977	SWAP1
0x978	DUP2
0x979	MSTORE(POP(@0x976), POP(0x2))
0x97F	PUSH(SHA3(0x0, 0x20 + POP(@0x976)))
0x982	DUP2
0x983	DUP2
0x985	PUSH(SLOAD(POP(@0x97F)) + POP(@0x940))
0x986	SWAP2
0x987	POP()
0x988	POP(0x0)
0x989	DUP2
0x98A	SWAP1
0x98B	SSTORE(POP(@0x97F), POP(@0x985))
0x98C	POP()
0x98D	DUP2
0x98E	DUP4
0x98F	PUSH(POP(@0x80A) + POP())
0x990	PUSH(0x1)
0x994	DUP2
0x995	DUP2
0x997	PUSH(SLOAD(POP(0x1)) + POP(@0x98F))
0x998	SWAP2
0x999	POP()
0x99A	POP(0x0)
0x99B	DUP2
0x99C	SWAP1
0x99D	SSTORE(POP(0x1), POP(@0x997))
0x99E	POP()
0x9C0	PUSH(CALLER())
0x9C1	DUP3
0x9C2	DUP5
0x9C3	PUSH(POP(@0x80A) + POP())
0x9C6	PUSH(MLOAD(0x40))
0x9C7	DUP1
0x9C8	DUP4
0x9F5	DUP1
0x9F6	MSTORE(POP(@0x9C6), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x9C0))
0x9F9	PUSH(0x20 + POP(@0x9C6))
0x9FA	DUP3
0x9FB	DUP2
0x9FC	MSTORE(POP(@0x9F9), POP(@0x9C3))
0x9FF	PUSH(0x20 + POP(@0x9F9))
0xA00	SWAP3
0xA01	POP()
0xA02	POP()
0xA03	POP()
0xA06	PUSH(MLOAD(0x40))
0xA07	DUP1
0xA08	SWAP2
0xA09	PUSH(POP(@0x9FF) - POP(@0xA06))
0xA0A	SWAP1
0xA0B	LOG1(POP(@0xA06), POP(@0xA09), 0xC74590E3281392E897F5C0F45530951CFE0DB0E86C76D65AF861E80B925871A4)

# Stack: [[@0x935 | 0x0] [@0xA35 | 0x0] @0x80A :label22 @0x33]
0xA0E	POP()
0xA0F	POP()
0xA10	POP()
0xA11	JUMP(POP(:label22))

:label50
# Stack: [[@0x7B5 | @0x419] [:label44 | :label33] [0x0 | 0x0] [0x0 | 0x0] [@0x7B5 | @0x419] [:label22 | :label19] @0x33]
0xA13	PUSH(0x0)
0xA28	JUMPI(:label52, !(SLOAD(0x1) < 0x2A5A058FC295ED000000))

# Stack: [0x0 [@0x7B5 | @0x419] [:label44 | :label33] [0x0 | 0x0] [0x0 | 0x0] [@0x7B5 | @0x419] [:label22 | :label19] @0x33]
0xA29	PUSH(0x2)
0xA2B	DUP3
0xA2C	DUP2
0xA32	JUMPI(:label51, !!POP(0x2))

# Stack: [[@0x7B5 | @0x419] 0x2 0x0 [@0x7B5 | @0x419] [:label44 | :label33] [0x0 | 0x0] [0x0 | 0x0] [@0x7B5 | @0x419] [:label22 | :label19] @0x33]
0xA33	INVALID()

:label51
# Stack: [[@0x7B5 | @0x419] 0x2 0x0 [@0x7B5 | @0x419] [:label44 | :label33] [0x0 | 0x0] [0x0 | 0x0] [@0x7B5 | @0x419] [:label22 | :label19] @0x33]
0xA35	PUSH(POP() / POP(0x2))
0xA36	SWAP1
0xA37	POP()
0xA38	DUP1
0xA39	PUSH(0x3)
0xA3B	PUSH(0x0)
0xA3D	PUSH(0x0)
0xA3F	PUSH(0x0)
0xA41	SWAP1
0xA42	PUSH(SLOAD(POP(0x0)))
0xA43	SWAP1
0xA47	PUSH(0x100 ** POP(0x0))
0xA48	SWAP1
0xA8C	DUP1
0xA8D	MSTORE(POP(0x0), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0xA42) / POP(@0xA47))
0xA90	PUSH(0x20 + POP(0x0))
0xA91	SWAP1
0xA92	DUP2
0xA93	MSTORE(POP(@0xA90), POP(0x3))
0xA99	PUSH(SHA3(0x0, 0x20 + POP(@0xA90)))
0xA9C	DUP2
0xA9D	DUP2
0xA9F	PUSH(SLOAD(POP(@0xA99)) + POP(@0xA35))
0xAA0	SWAP2
0xAA1	POP()
0xAA2	POP(0x0)
0xAA3	DUP2
0xAA4	SWAP1
0xAA5	SSTORE(POP(@0xA99), POP(@0xA9F))
0xAA6	POP()

:label52
# Stack: [[@0xA35 | 0x0] [@0x419 | @0x7B5] [:label33 | :label44] [0x0 | 0x0] [0x0 | 0x0] [@0x7B5 | @0x419] [:label22 | :label19] @0x33]
0xAA9	SWAP2
0xAAA	SWAP1
0xAAB	POP()
0xAAC	JUMP(POP())

:label53
# Stack: [@0x5AC 0x4 :label39 @0x5AC @0x5A8 0x4 [@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0xAAE	DUP2
0xAAF	PUSH(SLOAD(POP(0x4)))
0xAB0	DUP2
0xAB1	DUP4
0xAB2	SSTORE(POP(0x4), POP(@0x5AC))
0xAB3	DUP2
0xAB4	DUP2
0xABA	JUMPI(:label54, !POP(@0xAAF) > POP(@0x5AC))

# Stack: [@0xAAF @0x5AC 0x4 :label39 @0x5AC @0x5A8 0x4 [@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0xABB	DUP2
0xABC	DUP4
0xABF	MSTORE(0x0, POP(0x4))
0xAC4	PUSH(SHA3(0x0, 0x20))
0xAC5	SWAP2
0xAC6	DUP3
0xAC7	PUSH(POP(@0xAC4) + POP(@0xAAF))
0xAC8	SWAP2
0xAC9	PUSH(POP(@0xAC4) + POP(@0x5AC))
0xACA	PUSH(:label54)
0xACD	SWAP2
0xACE	SWAP1
0xAD2	JUMP(:label55)

:label54
# Stack: [[@0xAC7 | @0xAAF] @0x5AC 0x4 :label39 @0x5AC @0x5A8 0x4 [0x0 | @0x554] [0x0 | @0xA35] @0x429 :label19 @0x33]
0xAD5	POP()
0xAD6	POP()
0xAD7	POP()
0xAD8	JUMP(POP(:label39))

:label55
# Stack: [@0xAC9 @0xAC7 :label54 @0x5AC 0x4 :label39 @0x5AC @0x5A8 0x4 [@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0xADA	PUSH(:label58)
0xADD	SWAP2
0xADE	SWAP1

:label56
# Stack: [[@0xAC9 | @0xAF2] @0xAC7 :label58 :label54 @0x5AC 0x4 :label39 @0x5AC @0x5A8 0x4 [@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0xAE0	DUP1
0xAE1	DUP3
0xAE7	JUMPI(:label57, !(POP(@0xAC7) > POP()))

# Stack: [[@0xAC9 | @0xAF2] @0xAC7 :label58 :label54 @0x5AC 0x4 :label39 @0x5AC @0x5A8 0x4 [@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0xAEA	DUP1
0xAEB	PUSH(0x0)
0xAED	SWAP1
0xAEE	SSTORE(POP(), POP(0x0))
0xAEF	POP(0x0)
0xAF2	PUSH(0x1 + POP())
0xAF6	JUMP(:label56)

:label57
# Stack: [[@0xAF2 | @0xAC9] @0xAC7 :label58 :label54 @0x5AC 0x4 :label39 @0x5AC @0x5A8 0x4 [@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0xAF8	POP()
0xAF9	SWAP1
0xAFA	JUMP(POP(:label58))

:label58
# Stack: [@0xAC7 :label54 @0x5AC 0x4 :label39 @0x5AC @0x5A8 0x4 [@0x554 | 0x0] [@0xA35 | 0x0] @0x429 :label19 @0x33]
0xAFC	SWAP1
0xAFD	JUMP(POP(:label54))


