# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x6B6438CC == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0x9E9785AD == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xE97DCB62 == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label11, 0xFDD3A879 == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label12)
0x70	PUSH(:label13)
0x76	JUMP(:label9)

:label1
# Stack: [@0x13]
0x78	PUSH(:label12)
0x7D	PUSH(CALLDATALOAD(0x4))
0x80	PUSH(SLOAD(0x3))
0x88	PUSH(0x2 ** 0xA0 - 0x1)
0x89	SWAP1
0x8A	DUP2
0x8B	PUSH(POP(@0x88) & POP(@0x80))
0x8C	PUSH(CALLER())
0x8D	SWAP1
0x8E	SWAP1
0x8F	SWAP2
0x96	JUMPI(:label2, !(POP(@0x8C) & POP(@0x88) == POP(@0x8B)))

# Stack: [@0x7D :label12 @0x13]
0x97	PUSH(0x3)
0x99	DUP1
0xA5	DUP2
0xA6	PUSH(POP(@0x7D) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x3)))
0xA7	SWAP1
0xA8	SSTORE(POP(0x3), POP(@0xA6))

:label2
# Stack: [@0x7D :label12 @0x13]
0xAA	POP()
0xAB	JUMP(POP(:label12))

:label3
# Stack: [@0x13]
0xAD	PUSH(:label14)
0xB2	PUSH(SLOAD(0x1))
0xB3	DUP2
0xB4	JUMP(POP(:label14))

:label4
# Stack: [@0x13]
0xB6	PUSH(:label15)
0xC4	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x3))
0xC5	DUP2
0xC6	JUMP(POP(:label15))

:label5
# Stack: [@0x13]
0xC8	PUSH(:label14)
0xCD	PUSH(SLOAD(0x4))
0xCE	DUP2
0xCF	JUMP(POP(:label14))

:label6
# Stack: [@0x13]
0xD1	PUSH(:label16)
0xD6	PUSH(CALLDATALOAD(0x4))
0xD7	PUSH(0x0)
0xD9	DUP1
0xDA	PUSH(SLOAD(POP(0x0)))
0xDB	DUP2
0xDC	SWAP1
0xDD	DUP2
0xE3	JUMPI(0x2, !(POP(@0xD6) < POP(@0xDA)))

# Stack: [@0xD6 0x0 @0xD6 :label16 @0x13]
0xE4	POP()
0xE5	DUP1
0xE6	MSTORE(POP(0x0), POP(0x0))
0xE9	PUSH(0x2 * POP(@0xD6))
0x10B	DUP1
0x10D	PUSH(SLOAD(POP(@0xE9) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0x10E	PUSH(0x0)
0x110	DUP1
0x117	DUP1
0x118	CODECOPY(POP(0x0), 0x3EB, 0x20)
0x119	DUP1
0x11A	PUSH(MLOAD(POP(0x0)))
0x11B	SWAP1
0x11C	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x11D	SWAP1
0x11E	SWAP1
0x11F	SWAP2
0x121	PUSH(SLOAD(POP(@0x11A) + POP(@0xE9)))
0x129	PUSH(0x2 ** 0xA0 - 0x1)
0x12A	SWAP2
0x12B	SWAP1
0x12C	SWAP2
0x12D	PUSH(POP(@0x129) & POP(@0x10D))
0x12E	SWAP1
0x12F	DUP3
0x130	JUMP(POP(:label16))

:label7
# Stack: [@0x13]
0x132	PUSH(:label14)
0x137	PUSH(SLOAD(0x2))
0x138	DUP2
0x139	JUMP(POP(:label14))

:label8
# Stack: [@0x13]
0x13B	PUSH(:label12)

:label9
# Stack: [[:label13 | :label12] [:label12 | @0x13]]
0x13F	PUSH(0x0)
0x141	PUSH(0x0)
0x143	PUSH(0x0)
0x154	JUMPI(:label17, !(CALLVALUE() < 0x16345785D8A0000))

# Stack: [0x0 0x0 0x0 [:label13 | :label12] [:label12 | @0x13]]
0x157	PUSH(MLOAD(0x40))
0x161	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x162	SWAP1
0x163	DUP3
0x164	SWAP1
0x165	PUSH(CALLVALUE())
0x166	SWAP1
0x167	DUP3
0x168	DUP2
0x169	DUP2
0x16A	DUP2
0x16B	DUP6
0x16C	DUP9
0x16D	DUP4
0x16E	PUSH(CALL(POP(0x0), POP(@0x161), POP(@0x165), POP(@0x157), POP(0x0), POP(@0x157), POP(0x0)))
0x16F	POP()
0x170	POP()
0x171	POP()
0x172	POP()
0x173	POP()

:label10
# Stack: [[0x0 | @0x380] [0x0 | @0x23D] [0x0 | 0x1BC16D674EC80000 | @0x236] [:label13 | :label12] [:label12 | @0x13]]
0x175	POP()
0x176	POP()
0x177	POP()
0x178	JUMP(POP())

:label11
# Stack: [@0x13]
0x17D	PUSH(0x3)
0x17F	DUP1
0x18C	PUSH(CALLER() | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x3)))
0x18D	SWAP1
0x18E	SSTORE(POP(0x3), POP(@0x18C))
0x18F	JUMP(:label12)

:label12
# Stack: []
0x191	STOP()

:label13
# Stack: [:label12]
0x193	JUMP(POP(:label12))

:label14
# Stack: [[@0x137 | @0xCD | @0xB2] [:label14 | :label14 | :label14] @0x13]
0x195	PUSH(0x40)
0x197	DUP1
0x198	PUSH(MLOAD(POP(0x40)))
0x199	SWAP2
0x19A	DUP3
0x19B	MSTORE(POP(@0x198), POP())
0x19C	PUSH(MLOAD(POP(0x40)))
0x19D	SWAP1
0x19E	DUP2
0x19F	SWAP1
0x1A3	PUSH(0x20 + POP(@0x198) - POP(@0x19C))
0x1A4	SWAP1
0x1A5	RETURN(POP(@0x19C), POP(@0x1A3))

:label15
# Stack: [@0xC4 :label15 @0x13]
0x1A7	PUSH(0x40)
0x1A9	DUP1
0x1AA	PUSH(MLOAD(POP(0x40)))
0x1B2	PUSH(0x2 ** 0xA0 - 0x1)
0x1B3	SWAP3
0x1B4	SWAP1
0x1B5	SWAP3
0x1B7	DUP2
0x1B8	MSTORE(POP(@0x1AA), POP(@0x1B2) & POP(@0xC4))
0x1B9	PUSH(MLOAD(POP(0x40)))
0x1BA	SWAP1
0x1BB	DUP2
0x1BC	SWAP1
0x1C0	PUSH(0x20 + POP(@0x1AA) - POP(@0x1B9))
0x1C1	SWAP1
0x1C2	RETURN(POP(@0x1B9), POP(@0x1C0))

:label16
# Stack: [@0x121 @0x12D :label16 @0x13]
0x1C6	PUSH(MLOAD(0x40))
0x1C7	DUP1
0x1C8	DUP4
0x1D2	DUP1
0x1D3	MSTORE(POP(@0x1C6), 0x2 ** 0xA0 - 0x1 & POP(@0x12D))
0x1D6	PUSH(0x20 + POP(@0x1C6))
0x1D7	DUP3
0x1D8	DUP2
0x1D9	MSTORE(POP(@0x1D6), POP(@0x121))
0x1DC	PUSH(0x20 + POP(@0x1D6))
0x1DD	SWAP3
0x1DE	POP()
0x1DF	POP()
0x1E0	POP()
0x1E3	PUSH(MLOAD(0x40))
0x1E4	DUP1
0x1E5	SWAP2
0x1E6	PUSH(POP(@0x1DC) - POP(@0x1E3))
0x1E7	SWAP1
0x1E8	RETURN(POP(@0x1E3), POP(@0x1E6))

:label17
# Stack: [0x0 0x0 0x0 [:label13 | :label12] [:label12 | @0x13]]
0x1F9	JUMPI(:label18, !(CALLVALUE() > 0x1BC16D674EC80000))

# Stack: [0x0 0x0 0x0 [:label13 | :label12] [:label12 | @0x13]]
0x1FC	PUSH(MLOAD(0x40))
0x206	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x207	SWAP1
0x208	PUSH(0x0)
0x20A	SWAP1
0x216	PUSH(CALLVALUE() + ~0x1BC16D674EC7FFFF)
0x217	SWAP1
0x218	DUP3
0x219	DUP2
0x21A	DUP2
0x21B	DUP2
0x21C	DUP6
0x21D	DUP9
0x21E	DUP4
0x21F	PUSH(CALL(POP(0x0), POP(@0x206), POP(@0x216), POP(@0x1FC), POP(0x0), POP(@0x1FC), POP(0x0)))
0x220	POP()
0x221	PUSH(0x1BC16D674EC80000)
0x22A	SWAP7
0x22B	POP()
0x22C	PUSH(:label19)
0x22F	SWAP4
0x230	POP()
0x231	POP()
0x232	POP()
0x233	POP()
0x234	JUMP(POP(:label19))

:label18
# Stack: [0x0 0x0 0x0 [:label13 | :label12] [:label12 | @0x13]]
0x236	PUSH(CALLVALUE())
0x237	SWAP3
0x238	POP()

:label19
# Stack: [0x0 0x0 [0x1BC16D674EC80000 | @0x236] [:label13 | :label12] [:label12 | @0x13]]
0x23A	PUSH(0x0)
0x23C	DUP1
0x23D	PUSH(SLOAD(POP(0x0)))
0x240	DUP1
0x241	PUSH(POP(@0x23D) + 0x1)
0x242	DUP1
0x243	DUP4
0x244	SSTORE(POP(0x0), POP(@0x241))
0x245	SWAP1
0x246	SWAP4
0x247	POP()
0x248	SWAP1
0x249	DUP2
0x24A	DUP5
0x24B	DUP1
0x24C	PUSH(!POP(@0x23D))
0x24D	DUP2
0x24E	SWAP1
0x253	JUMPI(:label21, POP(@0x24C) > POP(@0x241))

# Stack: [@0x23D @0x241 0x0 @0x241 0x0 @0x23D [@0x236 | 0x1BC16D674EC80000] [:label13 | :label12] [:label12 | @0x13]]
0x256	PUSH(0x2 * POP(@0x23D))
0x257	DUP1
0x25B	DUP2
0x25E	MSTORE(0x0, POP(0x0))
0x263	PUSH(SHA3(0x0, 0x20))
0x264	SWAP1
0x265	DUP2
0x266	PUSH(POP(@0x263) + POP(@0x256))
0x267	SWAP1
0x268	PUSH(POP(@0x263) + 0x2 * POP(@0x241))
0x269	PUSH(:label21)
0x26C	SWAP2
0x26D	SWAP1

:label20
# Stack: [[@0x268 | @0x28C] @0x266 :label21 @0x241 0x0 @0x241 0x0 @0x23D [0x1BC16D674EC80000 | @0x236] [:label13 | :label12] [@0x13 | :label12]]
0x26F	DUP1
0x270	DUP3
0x276	JUMPI(:label23, !(POP(@0x266) > POP()))

# Stack: [[@0x268 | @0x28C] @0x266 :label21 @0x241 0x0 @0x241 0x0 @0x23D [0x1BC16D674EC80000 | @0x236] [:label13 | :label12] [:label12 | @0x13]]
0x277	DUP1
0x283	DUP1
0x284	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x285	PUSH(0x0)
0x287	PUSH(0x1)
0x289	SWAP1
0x28A	SWAP1
0x28B	SWAP2
0x28C	PUSH(POP(0x1) + POP())
0x28D	SWAP1
0x28E	DUP2
0x28F	SSTORE(POP(@0x28C), POP(0x0))
0x293	JUMP(:label20)

:label21
# Stack: [[@0x266 | @0x23D] @0x241 0x0 @0x241 0x0 @0x23D [0x1BC16D674EC80000 | @0x236] [:label12 | :label13] [:label12 | @0x13]]
0x295	POP()
0x296	POP()
0x297	POP()
0x298	POP()
0x299	PUSH(CALLER())
0x29A	PUSH(0x0)
0x29E	POP(0x0)
0x29F	DUP4
0x2A0	DUP2
0x2A2	DUP1
0x2A8	JUMPI(0x2, !(POP(@0x23D) < SLOAD(POP(0x0))))

# Stack: [@0x23D 0x0 @0x299 0x0 @0x23D [0x1BC16D674EC80000 | @0x236] [:label13 | :label12] [:label12 | @0x13]]
0x2A9	DUP2
0x2AA	DUP1
0x2AB	MSTORE(POP(0x0), POP(0x0))
0x2D0	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x23D))
0x2D1	DUP1
0x2DC	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2D0)))
0x2DD	SWAP1
0x2DE	SWAP3
0x2DF	PUSH(POP(@0x299) | POP(@0x2DC))
0x2E0	SWAP1
0x2E1	SWAP2
0x2E2	SSTORE(POP(@0x2D0), POP(@0x2DF))
0x2E3	DUP1
0x2E4	PUSH(SLOAD(POP(0x0)))
0x2E5	DUP4
0x2E6	SWAP1
0x2E7	SWAP1
0x2E8	DUP5
0x2E9	SWAP1
0x2EA	DUP2
0x2F0	JUMPI(0x2, !(POP(@0x23D) < POP(@0x2E4)))

# Stack: [@0x23D 0x0 [0x1BC16D674EC80000 | @0x236] 0x0 @0x23D [0x1BC16D674EC80000 | @0x236] [:label13 | :label12] [:label12 | @0x13]]
0x2F1	PUSH(0x2)
0x2F3	SWAP1
0x2F4	DUP2
0x2F6	PUSH(0x0)
0x2F8	DUP1
0x2FF	DUP1
0x300	CODECOPY(POP(0x0), 0x3EB, 0x20)
0x301	DUP1
0x302	PUSH(MLOAD(POP(0x0)))
0x303	SWAP1
0x304	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x305	PUSH(POP(@0x302) + POP(0x2) * POP(@0x23D))
0x306	SWAP3
0x307	SWAP1
0x308	SWAP3
0x309	SSTORE(POP(@0x305), POP())
0x30A	POP()
0x30B	DUP1
0x30D	DUP4
0x30E	PUSH(POP() + SLOAD(POP(0x2)))
0x30F	SWAP1
0x310	SSTORE(POP(0x2), POP(@0x30E))

:label22
# Stack: [[0x0 | @0x380] @0x23D [@0x236 | 0x1BC16D674EC80000] [:label13 | :label12] [@0x13 | :label12]]
0x314	PUSH(SLOAD(0x1))
0x315	PUSH(0x0)
0x317	DUP1
0x318	PUSH(SLOAD(POP(0x0)))
0x319	PUSH(0x64)
0x31B	SWAP2
0x31C	SWAP1
0x31D	DUP2
0x323	JUMPI(0x2, !(POP(@0x314) < POP(@0x318)))

# Stack: [@0x314 0x0 0x64 [0x0 | @0x380] @0x23D [0x1BC16D674EC80000 | @0x236] [:label12 | :label13] [:label12 | @0x13]]
0x324	SWAP1
0x325	DUP1
0x326	MSTORE(POP(0x0), POP(0x0))
0x327	PUSH(0x2)
0x329	DUP1
0x32A	PUSH(SLOAD(POP(0x2)))
0x32B	SWAP2
0x32D	PUSH(0x0)
0x32F	DUP1
0x336	DUP1
0x337	CODECOPY(POP(0x0), 0x3EB, 0x20)
0x338	DUP1
0x339	PUSH(MLOAD(POP(0x0)))
0x33A	SWAP1
0x33B	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x33D	PUSH(SLOAD(POP(@0x339) + POP(@0x314) * POP(0x2)))
0x33E	SWAP2
0x33F	SWAP1
0x340	SWAP2
0x344	PUSH(0x73 * POP(@0x33D) / POP(0x64))
0x345	SWAP1
0x34B	JUMPI(:label10, !(POP(@0x32A) > POP(@0x344)))

# Stack: [[0x0 | @0x380] @0x23D [0x1BC16D674EC80000 | @0x236] [:label13 | :label12] [:label12 | @0x13]]
0x34E	PUSH(SLOAD(0x1))
0x34F	PUSH(0x0)
0x351	DUP1
0x352	PUSH(SLOAD(POP(0x0)))
0x353	PUSH(0x64)
0x355	SWAP2
0x356	SWAP1
0x357	DUP2
0x35D	JUMPI(0x2, !(POP(@0x34E) < POP(@0x352)))

# Stack: [@0x34E 0x0 0x64 [0x0 | @0x380] @0x23D [0x1BC16D674EC80000 | @0x236] [:label13 | :label12] [:label12 | @0x13]]
0x35E	DUP2
0x35F	PUSH(SLOAD(POP(0x0)))
0x362	PUSH(SLOAD(0x4))
0x363	PUSH(0x2)
0x365	SWAP2
0x366	SWAP1
0x367	SWAP2
0x369	PUSH(0x0)
0x36B	DUP1
0x372	DUP1
0x373	CODECOPY(POP(0x0), 0x3EB, 0x20)
0x374	DUP1
0x375	PUSH(MLOAD(POP(0x0)))
0x376	SWAP1
0x377	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x379	PUSH(SLOAD(POP(@0x375) + POP(0x2) * POP(@0x34E)))
0x37A	SWAP3
0x37B	SWAP1
0x37C	SWAP4
0x380	PUSH(0x73 * POP(@0x379) / POP(0x64))
0x381	SWAP4
0x382	POP()
0x383	SWAP1
0x384	SWAP2
0x385	DUP2
0x38B	JUMPI(0x2, !(POP(@0x362) < POP(@0x35F)))

# Stack: [@0x362 0x0 @0x380 @0x23D [@0x236 | 0x1BC16D674EC80000] [:label13 | :label12] [:label12 | @0x13]]
0x38E	PUSH(MLOAD(0x40))
0x38F	PUSH(0x2)
0x391	SWAP2
0x392	SWAP1
0x393	SWAP2
0x3C0	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP(@0x362)))
0x3C1	SWAP2
0x3C2	SWAP1
0x3C3	DUP4
0x3C4	SWAP1
0x3C5	DUP3
0x3C6	DUP2
0x3C7	DUP2
0x3C8	DUP2
0x3C9	DUP6
0x3CA	DUP9
0x3CB	DUP4
0x3CC	PUSH(CALL(POP(0x0), POP(@0x3C0), POP(@0x380), POP(@0x38E), POP(0x0), POP(@0x38E), POP(0x0)))
0x3CD	POP()
0x3CE	POP()
0x3CF	PUSH(0x2)
0x3D1	DUP1
0x3D2	PUSH(SLOAD(POP(0x2)))
0x3D3	SWAP2
0x3D4	SWAP1
0x3D5	SWAP2
0x3D6	PUSH(POP(@0x3D2) - POP(@0x380))
0x3D7	SWAP1
0x3D8	SSTORE(POP(0x2), POP(@0x3D6))
0x3D9	POP()
0x3DA	POP()
0x3DB	PUSH(0x1)
0x3DD	DUP1
0x3DF	DUP1
0x3E0	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x3E1	SWAP1
0x3E2	SSTORE(POP(0x1), POP(@0x3E0))
0x3E6	JUMP(:label22)

:label23
# Stack: [[@0x28C | @0x268] @0x266 :label21 @0x241 0x0 @0x241 0x0 @0x23D [@0x236 | 0x1BC16D674EC80000] [:label13 | :label12] [:label12 | @0x13]]
0x3E8	POP()
0x3E9	SWAP1
0x3EA	JUMP(POP(:label21))


