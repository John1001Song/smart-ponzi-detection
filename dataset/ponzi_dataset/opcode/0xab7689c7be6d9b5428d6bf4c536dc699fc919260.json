# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x35C1D349 == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xC8796572 == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label10, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label13)
0x70	PUSH(:label9)
0x76	JUMP(:label11)

:label1
# Stack: [@0x13]
0x78	PUSH(:label13)
0x7D	PUSH(CALLDATALOAD(0x4))
0x80	PUSH(SLOAD(0x4))
0x88	PUSH(0x2 ** 0xA0 - 0x1)
0x89	SWAP1
0x8A	DUP2
0x8B	PUSH(POP(@0x88) & POP(@0x80))
0x8C	PUSH(CALLER())
0x8D	SWAP1
0x8E	SWAP1
0x8F	SWAP2
0x96	JUMPI(:label2, !(POP(@0x8C) & POP(@0x88) == POP(@0x8B)))

# Stack: [@0x7D :label13 @0x13]
0x97	PUSH(0x4)
0x99	DUP1
0xA5	DUP2
0xA6	PUSH(POP(@0x7D) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0xA7	SWAP1
0xA8	SSTORE(POP(0x4), POP(@0xA6))

:label2
# Stack: [@0x7D :label13 @0x13]
0xAA	POP()
0xAB	JUMP(POP(:label13))

:label3
# Stack: [@0x13]
0xAD	PUSH(:label14)
0xB2	PUSH(CALLDATALOAD(0x4))
0xB3	PUSH(0x0)
0xB5	DUP1
0xB6	PUSH(SLOAD(POP(0x0)))
0xB7	DUP2
0xB8	SWAP1
0xB9	DUP2
0xBF	JUMPI(0x2, !(POP(@0xB2) < POP(@0xB6)))

# Stack: [@0xB2 0x0 @0xB2 :label14 @0x13]
0xC0	POP()
0xC1	DUP1
0xC2	MSTORE(POP(0x0), POP(0x0))
0xEE	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(@0xB2)))
0xEF	DUP2
0xF0	JUMP(POP(:label14))

:label4
# Stack: [@0x13]
0xF2	PUSH(:label14)
0x100	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0x101	DUP2
0x102	JUMP(POP(:label14))

:label5
# Stack: [@0x13]
0x104	PUSH(:label15)
0x109	PUSH(SLOAD(0x2))
0x10A	DUP2
0x10B	JUMP(POP(:label15))

:label6
# Stack: [@0x13]
0x10D	PUSH(:label15)
0x112	PUSH(SLOAD(0x1))
0x113	DUP2
0x114	JUMP(POP(:label15))

:label7
# Stack: [@0x13]
0x116	PUSH(:label15)
0x11B	PUSH(SLOAD(0x3))
0x11C	DUP2
0x11D	JUMP(POP(:label15))

:label8
# Stack: [@0x13]
0x11F	PUSH(:label13)
0x124	PUSH(SLOAD(0x4))
0x12C	PUSH(0x2 ** 0xA0 - 0x1)
0x12D	SWAP1
0x12E	DUP2
0x12F	PUSH(POP(@0x12C) & POP(@0x124))
0x130	PUSH(CALLER())
0x131	SWAP1
0x132	SWAP1
0x133	SWAP2
0x13A	JUMPI(:label9, !(POP(@0x130) & POP(@0x12C) == POP(@0x12F)))

# Stack: [:label13 @0x13]
0x145	JUMPI(:label22, !(0x0 == SLOAD(0x2)))

:label9
# Stack: [[:label13 | :label13]]
0x147	JUMP(POP())

:label10
# Stack: [@0x13]
0x149	PUSH(:label13)

:label11
# Stack: [[:label9 | :label13] [:label13 | @0x13]]
0x14D	PUSH(0x8AC7230489E80000)
0x156	PUSH(0x0)
0x158	DUP1
0x159	PUSH(CALLVALUE())
0x15A	DUP3
0x15B	SWAP1
0x161	JUMPI(:label16, !(POP(@0x159) < POP(0x8AC7230489E80000)))

# Stack: [0x0 0x0 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x164	PUSH(MLOAD(0x40))
0x16E	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x16F	SWAP1
0x170	DUP3
0x171	SWAP1
0x172	PUSH(CALLVALUE())
0x173	SWAP1
0x174	DUP3
0x175	DUP2
0x176	DUP2
0x177	DUP2
0x178	DUP6
0x179	DUP9
0x17A	DUP4
0x17B	PUSH(CALL(POP(0x0), POP(@0x16E), POP(@0x172), POP(@0x164), POP(0x0), POP(@0x164), POP(0x0)))
0x17C	POP()
0x17D	POP()
0x17E	POP()
0x17F	POP()
0x180	POP()

:label12
# Stack: [[0x0 | @0x2F0] [0x0 | @0x1E7] 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x182	POP()
0x183	POP()
0x184	POP()
0x185	JUMP(POP())

:label13
# Stack: []
0x187	STOP()

:label14
# Stack: [[@0x100 | @0xEE] [:label14 | :label14] @0x13]
0x189	PUSH(0x40)
0x18B	DUP1
0x18C	PUSH(MLOAD(POP(0x40)))
0x194	PUSH(0x2 ** 0xA0 - 0x1)
0x195	SWAP3
0x196	SWAP1
0x197	SWAP3
0x199	DUP2
0x19A	MSTORE(POP(@0x18C), POP(@0x194) & POP())
0x19B	PUSH(MLOAD(POP(0x40)))
0x19C	SWAP1
0x19D	DUP2
0x19E	SWAP1
0x1A2	PUSH(0x20 + POP(@0x18C) - POP(@0x19B))
0x1A3	SWAP1
0x1A4	RETURN(POP(@0x19B), POP(@0x1A2))

:label15
# Stack: [[@0x109 | @0x11B | @0x112] [:label15 | :label15 | :label15] @0x13]
0x1A6	PUSH(0x40)
0x1A8	DUP1
0x1A9	PUSH(MLOAD(POP(0x40)))
0x1AA	SWAP2
0x1AB	DUP3
0x1AC	MSTORE(POP(@0x1A9), POP())
0x1AD	PUSH(MLOAD(POP(0x40)))
0x1AE	SWAP1
0x1AF	DUP2
0x1B0	SWAP1
0x1B4	PUSH(0x20 + POP(@0x1A9) - POP(@0x1AD))
0x1B5	SWAP1
0x1B6	RETURN(POP(@0x1AD), POP(@0x1B4))

:label16
# Stack: [0x0 0x0 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x1B8	DUP3
0x1BF	JUMPI(:label17, !(CALLVALUE() > POP(0x8AC7230489E80000)))

# Stack: [0x0 0x0 0x8AC7230489E80000 [:label13 | :label9] [:label13 | @0x13]]
0x1C2	PUSH(MLOAD(0x40))
0x1CC	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x1CD	SWAP1
0x1CE	PUSH(0x0)
0x1D0	SWAP1
0x1D1	PUSH(CALLVALUE())
0x1D2	DUP6
0x1D3	SWAP1
0x1D4	PUSH(POP(@0x1D1) - POP(0x8AC7230489E80000))
0x1D5	SWAP1
0x1D6	DUP3
0x1D7	DUP2
0x1D8	DUP2
0x1D9	DUP2
0x1DA	DUP6
0x1DB	DUP9
0x1DC	DUP4
0x1DD	PUSH(CALL(POP(0x0), POP(@0x1CC), POP(@0x1D4), POP(@0x1C2), POP(0x0), POP(@0x1C2), POP(0x0)))
0x1DE	POP()
0x1DF	POP()
0x1E0	POP()
0x1E1	POP()
0x1E2	POP()

:label17
# Stack: [0x0 0x0 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x1E4	PUSH(0x0)
0x1E6	DUP1
0x1E7	PUSH(SLOAD(POP(0x0)))
0x1EA	DUP1
0x1EB	PUSH(POP(@0x1E7) + 0x1)
0x1EC	DUP1
0x1ED	DUP4
0x1EE	SSTORE(POP(0x0), POP(@0x1EB))
0x1EF	SWAP1
0x1F0	SWAP4
0x1F1	POP()
0x1F2	SWAP1
0x1F3	DUP2
0x1F4	DUP5
0x1F5	DUP1
0x1F6	PUSH(!POP(@0x1E7))
0x1F7	DUP2
0x1F8	SWAP1
0x1FD	JUMPI(:label19, POP(@0x1F6) > POP(@0x1EB))

# Stack: [@0x1E7 @0x1EB 0x0 @0x1EB 0x0 @0x1E7 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x1FE	DUP2
0x1FF	DUP4
0x202	MSTORE(0x0, POP(0x0))
0x207	PUSH(SHA3(0x0, 0x20))
0x208	SWAP2
0x209	DUP3
0x20A	PUSH(POP(@0x207) + POP(@0x1E7))
0x20B	SWAP2
0x20C	PUSH(POP(@0x207) + POP(@0x1EB))
0x20D	PUSH(:label19)
0x210	SWAP2
0x211	SWAP1

:label18
# Stack: [[@0x20C | @0x22B] @0x20A :label19 @0x1EB 0x0 @0x1EB 0x0 @0x1E7 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x213	DUP1
0x214	DUP3
0x21A	JUMPI(:label21, !(POP(@0x20A) > POP()))

# Stack: [[@0x20C | @0x22B] @0x20A :label19 @0x1EB 0x0 @0x1EB 0x0 @0x1E7 0x8AC7230489E80000 [:label13 | :label9] [@0x13 | :label13]]
0x21B	DUP1
0x227	DUP1
0x228	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x22B	PUSH(0x1 + POP())
0x22F	JUMP(:label18)

:label19
# Stack: [[@0x20A | @0x1E7] @0x1EB 0x0 @0x1EB 0x0 @0x1E7 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x231	POP()
0x232	POP()
0x233	POP()
0x234	POP()
0x235	PUSH(CALLER())
0x236	PUSH(0x0)
0x23A	POP(0x0)
0x23B	DUP4
0x23C	DUP2
0x23E	DUP1
0x244	JUMPI(0x2, !(POP(@0x1E7) < SLOAD(POP(0x0))))

# Stack: [@0x1E7 0x0 @0x235 0x0 @0x1E7 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x245	SWAP1
0x246	DUP1
0x247	MSTORE(POP(0x0), POP(0x0))
0x269	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(@0x1E7))
0x26A	DUP1
0x275	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x269)))
0x276	SWAP1
0x277	SWAP2
0x278	PUSH(POP(@0x235) | POP(@0x275))
0x279	SWAP1
0x27A	SSTORE(POP(@0x269), POP(@0x278))
0x27B	PUSH(0x2)
0x27D	DUP1
0x27E	PUSH(SLOAD(POP(0x2)))
0x281	DUP4
0x282	PUSH(POP(0x8AC7230489E80000) / 0x64)
0x283	SWAP1
0x284	DUP2
0x285	PUSH(POP(@0x282) + POP(@0x27E))
0x286	SWAP2
0x287	DUP3
0x288	SWAP1
0x289	SSTORE(POP(0x2), POP(@0x285))
0x28A	PUSH(0x3)
0x28C	DUP1
0x28D	PUSH(SLOAD(POP(0x3)))
0x28E	PUSH(0x63)
0x290	SWAP2
0x291	SWAP1
0x292	SWAP3
0x293	PUSH(POP(0x63) * POP(@0x282))
0x294	SWAP1
0x295	SWAP2
0x296	PUSH(POP(@0x28D) + POP(@0x293))
0x297	SWAP1
0x298	SSTORE(POP(0x3), POP(@0x296))
0x29C	DUP4
0x2A0	PUSH(0x85 * POP(0x8AC7230489E80000) / 0x3E8)
0x2A1	SWAP1
0x2A6	JUMPI(:label20, POP(@0x285) < POP(@0x2A0))

# Stack: [0x0 @0x1E7 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x2A9	PUSH(SLOAD(0x4))
0x2AC	PUSH(MLOAD(0x40))
0x2AF	PUSH(SLOAD(0x2))
0x2B7	PUSH(0x2 ** 0xA0 - 0x1)
0x2B8	SWAP1
0x2B9	SWAP1
0x2BA	SWAP3
0x2BB	PUSH(POP(@0x2B7) & POP(@0x2A9))
0x2BC	SWAP2
0x2BD	PUSH(0x0)
0x2BF	SWAP2
0x2C0	DUP3
0x2C1	DUP2
0x2C2	DUP2
0x2C3	DUP2
0x2C4	DUP6
0x2C5	DUP9
0x2C6	DUP4
0x2C7	PUSH(CALL(POP(0x0), POP(@0x2BB), POP(@0x2AF), POP(@0x2AC), POP(0x0), POP(@0x2AC), POP(0x0)))
0x2C8	POP()
0x2C9	POP()
0x2CA	POP()
0x2CD	SSTORE(0x2, POP(0x0))
0x2CE	POP()

:label20
# Stack: [[0x0 | @0x2F0] @0x1E7 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x2D3	PUSH(SLOAD(0x3))
0x2D6	DUP3
0x2DA	PUSH(0x85 * POP(0x8AC7230489E80000) / 0x64)
0x2DB	SWAP1
0x2E1	JUMPI(:label12, !(POP(@0x2D3) > POP(@0x2DA)))

# Stack: [[0x0 | @0x2F0] @0x1E7 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x2E2	POP()
0x2E5	PUSH(SLOAD(0x1))
0x2E6	PUSH(0x0)
0x2E8	DUP1
0x2E9	PUSH(SLOAD(POP(0x0)))
0x2EC	DUP4
0x2F0	PUSH(0x85 * POP(0x8AC7230489E80000) / 0x64)
0x2F1	SWAP2
0x2F2	SWAP1
0x2F3	DUP2
0x2F9	JUMPI(0x2, !(POP(@0x2E5) < POP(@0x2E9)))

# Stack: [@0x2E5 0x0 @0x2F0 @0x1E7 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x2FA	DUP2
0x2FB	DUP1
0x2FC	MSTORE(POP(0x0), POP(0x0))
0x2FF	PUSH(MLOAD(0x40))
0x300	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563)
0x321	SWAP2
0x322	SWAP1
0x323	SWAP2
0x32E	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563) + POP(@0x2E5)))
0x32F	SWAP2
0x330	SWAP1
0x331	DUP4
0x332	SWAP1
0x333	DUP3
0x334	DUP2
0x335	DUP2
0x336	DUP2
0x337	DUP6
0x338	DUP9
0x339	DUP4
0x33A	PUSH(CALL(POP(0x0), POP(@0x32E), POP(@0x2F0), POP(@0x2FF), POP(0x0), POP(@0x2FF), POP(0x0)))
0x33B	POP()
0x33C	POP()
0x33D	PUSH(0x3)
0x33F	DUP1
0x340	PUSH(SLOAD(POP(0x3)))
0x341	SWAP2
0x342	SWAP1
0x343	SWAP2
0x344	PUSH(POP(@0x340) - POP(@0x2F0))
0x345	SWAP1
0x346	SSTORE(POP(0x3), POP(@0x344))
0x347	POP()
0x348	POP()
0x349	PUSH(0x1)
0x34B	DUP1
0x34D	DUP1
0x34E	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x34F	SWAP1
0x350	SSTORE(POP(0x1), POP(@0x34E))
0x354	JUMP(:label20)

:label21
# Stack: [[@0x22B | @0x20C] @0x20A :label19 @0x1EB 0x0 @0x1EB 0x0 @0x1E7 0x8AC7230489E80000 [:label9 | :label13] [:label13 | @0x13]]
0x356	POP()
0x357	SWAP1
0x358	JUMP(POP(:label19))

:label22
# Stack: [:label13 @0x13]
0x35C	PUSH(SLOAD(0x4))
0x35F	PUSH(SLOAD(0x2))
0x362	PUSH(MLOAD(0x40))
0x36A	PUSH(0x2 ** 0xA0 - 0x1)
0x36B	SWAP1
0x36C	SWAP1
0x36D	SWAP3
0x36E	PUSH(POP(@0x36A) & POP(@0x35C))
0x36F	SWAP2
0x370	PUSH(0x0)
0x372	SWAP2
0x373	SWAP1
0x374	DUP3
0x375	DUP2
0x376	DUP2
0x377	DUP2
0x378	DUP6
0x379	DUP9
0x37A	DUP4
0x37B	PUSH(CALL(POP(0x0), POP(@0x36E), POP(@0x35F), POP(@0x362), POP(0x0), POP(@0x362), POP(0x0)))
0x37C	POP()
0x37D	POP()
0x37E	POP()
0x381	SSTORE(0x2, POP(0x0))
0x382	POP()
0x383	JUMP(POP(:label13))


