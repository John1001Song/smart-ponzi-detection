# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label2, POP(@0x13) == 0x30677B83)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label5, 0x6A1DB1BF == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label6, 0x7FEF036E == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label7, 0x8A65D874 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label9, 0xA6F9DAE1 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label11, 0xCED92670 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label13, 0xDA3C300D == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label14, 0xF67ABD87 == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label16)
0x70	PUSH(:label1)
0x82	JUMPI(:label21, !(CALLVALUE() < 0xDE0B6B3A7640000))

# Stack: [:label1 :label16]
0x85	PUSH(MLOAD(0x40))
0x8F	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x90	SWAP1
0x91	PUSH(0x0)
0x93	SWAP1
0x94	PUSH(CALLVALUE())
0x95	SWAP1
0x96	DUP3
0x97	DUP2
0x98	DUP2
0x99	DUP2
0x9A	DUP6
0x9B	DUP9
0x9C	DUP4
0x9D	PUSH(CALL(POP(0x0), POP(@0x8F), POP(@0x94), POP(@0x85), POP(0x0), POP(@0x85), POP(0x0)))
0x9E	POP()
0x9F	POP()
0xA0	POP()
0xA1	POP()
0xA2	POP()

:label1
# Stack: [[:label1 | :label16]]
0xA4	JUMP(POP())

:label2
# Stack: [@0x13]
0xA6	PUSH(0x40)
0xA8	DUP1
0xA9	PUSH(MLOAD(POP(0x40)))
0xAA	PUSH(0x20)
0xAC	DUP1
0xAD	DUP3
0xAF	DUP3
0xB0	MSTORE(POP(0x40), POP(@0xA9) + POP(0x20))
0xB1	PUSH(0x0)
0xB3	SWAP1
0xB4	SWAP2
0xB5	MSTORE(POP(@0xA9), POP(0x0))
0xB6	DUP2
0xB7	PUSH(MLOAD(POP(0x40)))
0xBA	PUSH(SLOAD(0x3))
0xBD	DUP2
0xBF	DUP4
0xC0	MSTORE(POP(0x40), POP(@0xB7) + 0x80)
0xC3	DUP2
0xC4	MSTORE(POP(@0xB7), 0x43)
0xC5	PUSH(0x5468652063757272656E74206D756C7469706C696572206170706C6965642074)
0xE6	SWAP3
0xE7	DUP3
0xE8	PUSH(POP(@0xB7) + POP(0x20))
0xE9	SWAP3
0xEA	SWAP1
0xEB	SWAP3
0xEC	MSTORE(POP(@0xE8), POP(0x5468652063757272656E74206D756C7469706C696572206170706C6965642074))
0xED	PUSH(0x6F20616C6C206465706F736974732E204D696E20313130252C206D6178203135)
0x10E	SWAP3
0x10F	DUP2
0x110	PUSH(POP(@0xB7) + POP(0x40))
0x111	SWAP3
0x112	SWAP1
0x113	SWAP3
0x114	MSTORE(POP(@0x110), POP(0x6F20616C6C206465706F736974732E204D696E20313130252C206D6178203135))
0x138	DUP2
0x13A	MSTORE(POP(@0xB7) + 0x60, 0x30252E0000000000000000000000000000000000000000000000000000000000)
0x13B	SWAP1

:label3
# Stack: [[@0x1F3 | @0xB7 | @0x359] [@0xBA | @0x35C | @0x1F6] @0x13]
0x13F	PUSH(MLOAD(0x40))
0x140	DUP1
0x141	DUP4
0x142	DUP2
0x143	MSTORE(POP(@0x13F), POP())
0x146	PUSH(0x20 + POP(@0x13F))
0x147	DUP1
0x14A	PUSH(0x20 + POP(@0x146))
0x14B	DUP3
0x14C	DUP2
0x14E	DUP2
0x14F	MSTORE(POP(@0x146), POP(@0x14A) - POP(@0x13F))
0x150	DUP4
0x151	DUP2
0x152	DUP2
0x154	DUP1
0x155	MSTORE(POP(@0x14A), MLOAD(POP()))
0x158	PUSH(0x20 + POP(@0x14A))
0x159	SWAP2
0x15A	POP()
0x15B	DUP1
0x15C	PUSH(MLOAD(POP()))
0x15D	SWAP1
0x160	PUSH(0x20 + POP())
0x161	SWAP1
0x162	DUP1
0x163	DUP4
0x164	DUP4
0x165	DUP3
0x166	SWAP1
0x16D	DUP2
0x178	PUSH(CALL(0x3 + 0xF * (0x1F + POP(@0x15C)) / 0x20, 0x4, 0x0, POP(@0x160), POP(@0x15C), POP(@0x158), POP(@0x15C)))
0x179	POP()
0x17A	SWAP1
0x17B	POP()
0x17C	SWAP1
0x17D	DUP2
0x17E	PUSH(POP(@0x15C) + POP(@0x158))
0x17F	SWAP1
0x182	PUSH(0x1F & POP(@0x15C))
0x183	DUP1
0x188	JUMPI(:label4, !POP(@0x182))

# Stack: [@0x182 @0x17E @0x146 @0x13F [@0x359 | @0x1F3 | @0xB7] [@0x35C | @0x1F6 | @0xBA] @0x13]
0x189	DUP1
0x18A	DUP3
0x18B	PUSH(POP(@0x17E) - POP(@0x182))
0x18C	DUP1
0x190	DUP2
0x19B	DUP1
0x19C	MSTORE(POP(@0x18B), ~(0x100 ** (0x20 - POP(@0x182)) - 0x1) & MLOAD(POP(@0x18B)))
0x19F	PUSH(0x20 + POP(@0x18B))
0x1A0	SWAP2
0x1A1	POP()

:label4
# Stack: [@0x182 [@0x19F | @0x17E] @0x146 @0x13F [@0x1F3 | @0xB7 | @0x359] [@0xBA | @0x35C | @0x1F6] @0x13]
0x1A3	POP()
0x1A4	SWAP4
0x1A5	POP()
0x1A6	POP()
0x1A7	POP()
0x1A8	POP()
0x1AB	PUSH(MLOAD(0x40))
0x1AC	DUP1
0x1AD	SWAP2
0x1AE	PUSH(POP() - POP(@0x1AB))
0x1AF	SWAP1
0x1B0	RETURN(POP(@0x1AB), POP(@0x1AE))

:label5
# Stack: [@0x13]
0x1B2	PUSH(:label16)
0x1B7	PUSH(CALLDATALOAD(0x4))
0x1BA	PUSH(SLOAD(0x0))
0x1C2	PUSH(0x2 ** 0xA0 - 0x1)
0x1C3	SWAP1
0x1C4	DUP2
0x1C5	PUSH(POP(@0x1C2) & POP(@0x1BA))
0x1C6	PUSH(CALLER())
0x1C7	SWAP1
0x1C8	SWAP1
0x1C9	SWAP2
0x1D0	JUMPI(:label10, !(POP(@0x1C6) & POP(@0x1C2) == POP(@0x1C5)))

# Stack: [@0x1B7 :label16 @0x13]
0x1D3	PUSH(SLOAD(0x2))
0x1D4	PUSH(0x5)
0x1D6	SWAP1
0x1DC	JUMPI(:label26, !(POP(@0x1D3) > POP(0x5)))

# Stack: [@0x1B7 :label16 @0x13]
0x1E0	JUMP(0x2)

:label6
# Stack: [@0x13]
0x1E2	PUSH(0x40)
0x1E4	DUP1
0x1E5	PUSH(MLOAD(POP(0x40)))
0x1E6	PUSH(0x20)
0x1E8	DUP1
0x1E9	DUP3
0x1EB	DUP3
0x1EC	MSTORE(POP(0x40), POP(@0x1E5) + POP(0x20))
0x1ED	PUSH(0x0)
0x1EF	SWAP1
0x1F0	SWAP2
0x1F1	MSTORE(POP(@0x1E5), POP(0x0))
0x1F2	DUP2
0x1F3	PUSH(MLOAD(POP(0x40)))
0x1F6	PUSH(SLOAD(0x5))
0x1F7	DUP2
0x1F8	DUP5
0x1F9	PUSH(POP(0x40) + POP(@0x1F3))
0x1FA	SWAP1
0x1FB	SWAP4
0x1FC	MSTORE(POP(0x40), POP(@0x1F9))
0x1FF	DUP1
0x200	MSTORE(POP(@0x1F3), 0x17)
0x201	PUSH(0x546865206E756D626572206F66206465706F736974732E000000000000000000)
0x222	SWAP2
0x223	DUP2
0x224	PUSH(POP(@0x1F3) + POP(0x20))
0x225	SWAP2
0x226	SWAP1
0x227	SWAP2
0x228	MSTORE(POP(@0x224), POP(0x546865206E756D626572206F66206465706F736974732E000000000000000000))
0x22C	JUMP(:label3)

:label7
# Stack: [@0x13]
0x22E	PUSH(:label17)
0x233	PUSH(CALLDATALOAD(0x4))
0x234	PUSH(0x40)
0x236	DUP1
0x237	PUSH(MLOAD(POP(0x40)))
0x238	PUSH(0x20)
0x23A	DUP1
0x23B	DUP3
0x23D	DUP3
0x23E	MSTORE(POP(0x40), POP(@0x237) + POP(0x20))
0x23F	PUSH(0x0)
0x241	DUP1
0x242	DUP4
0x243	MSTORE(POP(@0x237), POP(0x0))
0x24B	PUSH(0x2 ** 0xA0 - 0x1)
0x24C	DUP6
0x24D	DUP2
0x24F	DUP2
0x250	MSTORE(POP(0x0), POP(@0x24B) & POP(@0x233))
0x251	PUSH(0x4)
0x253	SWAP1
0x254	SWAP3
0x255	MSTORE(POP(0x20), POP(0x4))
0x256	SWAP3
0x257	DUP4
0x25A	DUP3
0x25B	SWAP2
0x25C	SWAP1
0x25E	DUP2
0x263	JUMPI(:label8, POP(0x0) == POP(@0x24B) & SLOAD(SHA3(POP(0x0), POP(0x40))))

# Stack: [@0x237 0x0 0x0 @0x233 :label17 @0x13]
0x264	POP()
0x265	POP()
0x266	PUSH(0x40)
0x268	SWAP1
0x269	DUP2
0x26A	SWAP1
0x26B	PUSH(SHA3(POP(0x0), POP(0x40)))
0x26E	DUP1
0x270	PUSH(SLOAD(POP(@0x26B) + 0x2))
0x271	PUSH(0x1)
0x273	SWAP2
0x274	SWAP1
0x275	SWAP2
0x277	PUSH(SLOAD(POP(0x1) + POP(@0x26B)))
0x278	DUP3
0x279	PUSH(MLOAD(POP(0x40)))
0x27C	DUP1
0x27E	DUP4
0x27F	MSTORE(POP(0x40), POP(@0x279) + 0x60)
0x282	DUP1
0x283	MSTORE(POP(@0x279), 0x2E)
0x2A7	DUP1
0x2A9	MSTORE(POP(@0x279) + 0x20, 0x55736572732073746174733A20746F74616C206465706F736974732C20706179)
0x2AA	PUSH(0x6F7574732072656365697665642E000000000000000000000000000000000000)
0x2CB	SWAP4
0x2CC	DUP2
0x2CD	PUSH(POP(@0x279) + POP(0x40))
0x2CE	SWAP4
0x2CF	SWAP1
0x2D0	SWAP4
0x2D1	MSTORE(POP(@0x2CD), POP(0x6F7574732072656365697665642E000000000000000000000000000000000000))
0x2D2	SWAP2

:label8
# Stack: [[@0x279 | @0x237] [@0x270 | 0x0] [@0x277 | 0x0] @0x233 :label17 @0x13]
0x2D4	SWAP2
0x2D5	SWAP4
0x2D6	SWAP1
0x2D7	SWAP3
0x2D8	POP()
0x2D9	JUMP(POP(:label17))

:label9
# Stack: [@0x13]
0x2DB	PUSH(:label16)
0x2E0	PUSH(CALLDATALOAD(0x4))
0x2E3	PUSH(SLOAD(0x0))
0x2EB	PUSH(0x2 ** 0xA0 - 0x1)
0x2EC	SWAP1
0x2ED	DUP2
0x2EE	PUSH(POP(@0x2EB) & POP(@0x2E3))
0x2EF	PUSH(CALLER())
0x2F0	SWAP1
0x2F1	SWAP1
0x2F2	SWAP2
0x2F9	JUMPI(:label10, !(POP(@0x2EF) & POP(@0x2EB) == POP(@0x2EE)))

# Stack: [@0x2E0 :label16 @0x13]
0x2FA	PUSH(0x0)
0x2FC	DUP1
0x308	DUP2
0x309	PUSH(POP(@0x2E0) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x0)))
0x30A	SWAP1
0x30B	SSTORE(POP(0x0), POP(@0x309))

:label10
# Stack: [[@0x315 | @0x2E0 | @0x1B7] [:label16 | :label16 | :label16] @0x13]
0x30D	POP()
0x30E	JUMP(POP())

:label11
# Stack: [@0x13]
0x310	PUSH(:label16)
0x315	PUSH(CALLDATALOAD(0x4))
0x318	PUSH(SLOAD(0x0))
0x320	PUSH(0x2 ** 0xA0 - 0x1)
0x321	SWAP1
0x322	DUP2
0x323	PUSH(POP(@0x320) & POP(@0x318))
0x324	PUSH(CALLER())
0x325	SWAP1
0x326	SWAP1
0x327	SWAP2
0x32E	JUMPI(:label10, !(POP(@0x324) & POP(@0x320) == POP(@0x323)))

# Stack: [@0x315 :label16 @0x13]
0x331	DUP1
0x332	PUSH(POP(@0x315) < 0x6E)
0x333	DUP1
0x337	JUMPI(:label12, POP(@0x332))

# Stack: [@0x332 @0x315 :label16 @0x13]
0x338	POP()
0x33B	DUP1
0x33C	PUSH(POP(@0x315) > 0x96)

:label12
# Stack: [[@0x33C | @0x332] @0x315 :label16 @0x13]
0x342	JUMPI(:label25, !POP())

# Stack: [@0x315 :label16 @0x13]
0x346	JUMP(0x2)

:label13
# Stack: [@0x13]
0x348	PUSH(0x40)
0x34A	DUP1
0x34B	PUSH(MLOAD(POP(0x40)))
0x34C	PUSH(0x20)
0x34E	DUP1
0x34F	DUP3
0x351	DUP3
0x352	MSTORE(POP(0x40), POP(@0x34B) + POP(0x20))
0x353	PUSH(0x0)
0x355	SWAP1
0x356	SWAP2
0x357	MSTORE(POP(@0x34B), POP(0x0))
0x358	DUP2
0x359	PUSH(MLOAD(POP(0x40)))
0x35C	PUSH(SLOAD(0x2))
0x35F	DUP2
0x361	DUP4
0x362	MSTORE(POP(0x40), POP(@0x359) + 0x80)
0x365	DUP2
0x366	MSTORE(POP(@0x359), 0x54)
0x367	PUSH(0x546865206665652070657263656E74616765206170706C69656420746F20616C)
0x388	SWAP3
0x389	DUP3
0x38A	PUSH(POP(@0x359) + POP(0x20))
0x38B	SWAP3
0x38C	SWAP1
0x38D	SWAP3
0x38E	MSTORE(POP(@0x38A), POP(0x546865206665652070657263656E74616765206170706C69656420746F20616C))
0x38F	PUSH(0x6C206465706F736974732E2049742063616E206368616E676520746F20737065)
0x3B0	SWAP3
0x3B1	DUP2
0x3B2	PUSH(POP(@0x359) + POP(0x40))
0x3B3	SWAP3
0x3B4	SWAP1
0x3B5	SWAP3
0x3B6	MSTORE(POP(@0x3B2), POP(0x6C206465706F736974732E2049742063616E206368616E676520746F20737065))
0x3DA	DUP2
0x3DC	MSTORE(POP(@0x359) + 0x60, 0x6564207061796F75747320286D6178203525292E000000000000000000000000)
0x3DD	SWAP1
0x3E1	JUMP(:label3)

:label14
# Stack: [@0x13]
0x3E3	PUSH(:label19)
0x3E8	PUSH(CALLDATALOAD(0x4))
0x3E9	PUSH(0x40)
0x3EB	DUP1
0x3EC	PUSH(MLOAD(POP(0x40)))
0x3EF	DUP1
0x3F0	PUSH(POP(@0x3EC) + 0x20)
0x3F1	SWAP1
0x3F2	SWAP2
0x3F3	MSTORE(POP(0x40), POP(@0x3F0))
0x3F4	PUSH(0x0)
0x3F6	DUP1
0x3F7	DUP3
0x3F8	MSTORE(POP(@0x3EC), POP(0x0))
0x3FB	PUSH(SLOAD(0x5))
0x3FC	SWAP1
0x3FD	SWAP2
0x3FE	DUP3
0x3FF	SWAP2
0x400	DUP3
0x401	SWAP2
0x402	SWAP1
0x403	DUP6
0x409	JUMPI(:label15, !(POP(@0x3E8) < POP(@0x3FB)))

# Stack: [@0x3EC 0x0 0x0 0x0 @0x3E8 :label19 @0x13]
0x40A	PUSH(0x5)
0x40C	DUP1
0x40D	PUSH(SLOAD(POP(0x5)))
0x40E	DUP6
0x40F	SWAP1
0x410	DUP2
0x416	JUMPI(0x2, !(POP(@0x3E8) < POP(@0x40D)))

# Stack: [@0x3E8 0x5 @0x3EC 0x0 0x0 0x0 @0x3E8 :label19 @0x13]
0x417	POP()
0x418	DUP1
0x419	PUSH(SLOAD(POP(0x5)))
0x41A	DUP1
0x41B	DUP4
0x41C	MSTORE(POP(0x0), POP(0x5))
0x41F	DUP6
0x44C	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 + POP(@0x3E8) * 0x4))
0x44D	SWAP5
0x44E	POP()
0x44F	PUSH(0x38D7EA4C68000)
0x457	SWAP1
0x458	SWAP1
0x459	DUP8
0x45A	SWAP1
0x45B	DUP2
0x461	JUMPI(0x2, !(POP(@0x3E8) < POP(@0x419)))

# Stack: [@0x3E8 0x5 0x38D7EA4C68000 @0x3EC 0x0 0x0 @0x44C @0x3E8 :label19 @0x13]
0x462	SWAP1
0x465	MSTORE(0x0, POP(0x5))
0x46A	PUSH(SHA3(0x0, 0x20))
0x46B	SWAP1
0x472	POP(0x0)
0x476	PUSH(SLOAD(0x2 + 0x4 * POP(@0x3E8) + POP(@0x46A)))
0x477	PUSH(0x5)
0x479	DUP1
0x47A	PUSH(SLOAD(POP(0x5)))
0x47B	SWAP2
0x47C	SWAP1
0x47D	SWAP2
0x47E	PUSH(POP(@0x476) / POP(0x38D7EA4C68000))
0x47F	SWAP5
0x480	POP()
0x481	SWAP1
0x482	DUP7
0x483	SWAP1
0x484	DUP2
0x48A	JUMPI(0x2, !(POP(@0x3E8) < POP(@0x47A)))

# Stack: [@0x3E8 0x5 @0x3EC 0x0 @0x47E @0x44C @0x3E8 :label19 @0x13]
0x48B	POP()
0x48C	POP()
0x48D	PUSH(0x40)
0x48F	DUP1
0x490	PUSH(MLOAD(POP(0x40)))
0x493	DUP7
0x4B7	PUSH(SLOAD(0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB3 + POP(@0x3E8) * 0x4))
0x4BA	DUP1
0x4BC	DUP2
0x4BD	MSTORE(POP(0x40), POP(@0x490) + 0x80)
0x4C0	DUP1
0x4C1	MSTORE(POP(@0x490), 0x44)
0x4E5	DUP1
0x4E7	MSTORE(POP(@0x490) + 0x20, 0x456E74727920696E666F3A207573657220616464726573732C20657870656374)
0x4E8	PUSH(0x6564207061796F757420696E2046696E6E6579732C207061796F757420737461)
0x509	SWAP2
0x50A	DUP2
0x50B	PUSH(POP(@0x490) + POP(0x40))
0x50C	SWAP2
0x50D	SWAP1
0x50E	SWAP3
0x50F	MSTORE(POP(@0x50B), POP(0x6564207061796F757420696E2046696E6E6579732C207061796F757420737461))
0x533	DUP1
0x535	MSTORE(POP(@0x490) + 0x60, 0x7475732E00000000000000000000000000000000000000000000000000000000)
0x536	PUSH(0xFF)
0x538	SWAP2
0x539	SWAP1
0x53A	SWAP2
0x53B	PUSH(POP(0xFF) & POP(@0x4B7))
0x53C	SWAP3
0x53D	POP()
0x53E	SWAP1
0x53F	POP()

:label15
# Stack: [[@0x490 | @0x3EC] [@0x53B | 0x0] [@0x47E | 0x0] [@0x44C | 0x0] @0x3E8 :label19 @0x13]
0x541	SWAP2
0x542	SWAP4
0x543	POP()
0x544	SWAP2
0x545	SWAP4
0x546	JUMP(POP(:label19))

:label16
# Stack: []
0x548	STOP()

:label17
# Stack: [[@0x279 | @0x237] [0x0 | @0x270] [@0x277 | 0x0] @0x13]
0x54C	PUSH(MLOAD(0x40))
0x54D	DUP1
0x54E	DUP5
0x54F	DUP2
0x550	MSTORE(POP(@0x54C), POP())
0x553	PUSH(0x20 + POP(@0x54C))
0x554	DUP4
0x555	DUP2
0x556	MSTORE(POP(@0x553), POP())
0x559	PUSH(0x20 + POP(@0x553))
0x55A	DUP1
0x55D	PUSH(0x20 + POP(@0x559))
0x55E	DUP3
0x55F	DUP2
0x561	DUP2
0x562	MSTORE(POP(@0x559), POP(@0x55D) - POP(@0x54C))
0x563	DUP4
0x564	DUP2
0x565	DUP2
0x567	DUP1
0x568	MSTORE(POP(@0x55D), MLOAD(POP()))
0x56B	PUSH(0x20 + POP(@0x55D))
0x56C	SWAP2
0x56D	POP()
0x56E	DUP1
0x56F	PUSH(MLOAD(POP()))
0x570	SWAP1
0x573	PUSH(0x20 + POP())
0x574	SWAP1
0x575	DUP1
0x576	DUP4
0x577	DUP4
0x578	DUP3
0x579	SWAP1
0x580	DUP2
0x58B	PUSH(CALL(0x3 + 0xF * (0x1F + POP(@0x56F)) / 0x20, 0x4, 0x0, POP(@0x573), POP(@0x56F), POP(@0x56B), POP(@0x56F)))
0x58C	POP()
0x58D	SWAP1
0x58E	POP()
0x58F	SWAP1
0x590	DUP2
0x591	PUSH(POP(@0x56F) + POP(@0x56B))
0x592	SWAP1
0x595	PUSH(0x1F & POP(@0x56F))
0x596	DUP1
0x59B	JUMPI(:label18, !POP(@0x595))

# Stack: [@0x595 @0x591 @0x559 @0x54C [@0x279 | @0x237] [@0x270 | 0x0] [@0x277 | 0x0] @0x13]
0x59C	DUP1
0x59D	DUP3
0x59E	PUSH(POP(@0x591) - POP(@0x595))
0x59F	DUP1
0x5A3	DUP2
0x5AE	DUP1
0x5AF	MSTORE(POP(@0x59E), ~(0x100 ** (0x20 - POP(@0x595)) - 0x1) & MLOAD(POP(@0x59E)))
0x5B2	PUSH(0x20 + POP(@0x59E))
0x5B3	SWAP2
0x5B4	POP()

:label18
# Stack: [@0x595 [@0x591 | @0x5B2] @0x559 @0x54C [@0x279 | @0x237] [@0x270 | 0x0] [@0x277 | 0x0] @0x13]
0x5B6	POP()
0x5B7	SWAP5
0x5B8	POP()
0x5B9	POP()
0x5BA	POP()
0x5BB	POP()
0x5BC	POP()
0x5BF	PUSH(MLOAD(0x40))
0x5C0	DUP1
0x5C1	SWAP2
0x5C2	PUSH(POP() - POP(@0x5BF))
0x5C3	SWAP1
0x5C4	RETURN(POP(@0x5BF), POP(@0x5C2))

:label19
# Stack: [[@0x490 | @0x3EC] [@0x53B | 0x0] [0x0 | @0x47E] [@0x44C | 0x0] @0x13]
0x5C8	PUSH(MLOAD(0x40))
0x5C9	DUP1
0x5CA	DUP6
0x5D4	DUP1
0x5D5	MSTORE(POP(@0x5C8), 0x2 ** 0xA0 - 0x1 & POP())
0x5D8	PUSH(0x20 + POP(@0x5C8))
0x5D9	DUP5
0x5DA	DUP2
0x5DB	MSTORE(POP(@0x5D8), POP())
0x5DE	PUSH(0x20 + POP(@0x5D8))
0x5DF	DUP4
0x5E0	DUP2
0x5E1	MSTORE(POP(@0x5DE), POP())
0x5E4	PUSH(0x20 + POP(@0x5DE))
0x5E5	DUP1
0x5E8	PUSH(0x20 + POP(@0x5E4))
0x5E9	DUP3
0x5EA	DUP2
0x5EC	DUP2
0x5ED	MSTORE(POP(@0x5E4), POP(@0x5E8) - POP(@0x5C8))
0x5EE	DUP4
0x5EF	DUP2
0x5F0	DUP2
0x5F2	DUP1
0x5F3	MSTORE(POP(@0x5E8), MLOAD(POP()))
0x5F6	PUSH(0x20 + POP(@0x5E8))
0x5F7	SWAP2
0x5F8	POP()
0x5F9	DUP1
0x5FA	PUSH(MLOAD(POP()))
0x5FB	SWAP1
0x5FE	PUSH(0x20 + POP())
0x5FF	SWAP1
0x600	DUP1
0x601	DUP4
0x602	DUP4
0x603	DUP3
0x604	SWAP1
0x60B	DUP2
0x616	PUSH(CALL(0x3 + 0xF * (0x1F + POP(@0x5FA)) / 0x20, 0x4, 0x0, POP(@0x5FE), POP(@0x5FA), POP(@0x5F6), POP(@0x5FA)))
0x617	POP()
0x618	SWAP1
0x619	POP()
0x61A	SWAP1
0x61B	DUP2
0x61C	PUSH(POP(@0x5FA) + POP(@0x5F6))
0x61D	SWAP1
0x620	PUSH(0x1F & POP(@0x5FA))
0x621	DUP1
0x626	JUMPI(:label20, !POP(@0x620))

# Stack: [@0x620 @0x61C @0x5E4 @0x5C8 [@0x490 | @0x3EC] [@0x53B | 0x0] [@0x47E | 0x0] [@0x44C | 0x0] @0x13]
0x627	DUP1
0x628	DUP3
0x629	PUSH(POP(@0x61C) - POP(@0x620))
0x62A	DUP1
0x62E	DUP2
0x639	DUP1
0x63A	MSTORE(POP(@0x629), ~(0x100 ** (0x20 - POP(@0x620)) - 0x1) & MLOAD(POP(@0x629)))
0x63D	PUSH(0x20 + POP(@0x629))
0x63E	SWAP2
0x63F	POP()

:label20
# Stack: [@0x620 [@0x63D | @0x61C] @0x5E4 @0x5C8 [@0x490 | @0x3EC] [@0x53B | 0x0] [@0x47E | 0x0] [@0x44C | 0x0] @0x13]
0x641	POP()
0x642	SWAP6
0x643	POP()
0x644	POP()
0x645	POP()
0x646	POP()
0x647	POP()
0x648	POP()
0x64B	PUSH(MLOAD(0x40))
0x64C	DUP1
0x64D	SWAP2
0x64E	PUSH(POP() - POP(@0x64B))
0x64F	SWAP1
0x650	RETURN(POP(@0x64B), POP(@0x64E))

:label21
# Stack: [:label1 :label16]
0x652	PUSH(:label1)
0x655	PUSH(0xDE0B6B3A7640000)
0x65E	PUSH(0x0)
0x660	DUP1
0x661	DUP1
0x662	DUP1
0x663	PUSH(CALLVALUE())
0x664	DUP5
0x665	SWAP1
0x66B	JUMPI(:label22, !(POP(@0x663) > POP(0xDE0B6B3A7640000)))

# Stack: [0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x66E	PUSH(MLOAD(0x40))
0x678	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x679	SWAP1
0x67A	DUP3
0x67B	SWAP1
0x687	PUSH(CALLVALUE() + ~0xDE0B6B3A763FFFF)
0x688	SWAP1
0x689	DUP3
0x68A	DUP2
0x68B	DUP2
0x68C	DUP2
0x68D	DUP6
0x68E	DUP9
0x68F	DUP4
0x690	PUSH(CALL(POP(0x0), POP(@0x678), POP(@0x687), POP(@0x66E), POP(0x0), POP(@0x66E), POP(0x0)))
0x691	POP()
0x692	POP()
0x693	POP()
0x694	POP()
0x695	POP()

:label22
# Stack: [0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x69E	PUSH(0x2 ** 0xA0 - 0x1)
0x6A0	DUP1
0x6A1	PUSH(POP(@0x69E) & CALLER())
0x6A2	PUSH(0x0)
0x6A4	SWAP1
0x6A5	DUP2
0x6A6	MSTORE(POP(0x0), POP(@0x6A1))
0x6AB	MSTORE(0x20, 0x4)
0x6AE	DUP1
0x6B0	PUSH(SLOAD(SHA3(POP(0x0), 0x40)))
0x6B1	SWAP1
0x6B2	SWAP2
0x6B9	JUMPI(:label23, !(POP(@0x69E) & POP(@0x6B0) == POP(0x0)))

# Stack: [0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x6BA	PUSH(0x40)
0x6BC	PUSH(0x0)
0x6BE	SWAP1
0x6BF	DUP2
0x6C0	PUSH(SHA3(POP(0x0), POP(0x40)))
0x6C1	DUP1
0x6CF	DUP1
0x6D0	SSTORE(POP(@0x6C0), CALLER() | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x6C0)))
0x6D3	DUP1
0x6D4	PUSH(POP(@0x6C0) + 0x1)
0x6D5	DUP2
0x6D6	SWAP1
0x6D7	SSTORE(POP(@0x6D4), POP(0x0))
0x6DB	SSTORE(0x2 + POP(@0x6C0), POP(0x0))

:label23
# Stack: [0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x6DD	PUSH(0x5)
0x6DF	DUP1
0x6E0	PUSH(SLOAD(POP(0x5)))
0x6E3	DUP1
0x6E4	PUSH(POP(@0x6E0) + 0x1)
0x6E5	DUP1
0x6E6	DUP4
0x6E7	SSTORE(POP(0x5), POP(@0x6E4))
0x6E8	DUP3
0x6E9	DUP2
0x6EA	DUP4
0x6EB	DUP1
0x6EC	PUSH(!POP(@0x6E0))
0x6ED	DUP2
0x6EE	SWAP1
0x6F3	JUMPI(:label27, POP(@0x6EC) > POP(@0x6E4))

# Stack: [@0x6E0 @0x6E4 0x5 @0x6E4 @0x6E0 0x5 0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x6F6	PUSH(0x4 * POP(@0x6E0))
0x6F7	DUP1
0x6FB	DUP2
0x6FE	MSTORE(0x0, POP(0x5))
0x703	PUSH(SHA3(0x0, 0x20))
0x704	SWAP1
0x705	DUP2
0x706	PUSH(POP(@0x703) + POP(@0x6F6))
0x707	SWAP1
0x708	PUSH(POP(@0x703) + 0x4 * POP(@0x6E4))
0x709	PUSH(:label27)
0x70C	SWAP2
0x70D	SWAP1

:label24
# Stack: [[@0x72A | @0x708] @0x706 :label27 @0x6E4 0x5 @0x6E4 @0x6E0 0x5 0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x70F	DUP1
0x710	DUP3
0x716	JUMPI(:label29, !(POP(@0x706) > POP()))

# Stack: [[@0x708 | @0x72A] @0x706 :label27 @0x6E4 0x5 @0x6E4 @0x6E0 0x5 0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x717	DUP1
0x723	DUP1
0x724	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x725	PUSH(0x0)
0x729	DUP2
0x72A	PUSH(POP() + 0x1)
0x72B	DUP2
0x72C	DUP2
0x72D	SSTORE(POP(@0x72A), POP(0x0))
0x730	DUP3
0x731	PUSH(POP() + 0x2)
0x732	SWAP2
0x733	SWAP1
0x734	SWAP2
0x735	SSTORE(POP(@0x731), POP(0x0))
0x736	PUSH(0x3)
0x738	SWAP1
0x739	SWAP2
0x73A	PUSH(POP() + POP(0x3))
0x73B	DUP1
0x740	PUSH(~0xFF & SLOAD(POP(@0x73A)))
0x741	SWAP1
0x742	SSTORE(POP(@0x73A), POP(@0x740))
0x746	JUMP(:label24)

:label25
# Stack: [@0x315 :label16 @0x13]
0x74A	SSTORE(0x3, POP(@0x315))
0x74B	JUMP(POP(:label16))

:label26
# Stack: [@0x1B7 :label16 @0x13]
0x74F	SSTORE(0x2, POP(@0x1B7))
0x750	JUMP(POP(:label16))

:label27
# Stack: [[@0x6E0 | @0x706] @0x6E4 0x5 @0x6E4 @0x6E0 0x5 0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x752	POP()
0x753	POP()
0x754	POP()
0x755	SWAP2
0x756	SWAP1
0x757	SWAP1
0x75A	MSTORE(0x0, POP(0x5))
0x75F	PUSH(SHA3(0x0, 0x20))
0x760	SWAP1
0x764	PUSH(0x4 * POP(@0x6E0) + POP(@0x75F))
0x767	POP(0x0)
0x768	PUSH(0x40)
0x76A	DUP1
0x76B	PUSH(MLOAD(POP(0x40)))
0x76E	DUP1
0x770	DUP2
0x771	MSTORE(POP(0x40), POP(@0x76B) + 0x80)
0x772	PUSH(CALLER())
0x773	DUP1
0x774	DUP3
0x775	MSTORE(POP(@0x76B), POP(@0x772))
0x776	PUSH(0x20)
0x778	DUP1
0x779	DUP4
0x77A	PUSH(POP(@0x76B) + POP(0x20))
0x77B	DUP11
0x77C	SWAP1
0x77D	MSTORE(POP(@0x77A), POP(0xDE0B6B3A7640000))
0x77E	PUSH(0x3)
0x780	DUP1
0x781	PUSH(SLOAD(POP(0x3)))
0x782	PUSH(0x64)
0x784	SWAP1
0x785	DUP14
0x787	PUSH(POP(0xDE0B6B3A7640000) * POP(@0x781) / POP(0x64))
0x788	DUP5
0x789	DUP7
0x78A	PUSH(POP(0x40) + POP(@0x76B))
0x78B	DUP1
0x78C	SWAP1
0x78D	MSTORE(POP(@0x78A), POP(@0x787))
0x78E	PUSH(0x0)
0x790	PUSH(0x60)
0x792	SWAP6
0x793	SWAP1
0x794	SWAP6
0x795	PUSH(POP(0x60) + POP(@0x76B))
0x796	DUP5
0x797	SWAP1
0x798	MSTORE(POP(@0x795), POP(0x0))
0x799	DUP7
0x7A5	DUP4
0x7A7	DUP7
0x7A8	SSTORE(POP(@0x764), POP(@0x772) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x764)))
0x7A9	PUSH(0x1)
0x7AB	DUP8
0x7AC	DUP2
0x7AD	PUSH(POP(0x1) + POP(@0x764))
0x7AE	DUP14
0x7AF	SWAP1
0x7B0	SSTORE(POP(@0x7AD), POP(0xDE0B6B3A7640000))
0x7B3	DUP8
0x7B4	PUSH(POP(@0x764) + 0x2)
0x7B5	SWAP2
0x7B6	SWAP1
0x7B7	SWAP2
0x7B8	SSTORE(POP(@0x7B4), POP(@0x787))
0x7B9	SWAP6
0x7BA	PUSH(POP(@0x764) + POP(0x3))
0x7BB	DUP1
0x7C0	PUSH(~0xFF & SLOAD(POP(@0x7BA)))
0x7C1	SWAP1
0x7C2	SSTORE(POP(@0x7BA), POP(@0x7C0))
0x7CA	PUSH(0x2 ** 0xA0 - 0x1)
0x7CB	SWAP1
0x7CC	SWAP2
0x7CE	DUP2
0x7CF	MSTORE(POP(0x0), POP(@0x772) & POP(@0x7CA))
0x7D0	PUSH(0x4)
0x7D2	SWAP1
0x7D3	MSTORE(POP(0x20), POP(0x4))
0x7D5	DUP1
0x7D6	PUSH(POP(0x1) + SHA3(POP(0x0), POP(0x40)))
0x7D7	DUP1
0x7D9	DUP2
0x7DA	PUSH(POP(0x1) + SLOAD(POP(@0x7D6)))
0x7DB	SWAP1
0x7DC	SSTORE(POP(@0x7D6), POP(@0x7DA))
0x7DD	PUSH(0x6)
0x7DF	DUP1
0x7E0	PUSH(SLOAD(POP(0x6)))
0x7E1	SWAP2
0x7E2	DUP3
0x7E3	PUSH(POP(@0x7E0) + POP(0x1))
0x7E4	DUP1
0x7E5	DUP3
0x7E6	SSTORE(POP(0x6), POP(@0x7E3))
0x7E7	SWAP1
0x7E8	SWAP3
0x7E9	POP()
0x7EA	DUP3
0x7EB	DUP2
0x7EC	DUP4
0x7ED	DUP1
0x7EE	PUSH(!POP(@0x7E0))
0x7EF	DUP2
0x7F0	SWAP1
0x7F5	JUMPI(:label30, POP(@0x7EE) > POP(@0x7E3))

# Stack: [@0x7E0 @0x7E3 0x6 @0x7E3 @0x7E0 0x6 0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x7F6	DUP2
0x7F7	DUP4
0x7FA	MSTORE(0x0, POP(0x6))
0x7FF	PUSH(SHA3(0x0, 0x20))
0x800	SWAP2
0x801	DUP3
0x802	PUSH(POP(@0x7FF) + POP(@0x7E0))
0x803	SWAP2
0x804	PUSH(POP(@0x7FF) + POP(@0x7E3))
0x805	PUSH(:label30)
0x808	SWAP2
0x809	SWAP1

:label28
# Stack: [[@0x804 | @0x819 | @0xA0E] [@0xA0C | @0x802] [:label30 | :label34] [@0x7E3 | @0x9EF] [0x6 | 0x6] [@0x7E3 | @0x9EA] [@0x7E0 | 0x0] [0x6 | @0x8CA] [0x0 | @0x8AC] [0x0 | 0x0 | @0xA29] [0x0 | 0xDE0B6B3A7640000] [0x0 | :label1] [0xDE0B6B3A7640000 | :label1] [:label1 | :label16]]
0x80B	DUP1
0x80C	DUP3
0x812	JUMPI(:label29, !(POP() > POP()))

# Stack: [[@0x804 | @0x819 | @0xA0E] [@0x802 | @0xA0C] [:label30 | :label34] [@0x9EF | @0x7E3] [0x6 | 0x6] [@0x9EA | @0x7E3] [@0x7E0 | 0x0] [0x6 | @0x8CA] [0x0 | @0x8AC] [0x0 | 0x0 | @0xA29] [0x0 | 0xDE0B6B3A7640000] [0x0 | :label1] [:label1 | 0xDE0B6B3A7640000] [:label1 | :label16]]
0x815	DUP1
0x816	SSTORE(POP(), 0x0)
0x819	PUSH(0x1 + POP())
0x81D	JUMP(:label28)

:label29
# Stack: [[@0x72A | @0x819 | @0xA0E | @0x804 | @0x708] [@0x706 | @0x802 | @0xA0C] [:label27 | :label30 | :label34] [@0x6E4 | @0x7E3 | @0x9EF] [0x5 | 0x6 | 0x6] [@0x9EA | @0x6E4 | @0x7E3] [@0x6E0 | @0x7E0 | 0x0] [@0x8CA | 0x5 | 0x6] [0x0 | @0x8AC] [0x0 | 0x0 | @0xA29] [0x0 | 0xDE0B6B3A7640000] [0x0 | :label1] [0xDE0B6B3A7640000 | :label1] [:label1 | :label16]]
0x81F	POP()
0x820	SWAP1
0x821	JUMP(POP())

:label30
# Stack: [[@0x802 | @0x7E0] @0x7E3 0x6 @0x7E3 @0x7E0 0x6 0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x823	POP()
0x824	POP()
0x825	POP()
0x826	PUSH(0x0)
0x828	SWAP3
0x829	DUP4
0x82A	MSTORE(POP(0x0), POP(0x6))
0x82B	POP()
0x82E	PUSH(SLOAD(0x5))
0x82F	PUSH(0x20)
0x831	SWAP1
0x832	SWAP3
0x833	PUSH(SHA3(POP(0x0), POP(0x20)))
0x836	PUSH(~0x0)
0x837	SWAP2
0x838	SWAP1
0x839	SWAP3
0x83A	PUSH(POP(@0x836) + POP(@0x82E))
0x83B	SWAP2
0x83D	SSTORE(POP(@0x833) + POP(@0x7E0), POP(@0x83A))
0x83E	PUSH(0x1)
0x840	DUP1
0x844	PUSH(SLOAD(0x2))
0x845	PUSH(0x64)
0x847	SWAP1
0x848	DUP2
0x84A	DUP7
0x84E	DUP1
0x84F	SSTORE(POP(0x1), POP(0xDE0B6B3A7640000) * (POP(0x64) - POP(@0x844)) / POP(0x64) + SLOAD(POP(0x1)))
0x857	JUMPI(:label33, SLOAD(0x6) > POP(0x1))

# Stack: [0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x858	PUSH(0x0)

:label31
# Stack: [[0x0 | @0xA29] 0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x85B	PUSH(0x6)
0x85D	DUP1
0x85E	PUSH(SLOAD(POP(0x6)))
0x85F	SWAP2
0x860	SWAP6
0x861	POP()
0x862	PUSH(0x5)
0x864	SWAP2
0x865	DUP7
0x866	SWAP1
0x867	DUP2
0x86D	JUMPI(0x2, !(POP() < POP(@0x85E)))

# Stack: [[0x0 | @0xA29] 0x6 0x5 0x0 0x0 0x0 [0x0 | @0xA29] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x86E	POP()
0x871	MSTORE(0x0, POP(0x6))
0x893	DUP5
0x895	PUSH(SLOAD(POP() + 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F))
0x896	DUP2
0x898	DUP1
0x89E	JUMPI(0x2, !(POP(@0x895) < SLOAD(POP(0x5))))

# Stack: [@0x895 0x5 0x0 0x0 0x0 [0x0 | @0xA29] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x89F	SWAP1
0x8A2	MSTORE(0x0, POP(0x5))
0x8A7	PUSH(SHA3(0x0, 0x20))
0x8A8	SWAP1
0x8AC	PUSH(0x4 * POP(@0x895) + POP(@0x8A7))
0x8AF	POP(0x0)
0x8B5	DUP1
0x8B7	PUSH(SLOAD(POP(@0x8AC) + 0x2))
0x8B8	SWAP1
0x8B9	SWAP4
0x8BA	POP()
0x8C0	JUMPI(:label35, !(SLOAD(0x1) > POP(@0x8B7)))

# Stack: [0x0 0x0 @0x8AC [@0xA29 | 0x0] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x8C3	PUSH(MLOAD(0x40))
0x8C4	DUP4
0x8C8	DUP4
0x8CA	PUSH(SLOAD(POP(@0x8AC) + 0x2))
0x8CB	SWAP3
0x8CC	POP()
0x8D5	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x8AC)))
0x8D6	SWAP1
0x8D7	PUSH(0x0)
0x8D9	SWAP1
0x8DA	DUP5
0x8DB	SWAP1
0x8DC	DUP3
0x8DD	DUP2
0x8DE	DUP2
0x8DF	DUP2
0x8E0	DUP6
0x8E1	DUP9
0x8E2	DUP4
0x8E3	PUSH(CALL(POP(0x0), POP(@0x8D5), POP(@0x8CA), POP(@0x8C3), POP(0x0), POP(@0x8C3), POP(0x0)))
0x8E4	SWAP4
0x8E5	POP()
0x8E6	POP()
0x8E7	POP()
0x8E8	POP()
0x8E9	POP()
0x8EA	PUSH(0x1)
0x8EC	DUP4
0x8EF	PUSH(0x3 + POP(@0x8AC))
0x8F5	PUSH(0x100 ** 0x0)
0x8F6	DUP2
0x8F8	DUP1
0x8FD	PUSH(~(0xFF * POP(@0x8F5)) & SLOAD(POP(@0x8EF)))
0x8FE	SWAP1
0x8FF	DUP4
0x901	PUSH(POP(0x1) * POP(@0x8F5) | POP(@0x8FD))
0x902	SWAP1
0x903	SSTORE(POP(@0x8EF), POP(@0x901))
0x904	POP()
0x905	PUSH(0x4)
0x909	POP(0x0)
0x90A	PUSH(0x0)
0x90C	DUP4
0x90F	PUSH(0x0 + POP(@0x8AC))
0x910	PUSH(0x0)
0x912	SWAP1
0x913	PUSH(SLOAD(POP(@0x90F)))
0x914	SWAP1
0x918	PUSH(0x100 ** POP(0x0))
0x919	SWAP1
0x92D	DUP1
0x92E	MSTORE(POP(0x0), 0x2 ** 0xA0 - 0x1 & 0x2 ** 0xA0 - 0x1 & POP(@0x913) / POP(@0x918))
0x931	PUSH(0x20 + POP(0x0))
0x932	SWAP1
0x933	DUP2
0x934	MSTORE(POP(@0x931), POP(0x4))
0x93D	POP(0x0)
0x940	PUSH(0x2 + SHA3(0x0, 0x20 + POP(@0x931)))
0x941	PUSH(0x0)
0x943	DUP2
0x944	DUP2
0x945	POP()
0x946	PUSH(SLOAD(POP(@0x940)))
0x947	DUP1
0x948	SWAP3
0x949	SWAP2
0x94A	SWAP1
0x94D	PUSH(0x1 + POP(@0x946))
0x94E	SWAP2
0x94F	SWAP1
0x950	POP()
0x951	SSTORE(POP(@0x940), POP(@0x94D))
0x952	POP()
0x953	DUP2
0x954	PUSH(0x1)
0x956	PUSH(0x0)
0x958	DUP3
0x959	DUP3
0x95A	DUP3
0x95B	POP()
0x95D	PUSH(SLOAD(POP(0x1)) - POP(@0x8CA))
0x95E	SWAP3
0x95F	POP()
0x960	POP()
0x961	DUP2
0x962	SWAP1
0x963	SSTORE(POP(0x1), POP(@0x95D))
0x964	POP()
0x967	PUSH(0x6)
0x96B	POP(0x0)
0x96C	DUP1
0x96D	PUSH(SLOAD(POP(0x6)))
0x96E	SWAP1
0x96F	POP()
0x971	DUP4
0x977	JUMPI(:label32, !(POP() < POP(@0x96D) - 0x1))

# Stack: [0x0 @0x8CA @0x8AC [0x0 | @0xA29] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x978	PUSH(0x6)
0x97A	DUP1
0x97B	PUSH(SLOAD(POP(0x6)))
0x97F	DUP1
0x980	PUSH(POP(@0x97B) + ~0x0)
0x981	SWAP1
0x982	DUP2
0x988	JUMPI(0x2, !(POP(@0x980) < POP(@0x97B)))

# Stack: [@0x980 0x6 0x0 @0x8CA @0x8AC [0x0 | @0xA29] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x989	POP()
0x98A	DUP1
0x98B	PUSH(SLOAD(POP(0x6)))
0x98C	PUSH(0x0)
0x98E	DUP2
0x98F	SWAP1
0x990	MSTORE(POP(0x0), POP(0x6))
0x9B2	DUP1
0x9B4	PUSH(SLOAD(POP(@0x98B) + 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3E))
0x9B5	SWAP2
0x9B6	SWAP1
0x9B7	DUP7
0x9B8	SWAP1
0x9B9	DUP2
0x9BF	JUMPI(0x2, !(POP() < POP(@0x98B)))

# Stack: [[0x0 | @0xA29] 0x6 @0x9B4 0x0 @0x8CA @0x8AC [0x0 | @0xA29] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x9C0	POP()
0x9C1	POP()
0x9E3	DUP5
0x9E5	SSTORE(POP() + 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F, POP(@0x9B4))

:label32
# Stack: [0x0 @0x8CA @0x8AC [0x0 | @0xA29] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0x9E7	PUSH(0x6)
0x9E9	DUP1
0x9EA	PUSH(SLOAD(POP(0x6)))
0x9EE	DUP1
0x9EF	PUSH(POP(@0x9EA) + ~0x0)
0x9F0	DUP1
0x9F1	DUP4
0x9F2	SSTORE(POP(0x6), POP(@0x9EF))
0x9F3	SWAP1
0x9F4	SWAP2
0x9F5	SWAP1
0x9F6	DUP3
0x9F7	DUP1
0x9F8	PUSH(!POP(@0x9EA))
0x9F9	DUP2
0x9FA	SWAP1
0x9FF	JUMPI(:label34, POP(@0x9F8) > POP(@0x9EF))

# Stack: [@0x9EA @0x9EF 0x6 @0x9EA 0x0 @0x8CA @0x8AC [0x0 | @0xA29] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0xA00	DUP2
0xA01	DUP4
0xA04	MSTORE(0x0, POP(0x6))
0xA09	PUSH(SHA3(0x0, 0x20))
0xA0A	SWAP2
0xA0B	DUP3
0xA0C	PUSH(POP(@0xA09) + POP(@0x9EA))
0xA0D	SWAP2
0xA0E	PUSH(POP(@0xA09) + POP(@0x9EF))
0xA0F	PUSH(:label34)
0xA12	SWAP2
0xA13	SWAP1
0xA17	JUMP(:label28)

:label33
# Stack: [0x0 0x0 0x0 0x0 0xDE0B6B3A7640000 :label1 :label1 :label16]
0xA1B	PUSH(SLOAD(0x6))
0xA1E	PUSH(~0x23)
0xA1F	DUP1
0xA20	SWAP1
0xA29	PUSH(BLOCKHASH(~0x0 + NUMBER()) / POP(@0xA1E) / POP(@0xA1B) % POP(@0xA1B))
0xA2D	JUMP(:label31)

:label34
# Stack: [[@0x9EA | @0xA0C] @0x9EF 0x6 @0x9EA 0x0 @0x8CA @0x8AC [0x0 | @0xA29] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0xA2F	POP()
0xA30	POP()
0xA31	POP()
0xA32	POP()

:label35
# Stack: [0x0 [@0x8CA | 0x0] @0x8AC [0x0 | @0xA29] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0xA34	POP()
0xA43	PUSH(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()) - SLOAD(0x1))
0xA46	DUP1
0xA4C	JUMPI(:label36, !(POP(@0xA43) > 0x0))

# Stack: [@0xA43 [@0x8CA | 0x0] @0x8AC [0x0 | @0xA29] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0xA4D	PUSH(0x0)
0xA4F	DUP1
0xA50	PUSH(SLOAD(POP(0x0)))
0xA53	PUSH(MLOAD(0x40))
0xA5B	PUSH(0x2 ** 0xA0 - 0x1)
0xA5C	SWAP1
0xA5D	SWAP1
0xA5E	SWAP2
0xA5F	PUSH(POP(@0xA5B) & POP(@0xA50))
0xA60	SWAP2
0xA61	SWAP1
0xA62	DUP4
0xA63	SWAP1
0xA64	DUP3
0xA65	DUP2
0xA66	DUP2
0xA67	DUP2
0xA68	DUP6
0xA69	DUP9
0xA6A	DUP4
0xA6B	PUSH(CALL(POP(0x0), POP(@0xA5F), POP(@0xA43), POP(@0xA53), POP(0x0), POP(@0xA53), POP(0x0)))
0xA6C	POP()
0xA6D	POP()
0xA6E	POP()
0xA6F	POP()
0xA70	POP()

:label36
# Stack: [@0xA43 [@0x8CA | 0x0] @0x8AC [0x0 | @0xA29] 0xDE0B6B3A7640000 :label1 :label1 :label16]
0xA72	POP()
0xA73	POP()
0xA74	POP()
0xA75	POP()
0xA76	POP()
0xA77	JUMP(POP(:label1))


