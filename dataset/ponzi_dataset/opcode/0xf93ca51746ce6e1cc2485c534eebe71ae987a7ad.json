# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0xD	PUSH(CALLDATALOAD(0x0))
0xE	PUSH(0x100000000000000000000000000000000000000000000000000000000)
0x2C	SWAP1
0x2D	PUSH(POP(@0xD) / POP(0x100000000000000000000000000000000000000000000000000000000))
0x2E	DUP1
0x38	JUMPI(:label3, 0x13AF4035 == POP(@0x2D))

# Stack: [@0x2D]
0x39	DUP1
0x43	JUMPI(:label5, 0x35C1D349 == POP(@0x2D))

# Stack: [@0x2D]
0x44	DUP1
0x4E	JUMPI(:label7, 0x8DA5CB5B == POP(@0x2D))

# Stack: [@0x2D]
0x4F	DUP1
0x59	JUMPI(:label9, 0x9003ADFE == POP(@0x2D))

# Stack: [@0x2D]
0x5A	DUP1
0x64	JUMPI(:label11, 0xA60F3588 == POP(@0x2D))

# Stack: [@0x2D]
0x65	DUP1
0x6F	JUMPI(:label13, 0xB69EF8A8 == POP(@0x2D))

# Stack: [@0x2D]
0x70	DUP1
0x7A	JUMPI(:label15, 0xC8796572 == POP(@0x2D))

# Stack: [@0x2D]
0x7B	DUP1
0x85	JUMPI(:label17, 0xE97DCB62 == POP(@0x2D))

# Stack: [@0x2D]
0x89	JUMP(:label0)

:label0
# Stack: []
0x8B	PUSH(:label2)

# Stack: [:label2]
0x8F	PUSH(:label1)
0x95	JUMP(:label19)

:label1
# Stack: [:label2]
0x98	JUMP(POP(:label2))

:label2
# Stack: []
0x9A	STOP()

:label3
# Stack: [@0x2D]
0x9C	PUSH(:label4)
0x9F	PUSH(0x4)
0xA1	DUP1
0xA2	DUP1
0xA3	PUSH(CALLDATALOAD(POP(0x4)))
0xA4	SWAP1
0xA7	PUSH(0x20 + POP(0x4))
0xA8	SWAP1
0xA9	SWAP2
0xAA	SWAP1
0xAB	POP()
0xAC	POP()
0xB0	JUMP(:label29)

:label4
# Stack: [@0x2D]
0xB2	STOP()

:label5
# Stack: [@0x2D]
0xB4	PUSH(:label6)
0xB7	PUSH(0x4)
0xB9	DUP1
0xBA	DUP1
0xBB	PUSH(CALLDATALOAD(POP(0x4)))
0xBC	SWAP1
0xBF	PUSH(0x20 + POP(0x4))
0xC0	SWAP1
0xC1	SWAP2
0xC2	SWAP1
0xC3	POP()
0xC4	POP()
0xC8	JUMP(:label31)

:label6
# Stack: [@0x5C7 @0x5BE :label6 @0x2D]
0xCC	PUSH(MLOAD(0x40))
0xCD	DUP1
0xCE	DUP4
0xE5	DUP1
0xE6	MSTORE(POP(@0xCC), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x5BE))
0xE9	PUSH(0x20 + POP(@0xCC))
0xEA	DUP3
0xEB	DUP2
0xEC	MSTORE(POP(@0xE9), POP(@0x5C7))
0xEF	PUSH(0x20 + POP(@0xE9))
0xF0	SWAP3
0xF1	POP()
0xF2	POP()
0xF3	POP()
0xF6	PUSH(MLOAD(0x40))
0xF7	DUP1
0xF8	SWAP2
0xF9	PUSH(POP(@0xEF) - POP(@0xF6))
0xFA	SWAP1
0xFB	RETURN(POP(@0xF6), POP(@0xF9))

:label7
# Stack: [@0x2D]
0xFD	PUSH(:label8)
0x100	PUSH(0x4)
0x102	DUP1
0x103	POP()
0x104	POP()
0x108	JUMP(:label32)

:label8
# Stack: [@0x5EF :label8 @0x2D]
0x10C	PUSH(MLOAD(0x40))
0x10D	DUP1
0x10E	DUP3
0x125	DUP1
0x126	MSTORE(POP(@0x10C), 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x5EF))
0x129	PUSH(0x20 + POP(@0x10C))
0x12A	SWAP2
0x12B	POP()
0x12C	POP()
0x12F	PUSH(MLOAD(0x40))
0x130	DUP1
0x131	SWAP2
0x132	PUSH(POP(@0x129) - POP(@0x12F))
0x133	SWAP1
0x134	RETURN(POP(@0x12F), POP(@0x132))

:label9
# Stack: [@0x2D]
0x136	PUSH(:label10)
0x139	PUSH(0x4)
0x13B	DUP1
0x13C	POP()
0x13D	POP()
0x141	JUMP(:label33)

:label10
# Stack: [@0x5F8 :label10 @0x2D]
0x145	PUSH(MLOAD(0x40))
0x146	DUP1
0x147	DUP3
0x148	DUP2
0x149	MSTORE(POP(@0x145), POP(@0x5F8))
0x14C	PUSH(0x20 + POP(@0x145))
0x14D	SWAP2
0x14E	POP()
0x14F	POP()
0x152	PUSH(MLOAD(0x40))
0x153	DUP1
0x154	SWAP2
0x155	PUSH(POP(@0x14C) - POP(@0x152))
0x156	SWAP1
0x157	RETURN(POP(@0x152), POP(@0x155))

:label11
# Stack: [@0x2D]
0x159	PUSH(:label12)
0x15C	PUSH(0x4)
0x15E	DUP1
0x15F	POP()
0x160	POP()
0x164	JUMP(:label34)

:label12
# Stack: [@0x601 :label12 @0x2D]
0x168	PUSH(MLOAD(0x40))
0x169	DUP1
0x16A	DUP3
0x16B	DUP2
0x16C	MSTORE(POP(@0x168), POP(@0x601))
0x16F	PUSH(0x20 + POP(@0x168))
0x170	SWAP2
0x171	POP()
0x172	POP()
0x175	PUSH(MLOAD(0x40))
0x176	DUP1
0x177	SWAP2
0x178	PUSH(POP(@0x16F) - POP(@0x175))
0x179	SWAP1
0x17A	RETURN(POP(@0x175), POP(@0x178))

:label13
# Stack: [@0x2D]
0x17C	PUSH(:label14)
0x17F	PUSH(0x4)
0x181	DUP1
0x182	POP()
0x183	POP()
0x187	JUMP(:label35)

:label14
# Stack: [@0x60A :label14 @0x2D]
0x18B	PUSH(MLOAD(0x40))
0x18C	DUP1
0x18D	DUP3
0x18E	DUP2
0x18F	MSTORE(POP(@0x18B), POP(@0x60A))
0x192	PUSH(0x20 + POP(@0x18B))
0x193	SWAP2
0x194	POP()
0x195	POP()
0x198	PUSH(MLOAD(0x40))
0x199	DUP1
0x19A	SWAP2
0x19B	PUSH(POP(@0x192) - POP(@0x198))
0x19C	SWAP1
0x19D	RETURN(POP(@0x198), POP(@0x19B))

:label15
# Stack: [@0x2D]
0x19F	PUSH(:label16)
0x1A2	PUSH(0x4)
0x1A4	DUP1
0x1A5	POP()
0x1A6	POP()
0x1AA	JUMP(:label36)

:label16
# Stack: [@0x2D]
0x1AC	STOP()

:label17
# Stack: [@0x2D]
0x1AE	PUSH(:label18)
0x1B1	PUSH(0x4)
0x1B3	DUP1
0x1B4	POP()
0x1B5	POP()
0x1B9	JUMP(:label19)

:label18
# Stack: [@0x2D]
0x1BB	STOP()

:label19
# Stack: [[:label1 | :label18] [:label2 | @0x2D]]
0x1BD	PUSH(0x0)
0x1BF	PUSH(0x0)
0x1C1	PUSH(0x0)
0x1D1	JUMPI(:label20, !(CALLVALUE() < 0x2386F26FC10000))

# Stack: [0x0 0x0 0x0 [:label1 | :label18] [:label2 | @0x2D]]
0x1E8	PUSH(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x1E9	PUSH(0x0)
0x1EB	PUSH(CALLVALUE())
0x1EE	PUSH(MLOAD(0x40))
0x1EF	DUP1
0x1F0	SWAP1
0x1F1	POP()
0x1F6	PUSH(MLOAD(0x40))
0x1F7	DUP1
0x1F8	DUP3
0x1FA	DUP1
0x1FB	DUP4
0x1FC	DUP7
0x1FD	DUP7
0x1FE	PUSH(CALL(POP(0x0), POP(@0x1E8), POP(@0x1EB), POP(@0x1F6), POP(@0x1EE) - POP(@0x1F6), POP(@0x1F6), 0x0))
0x1FF	SWAP4
0x200	POP()
0x201	POP()
0x202	POP()
0x203	POP()
0x204	POP()
0x208	JUMP(:label28)

:label20
# Stack: [0x0 0x0 0x0 [:label1 | :label18] [:label2 | @0x2D]]
0x21A	JUMPI(:label21, !(CALLVALUE() > 0x56BC75E2D63100000))

# Stack: [0x0 0x0 0x0 [:label1 | :label18] [:label2 | @0x2D]]
0x231	PUSH(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER())
0x232	PUSH(0x0)
0x23F	PUSH(CALLVALUE() - 0x56BC75E2D63100000)
0x242	PUSH(MLOAD(0x40))
0x243	DUP1
0x244	SWAP1
0x245	POP()
0x24A	PUSH(MLOAD(0x40))
0x24B	DUP1
0x24C	DUP3
0x24E	DUP1
0x24F	DUP4
0x250	DUP7
0x251	DUP7
0x252	PUSH(CALL(POP(0x0), POP(@0x231), POP(@0x23F), POP(@0x24A), POP(@0x242) - POP(@0x24A), POP(@0x24A), 0x0))
0x253	SWAP4
0x254	POP()
0x255	POP()
0x256	POP()
0x257	POP()
0x258	POP()
0x259	PUSH(0x56BC75E2D63100000)
0x263	SWAP3
0x264	POP()
0x265	DUP3
0x266	POP()
0x26A	JUMP(:label22)

:label21
# Stack: [0x0 0x0 0x0 [:label1 | :label18] [:label2 | @0x2D]]
0x26C	PUSH(CALLVALUE())
0x26D	SWAP3
0x26E	POP()
0x26F	DUP3
0x270	POP()

:label22
# Stack: [0x0 0x0 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x272	PUSH(0x0)
0x276	POP(0x0)
0x277	DUP1
0x278	PUSH(SLOAD(POP(0x0)))
0x279	SWAP1
0x27A	POP()
0x27B	SWAP2
0x27C	POP()
0x27D	PUSH(0x1)
0x27F	PUSH(0x0)
0x283	POP(0x0)
0x284	DUP2
0x285	DUP2
0x286	DUP1
0x287	PUSH(SLOAD(POP(0x0)))
0x288	SWAP1
0x289	POP()
0x28A	PUSH(POP(@0x287) + POP(0x1))
0x28B	SWAP2
0x28C	POP()
0x28D	DUP2
0x28E	DUP2
0x28F	PUSH(SLOAD(POP(0x0)))
0x290	DUP2
0x291	DUP4
0x292	SSTORE(POP(0x0), POP(@0x28A))
0x293	DUP2
0x294	DUP2
0x29A	JUMPI(:label25, !POP(@0x28F) > POP(@0x28A))

# Stack: [@0x28F @0x28A 0x0 @0x28A 0x0 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label18 | :label1] [:label2 | @0x2D]]
0x29D	PUSH(0x2 * POP(@0x28F))
0x29E	DUP1
0x2A2	DUP2
0x2A5	MSTORE(0x0, POP(0x0))
0x2AA	PUSH(SHA3(0x0, 0x20))
0x2AB	SWAP1
0x2AC	DUP2
0x2AD	PUSH(POP(@0x2AA) + POP(@0x29D))
0x2AE	SWAP1
0x2AF	PUSH(POP(@0x2AA) + 0x2 * POP(@0x28A))
0x2B0	PUSH(:label25)
0x2B3	SWAP2
0x2B4	SWAP1
0x2B8	JUMP(:label23)

:label23
# Stack: [[@0x2AF | @0x2F9] @0x2AD :label25 @0x28A 0x0 @0x28A 0x0 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x2BA	DUP1
0x2BB	DUP3
0x2C1	JUMPI(:label24, !(POP(@0x2AD) > POP()))

# Stack: [[@0x2AF | @0x2F9] @0x2AD :label25 @0x28A 0x0 @0x28A 0x0 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x2C6	DUP1
0x2C7	PUSH(POP() + 0x0)
0x2CD	PUSH(0x100 ** 0x0)
0x2CE	DUP1
0x2CF	PUSH(SLOAD(POP(@0x2C7)))
0x2D0	SWAP1
0x2E8	PUSH(~(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF * POP(@0x2CD)) & POP(@0x2CF))
0x2E9	SWAP1
0x2EA	SSTORE(POP(@0x2C7), POP(@0x2E8))
0x2ED	DUP1
0x2EE	PUSH(POP() + 0x1)
0x2F1	POP(0x0)
0x2F2	PUSH(0x0)
0x2F4	SWAP1
0x2F5	SSTORE(POP(@0x2EE), POP(0x0))
0x2F6	POP(0x0)
0x2F9	PUSH(0x2 + POP())
0x2FD	JUMP(:label23)

:label24
# Stack: [[@0x2F9 | @0x2AF] @0x2AD :label25 @0x28A 0x0 @0x28A 0x0 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [@0x2D | :label2]]
0x2FF	POP()
0x300	SWAP1
0x301	JUMP(POP(:label25))

:label25
# Stack: [[@0x2AD | @0x28F] @0x28A 0x0 @0x28A 0x0 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label18 | :label1] [:label2 | @0x2D]]
0x304	POP()
0x305	POP()
0x306	POP()
0x307	POP()
0x308	PUSH(CALLER())
0x309	PUSH(0x0)
0x30D	POP(0x0)
0x30E	DUP4
0x30F	DUP2
0x311	DUP1
0x317	JUMPI(0x2, !(POP(@0x278) < SLOAD(POP(0x0))))

# Stack: [@0x278 0x0 @0x308 0x0 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x318	SWAP1
0x31B	MSTORE(0x0, POP(0x0))
0x320	PUSH(SHA3(0x0, 0x20))
0x321	SWAP1
0x325	PUSH(0x2 * POP(@0x278) + POP(@0x320))
0x326	PUSH(0x0)

# Stack: [0x0 @0x325 @0x308 0x0 @0x278 [@0x26C | 0x56BC75E2D63100000] [:label1 | :label18] [:label2 | @0x2D]]
0x329	POP()
0x32C	PUSH(0x0 + POP(@0x325))
0x332	PUSH(0x100 ** 0x0)
0x333	DUP2
0x335	DUP1
0x34D	PUSH(~(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF * POP(@0x332)) & SLOAD(POP(@0x32C)))
0x34E	SWAP1
0x34F	DUP4
0x351	PUSH(POP(@0x308) * POP(@0x332) | POP(@0x34D))
0x352	SWAP1
0x353	SSTORE(POP(@0x32C), POP(@0x351))
0x354	POP()
0x355	DUP3
0x356	PUSH(0x0)
0x35A	POP(0x0)
0x35B	DUP4
0x35C	DUP2
0x35E	DUP1
0x364	JUMPI(0x2, !(POP(@0x278) < SLOAD(POP(0x0))))

# Stack: [@0x278 0x0 [0x56BC75E2D63100000 | @0x26C] 0x0 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x365	SWAP1
0x368	MSTORE(0x0, POP(0x0))
0x36D	PUSH(SHA3(0x0, 0x20))
0x36E	SWAP1
0x372	PUSH(0x2 * POP(@0x278) + POP(@0x36D))
0x373	PUSH(0x0)

# Stack: [0x0 @0x372 [0x56BC75E2D63100000 | @0x26C] 0x0 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label18 | :label1] [@0x2D | :label2]]
0x376	POP()
0x379	PUSH(0x1 + POP(@0x372))
0x37C	POP(0x0)
0x37D	DUP1
0x37E	SWAP1
0x37F	SSTORE(POP(@0x379), POP())
0x380	POP()
0x383	DUP2
0x38A	JUMPI(:label26, !!(POP(@0x278) == 0x0))

# Stack: [0x0 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x38D	DUP3
0x38E	PUSH(POP() / 0x14)
0x38F	PUSH(0x2)
0x391	PUSH(0x0)
0x393	DUP3
0x394	DUP3
0x395	DUP3
0x396	POP()
0x398	PUSH(SLOAD(POP(0x2)) + POP(@0x38E))
0x399	SWAP3
0x39A	POP()
0x39B	POP()
0x39C	DUP2
0x39D	SWAP1
0x39E	SSTORE(POP(0x2), POP(@0x398))
0x39F	POP()
0x3A2	DUP3
0x3A4	DUP3
0x3A5	PUSH(POP() - POP() / 0x14)
0x3A6	PUSH(0x3)
0x3A8	PUSH(0x0)
0x3AA	DUP3
0x3AB	DUP3
0x3AC	DUP3
0x3AD	POP()
0x3AF	PUSH(SLOAD(POP(0x3)) + POP(@0x3A5))
0x3B0	SWAP3
0x3B1	POP()
0x3B2	POP()
0x3B3	DUP2
0x3B4	SWAP1
0x3B5	SSTORE(POP(0x3), POP(@0x3AF))
0x3B6	POP()
0x3BA	JUMP(:label27)

:label26
# Stack: [0x0 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [@0x2D | :label2]]
0x3BC	DUP3
0x3BD	PUSH(0x2)
0x3BF	PUSH(0x0)
0x3C1	DUP3
0x3C2	DUP3
0x3C3	DUP3
0x3C4	POP()
0x3C6	PUSH(SLOAD(POP(0x2)) + POP())
0x3C7	SWAP3
0x3C8	POP()
0x3C9	POP()
0x3CA	DUP2
0x3CB	SWAP1
0x3CC	SSTORE(POP(0x2), POP(@0x3C6))
0x3CD	POP()

:label27
# Stack: [[0x0 | @0x441] @0x278 [0x56BC75E2D63100000 | @0x26C] [:label18 | :label1] [:label2 | @0x2D]]
0x3D0	PUSH(0xBE)
0x3D2	PUSH(0x64)
0x3D4	PUSH(0x0)
0x3D8	POP(0x0)
0x3DD	POP(0x0)
0x3DE	PUSH(SLOAD(0x1))
0x3DF	DUP2
0x3E1	DUP1
0x3E7	JUMPI(0x2, !(POP(@0x3DE) < SLOAD(POP(0x0))))

# Stack: [@0x3DE 0x0 0x64 0xBE [0x0 | @0x441] @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x3E8	SWAP1
0x3EB	MSTORE(0x0, POP(0x0))
0x3F0	PUSH(SHA3(0x0, 0x20))
0x3F1	SWAP1
0x3F5	PUSH(0x2 * POP(@0x3DE) + POP(@0x3F0))
0x3F6	PUSH(0x0)

# Stack: [0x0 @0x3F5 0x64 0xBE [0x0 | @0x441] @0x278 [0x56BC75E2D63100000 | @0x26C] [:label18 | :label1] [:label2 | @0x2D]]
0x3F9	POP()
0x3FF	POP(0x0)
0x407	POP(0x0)
0x40E	JUMPI(:label28, !(SLOAD(0x3) > SLOAD(0x1 + POP(@0x3F5)) / POP(0x64) * POP(0xBE)))

# Stack: [[0x0 | @0x441] @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x40F	PUSH(0xBE)
0x411	PUSH(0x64)
0x413	PUSH(0x0)
0x417	POP(0x0)
0x41C	POP(0x0)
0x41D	PUSH(SLOAD(0x1))
0x41E	DUP2
0x420	DUP1
0x426	JUMPI(0x2, !(POP(@0x41D) < SLOAD(POP(0x0))))

# Stack: [@0x41D 0x0 0x64 0xBE [0x0 | @0x441] @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x427	SWAP1
0x42A	MSTORE(0x0, POP(0x0))
0x42F	PUSH(SHA3(0x0, 0x20))
0x430	SWAP1
0x434	PUSH(0x2 * POP(@0x41D) + POP(@0x42F))
0x435	PUSH(0x0)

# Stack: [0x0 @0x434 0x64 0xBE [0x0 | @0x441] @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x438	POP()
0x43E	POP(0x0)
0x441	PUSH(SLOAD(0x1 + POP(@0x434)) / POP(0x64) * POP(0xBE))
0x442	SWAP1
0x443	POP()
0x444	PUSH(0x0)
0x448	POP(0x0)
0x44D	POP(0x0)
0x44E	PUSH(SLOAD(0x1))
0x44F	DUP2
0x451	DUP1
0x457	JUMPI(0x2, !(POP(@0x44E) < SLOAD(POP(0x0))))

# Stack: [@0x44E 0x0 @0x441 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x458	SWAP1
0x45B	MSTORE(0x0, POP(0x0))
0x460	PUSH(SHA3(0x0, 0x20))
0x461	SWAP1
0x465	PUSH(0x2 * POP(@0x44E) + POP(@0x460))
0x466	PUSH(0x0)

# Stack: [0x0 @0x465 @0x441 @0x278 [0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x469	POP()
0x46C	PUSH(0x0 + POP(@0x465))
0x46D	PUSH(0x0)
0x46F	SWAP1
0x470	PUSH(SLOAD(POP(@0x46C)))
0x471	SWAP1
0x475	PUSH(0x100 ** POP(0x0))
0x476	SWAP1
0x4A3	PUSH(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x470) / POP(@0x475))
0x4A4	PUSH(0x0)
0x4A6	DUP3
0x4A9	PUSH(MLOAD(0x40))
0x4AA	DUP1
0x4AB	SWAP1
0x4AC	POP()
0x4B1	PUSH(MLOAD(0x40))
0x4B2	DUP1
0x4B3	DUP3
0x4B5	DUP1
0x4B6	DUP4
0x4B7	DUP7
0x4B8	DUP7
0x4B9	PUSH(CALL(POP(0x0), POP(@0x4A3), POP(@0x441), POP(@0x4B1), POP(@0x4A9) - POP(@0x4B1), POP(@0x4B1), 0x0))
0x4BA	SWAP4
0x4BB	POP()
0x4BC	POP()
0x4BD	POP()
0x4BE	POP()
0x4BF	POP()
0x4C0	DUP1
0x4C1	PUSH(0x3)
0x4C3	PUSH(0x0)
0x4C5	DUP3
0x4C6	DUP3
0x4C7	DUP3
0x4C8	POP()
0x4CA	PUSH(SLOAD(POP(0x3)) - POP(@0x441))
0x4CB	SWAP3
0x4CC	POP()
0x4CD	POP()
0x4CE	DUP2
0x4CF	SWAP1
0x4D0	SSTORE(POP(0x3), POP(@0x4CA))
0x4D1	POP()
0x4D2	PUSH(0x1)
0x4D4	PUSH(0x1)
0x4D6	PUSH(0x0)
0x4D8	DUP3
0x4D9	DUP3
0x4DA	DUP3
0x4DB	POP()
0x4DD	PUSH(SLOAD(POP(0x1)) + POP(0x1))
0x4DE	SWAP3
0x4DF	POP()
0x4E0	POP()
0x4E1	DUP2
0x4E2	SWAP1
0x4E3	SSTORE(POP(0x1), POP(@0x4DD))
0x4E4	POP()
0x4E8	JUMP(:label27)

:label28
# Stack: [[0x0 | @0x441] [0x0 | @0x278] [0x0 | 0x56BC75E2D63100000 | @0x26C] [:label1 | :label18] [:label2 | @0x2D]]
0x4EB	POP()
0x4EC	POP()
0x4ED	POP()
0x4EE	JUMP(POP())

:label29
# Stack: [@0xA3 :label4 @0x2D]
0x4F0	PUSH(0x4)
0x4F2	PUSH(0x0)
0x4F4	SWAP1
0x4F5	PUSH(SLOAD(POP(0x4)))
0x4F6	SWAP1
0x4FA	PUSH(0x100 ** POP(0x0))
0x4FB	SWAP1
0x545	JUMPI(:label30, !(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER() == 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x4F5) / POP(@0x4FA)))

# Stack: [@0xA3 :label4 @0x2D]
0x546	DUP1
0x547	PUSH(0x4)
0x54E	PUSH(0x100 ** 0x0)
0x54F	DUP2
0x551	DUP1
0x569	PUSH(~(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF * POP(@0x54E)) & SLOAD(POP(0x4)))
0x56A	SWAP1
0x56B	DUP4
0x56D	PUSH(POP(@0xA3) * POP(@0x54E) | POP(@0x569))
0x56E	SWAP1
0x56F	SSTORE(POP(0x4), POP(@0x56D))
0x570	POP()

:label30
# Stack: [@0xA3 :label4 @0x2D]
0x573	POP()
0x574	JUMP(POP(:label4))

:label31
# Stack: [@0xBB :label6 @0x2D]
0x576	PUSH(0x0)
0x57A	POP(0x0)
0x57B	DUP2
0x57C	DUP2
0x57E	DUP1
0x584	JUMPI(0x2, !(POP(@0xBB) < SLOAD(POP(0x0))))

# Stack: [@0xBB 0x0 @0xBB :label6 @0x2D]
0x585	SWAP1
0x588	MSTORE(0x0, POP(0x0))
0x58D	PUSH(SHA3(0x0, 0x20))
0x58E	SWAP1
0x592	PUSH(0x2 * POP(@0xBB) + POP(@0x58D))
0x593	PUSH(0x0)

# Stack: [0x0 @0x592 @0xBB :label6 @0x2D]
0x596	SWAP2
0x597	POP()
0x598	SWAP1
0x599	POP()
0x59A	DUP1
0x59D	PUSH(0x0 + POP(@0x592))
0x59E	PUSH(0x0)
0x5A0	SWAP1
0x5A1	PUSH(SLOAD(POP(@0x59D)))
0x5A2	SWAP1
0x5A6	PUSH(0x100 ** POP(0x0))
0x5A7	SWAP1
0x5BE	PUSH(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x5A1) / POP(@0x5A6))
0x5BF	SWAP1
0x5C0	DUP1
0x5C6	POP(0x0)
0x5C7	PUSH(SLOAD(0x1 + POP(@0x592)))
0x5C8	SWAP1
0x5C9	POP()
0x5CA	DUP3
0x5CB	JUMP(POP(:label6))

:label32
# Stack: [:label8 @0x2D]
0x5CD	PUSH(0x4)
0x5CF	PUSH(0x0)
0x5D1	SWAP1
0x5D2	PUSH(SLOAD(POP(0x4)))
0x5D3	SWAP1
0x5D7	PUSH(0x100 ** POP(0x0))
0x5D8	SWAP1
0x5EF	PUSH(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x5D2) / POP(@0x5D7))
0x5F0	DUP2
0x5F1	JUMP(POP(:label8))

:label33
# Stack: [:label10 @0x2D]
0x5F7	POP(0x0)
0x5F8	PUSH(SLOAD(0x2))
0x5F9	DUP2
0x5FA	JUMP(POP(:label10))

:label34
# Stack: [:label12 @0x2D]
0x600	POP(0x0)
0x601	PUSH(SLOAD(0x1))
0x602	DUP2
0x603	JUMP(POP(:label12))

:label35
# Stack: [:label14 @0x2D]
0x609	POP(0x0)
0x60A	PUSH(SLOAD(0x3))
0x60B	DUP2
0x60C	JUMP(POP(:label14))

:label36
# Stack: [:label16 @0x2D]
0x60E	PUSH(0x4)
0x610	PUSH(0x0)
0x612	SWAP1
0x613	PUSH(SLOAD(POP(0x4)))
0x614	SWAP1
0x618	PUSH(0x100 ** POP(0x0))
0x619	SWAP1
0x663	JUMPI(:label38, !(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & CALLER() == 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x613) / POP(@0x618)))

# Stack: [:label16 @0x2D]
0x66A	POP(0x0)
0x671	JUMPI(:label37, !(SLOAD(0x2) == 0x0))

# Stack: [:label16 @0x2D]
0x675	JUMP(:label38)

:label37
# Stack: [:label16 @0x2D]
0x677	PUSH(0x4)
0x679	PUSH(0x0)
0x67B	SWAP1
0x67C	PUSH(SLOAD(POP(0x4)))
0x67D	SWAP1
0x681	PUSH(0x100 ** POP(0x0))
0x682	SWAP1
0x6AF	PUSH(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & POP(@0x67C) / POP(@0x681))
0x6B0	PUSH(0x0)
0x6B6	POP(0x0)
0x6B7	PUSH(SLOAD(0x2))
0x6BA	PUSH(MLOAD(0x40))
0x6BB	DUP1
0x6BC	SWAP1
0x6BD	POP()
0x6C2	PUSH(MLOAD(0x40))
0x6C3	DUP1
0x6C4	DUP3
0x6C6	DUP1
0x6C7	DUP4
0x6C8	DUP7
0x6C9	DUP7
0x6CA	PUSH(CALL(POP(0x0), POP(@0x6AF), POP(@0x6B7), POP(@0x6C2), POP(@0x6BA) - POP(@0x6C2), POP(@0x6C2), 0x0))
0x6CB	SWAP4
0x6CC	POP()
0x6CD	POP()
0x6CE	POP()
0x6CF	POP()
0x6D0	POP()
0x6D1	PUSH(0x0)
0x6D3	PUSH(0x2)
0x6D7	POP(0x0)
0x6D8	DUP1
0x6D9	SWAP1
0x6DA	SSTORE(POP(0x2), POP(0x0))
0x6DB	POP()

:label38
# Stack: [:label16 @0x2D]
0x6DE	JUMP(POP(:label16))


