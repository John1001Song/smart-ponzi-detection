# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0xA0BC572B)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label2, 0xAD7A672F == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label3, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label4, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x41	PUSH(:label6)
0x44	PUSH(:label7)
0x4A	JUMP(:label5)

:label1
# Stack: [@0x13]
0x4C	PUSH(:label8)
0x51	PUSH(CALLDATALOAD(0x4))
0x52	PUSH(0x0)
0x54	DUP1
0x55	PUSH(SLOAD(POP(0x0)))
0x56	DUP2
0x57	SWAP1
0x58	DUP2
0x5E	JUMPI(0x2, !(POP(@0x51) < POP(@0x55)))

# Stack: [@0x51 0x0 @0x51 :label8 @0x13]
0x5F	POP()
0x60	DUP1
0x61	MSTORE(POP(0x0), POP(0x0))
0x64	PUSH(0x2 * POP(@0x51))
0x86	DUP1
0x88	PUSH(SLOAD(POP(@0x64) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0x89	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564)
0xAA	SWAP1
0xAB	SWAP1
0xAC	SWAP2
0xAE	PUSH(SLOAD(POP(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564) + POP(@0x64)))
0xB6	PUSH(0x2 ** 0xA0 - 0x1)
0xB7	SWAP2
0xB8	SWAP1
0xB9	SWAP2
0xBA	PUSH(POP(@0xB6) & POP(@0x88))
0xBB	SWAP1
0xBC	DUP3
0xBD	JUMP(POP(:label8))

:label2
# Stack: [@0x13]
0xBF	PUSH(:label9)
0xC4	PUSH(SLOAD(0x2))
0xC5	DUP2
0xC6	JUMP(POP(:label9))

:label3
# Stack: [@0x13]
0xC8	PUSH(:label9)
0xCD	PUSH(SLOAD(0x1))
0xCE	DUP2
0xCF	JUMP(POP(:label9))

:label4
# Stack: [@0x13]
0xD1	PUSH(:label6)

:label5
# Stack: [[:label7 | :label6] [:label6 | @0x13]]
0xD5	PUSH(0x0)
0xD7	DUP1
0xD8	DUP1
0xE7	JUMPI(:label12, CALLVALUE() == 0xDE0B6B3A7640000)

# Stack: [0x0 0x0 0x0 [:label7 | :label6] [:label6 | @0x13]]
0xEA	PUSH(MLOAD(0x40))
0xF4	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0xF5	SWAP1
0xF6	DUP3
0xF7	SWAP1
0xF8	PUSH(CALLVALUE())
0xF9	SWAP1
0xFA	DUP3
0xFB	DUP2
0xFC	DUP2
0xFD	DUP2
0xFE	DUP6
0xFF	DUP9
0x100	DUP4
0x101	PUSH(CALL(POP(0x0), POP(@0xF4), POP(@0xF8), POP(@0xEA), POP(0x0), POP(@0xEA), POP(0x0)))
0x102	SWAP4
0x103	POP()
0x104	POP()
0x105	POP()
0x106	POP()
0x107	POP()
0x10B	JUMP(:label11)

:label6
# Stack: []
0x10D	STOP()

:label7
# Stack: [:label6]
0x10F	JUMP(POP(:label6))

:label8
# Stack: [@0xAE @0xBA :label8 @0x13]
0x113	PUSH(MLOAD(0x40))
0x114	DUP1
0x115	DUP4
0x11F	DUP1
0x120	MSTORE(POP(@0x113), 0x2 ** 0xA0 - 0x1 & POP(@0xBA))
0x123	PUSH(0x20 + POP(@0x113))
0x124	DUP3
0x125	DUP2
0x126	MSTORE(POP(@0x123), POP(@0xAE))
0x129	PUSH(0x20 + POP(@0x123))
0x12A	SWAP3
0x12B	POP()
0x12C	POP()
0x12D	POP()
0x130	PUSH(MLOAD(0x40))
0x131	DUP1
0x132	SWAP2
0x133	PUSH(POP(@0x129) - POP(@0x130))
0x134	SWAP1
0x135	RETURN(POP(@0x130), POP(@0x133))

:label9
# Stack: [[@0xC4 | @0xCD] [:label9 | :label9] @0x13]
0x137	PUSH(0x40)
0x139	DUP1
0x13A	PUSH(MLOAD(POP(0x40)))
0x13B	SWAP2
0x13C	DUP3
0x13D	MSTORE(POP(@0x13A), POP())
0x13E	PUSH(MLOAD(POP(0x40)))
0x13F	SWAP1
0x140	DUP2
0x141	SWAP1
0x145	PUSH(0x20 + POP(@0x13A) - POP(@0x13E))
0x146	SWAP1
0x147	RETURN(POP(@0x13E), POP(@0x145))

:label10
# Stack: [@0x15C [@0x302 | 0x0] [@0x2A5 | 0x0] [:label7 | :label6] [:label6 | @0x13]]
0x149	PUSH(0x2)
0x14B	DUP1
0x14E	PUSH(CALLVALUE() + SLOAD(POP(0x2)))
0x14F	SWAP1
0x150	SSTORE(POP(0x2), POP(@0x14E))

:label11
# Stack: [[0x0 | @0x15C] [0x0 | @0x302 | 0x0] [0x0 | @0x2A5] [:label7 | :label6] [:label6 | @0x13]]
0x152	POP()
0x153	POP()
0x154	POP()
0x155	JUMP(POP())

:label12
# Stack: [0x0 0x0 0x0 [:label7 | :label6] [@0x13 | :label6]]
0x157	POP()
0x158	POP()
0x159	PUSH(0x0)
0x15B	DUP1
0x15C	PUSH(SLOAD(POP(0x0)))
0x15F	DUP1
0x160	PUSH(POP(@0x15C) + 0x1)
0x161	DUP1
0x162	DUP4
0x163	SSTORE(POP(0x0), POP(@0x160))
0x164	DUP3
0x165	DUP2
0x166	DUP4
0x167	DUP1
0x168	PUSH(!POP(@0x15C))
0x169	DUP2
0x16A	SWAP1
0x16F	JUMPI(:label14, POP(@0x168) > POP(@0x160))

# Stack: [@0x15C @0x160 0x0 @0x160 @0x15C 0x0 0x0 [:label6 | :label7] [:label6 | @0x13]]
0x172	PUSH(0x2 * POP(@0x15C))
0x173	DUP1
0x177	DUP2
0x17A	MSTORE(0x0, POP(0x0))
0x17F	PUSH(SHA3(0x0, 0x20))
0x180	SWAP1
0x181	DUP2
0x182	PUSH(POP(@0x17F) + POP(@0x172))
0x183	SWAP1
0x184	PUSH(POP(@0x17F) + 0x2 * POP(@0x160))
0x185	PUSH(:label14)
0x188	SWAP2
0x189	SWAP1

:label13
# Stack: [[@0x184 | @0x1B5] @0x182 :label14 @0x160 0x0 @0x160 @0x15C 0x0 0x0 [:label7 | :label6] [:label6 | @0x13]]
0x18B	DUP1
0x18C	DUP3
0x192	JUMPI(:label16, !(POP(@0x182) > POP()))

# Stack: [[@0x1B5 | @0x184] @0x182 :label14 @0x160 0x0 @0x160 @0x15C 0x0 0x0 [:label7 | :label6] [:label6 | @0x13]]
0x193	DUP1
0x1AC	DUP1
0x1AD	SSTORE(POP(), ~0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & SLOAD(POP()))
0x1AE	PUSH(0x0)
0x1B0	PUSH(0x1)
0x1B2	SWAP1
0x1B3	SWAP1
0x1B4	SWAP2
0x1B5	PUSH(POP(0x1) + POP())
0x1B6	SWAP1
0x1B7	DUP2
0x1B8	SSTORE(POP(@0x1B5), POP(0x0))
0x1BC	JUMP(:label13)

:label14
# Stack: [[@0x15C | @0x182] @0x160 0x0 @0x160 @0x15C 0x0 0x0 [:label7 | :label6] [:label6 | @0x13]]
0x1BE	POP()
0x1BF	POP()
0x1C0	POP()
0x1C1	POP()
0x1C2	PUSH(CALLER())
0x1C3	PUSH(0x0)
0x1C7	POP(0x0)
0x1C8	DUP3
0x1C9	DUP2
0x1CB	DUP1
0x1D1	JUMPI(0x2, !(POP(@0x15C) < SLOAD(POP(0x0))))

# Stack: [@0x15C 0x0 @0x1C2 @0x15C 0x0 0x0 [:label7 | :label6] [:label6 | @0x13]]
0x1D2	DUP2
0x1D3	DUP1
0x1D4	MSTORE(POP(0x0), POP(0x0))
0x1F9	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x15C))
0x1FA	DUP1
0x212	PUSH(~0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & SLOAD(POP(@0x1F9)))
0x213	SWAP1
0x214	SWAP3
0x215	PUSH(POP(@0x1C2) | POP(@0x212))
0x216	SWAP1
0x217	SWAP2
0x218	SSTORE(POP(@0x1F9), POP(@0x215))
0x219	DUP1
0x21A	PUSH(SLOAD(POP(0x0)))
0x21B	PUSH(CALLVALUE())
0x21C	SWAP1
0x21D	SWAP1
0x21E	DUP4
0x21F	SWAP1
0x220	DUP2
0x226	JUMPI(0x2, !(POP(@0x15C) < POP(@0x21A)))

# Stack: [@0x15C 0x0 @0x21B @0x15C 0x0 0x0 [:label7 | :label6] [@0x13 | :label6]]
0x24B	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 + 0x2 * POP(@0x15C))
0x24C	DUP2
0x24D	SWAP1
0x24E	SSTORE(POP(@0x24B), POP(@0x21B))
0x24F	POP()
0x250	PUSH(0x1)
0x252	DUP1
0x253	PUSH(SLOAD(POP(0x1)))
0x254	SWAP1
0x255	SWAP2
0x256	PUSH(POP(@0x21B) + POP(@0x253))
0x257	SWAP1
0x258	SSTORE(POP(0x1), POP(@0x256))

:label15
# Stack: [@0x15C [0x0 | @0x302] [0x0 | @0x2A5] [:label7 | :label6] [@0x13 | :label6]]
0x25A	DUP1
0x25B	DUP3
0x261	JUMPI(:label10, !(POP() < POP(@0x15C)))

# Stack: [@0x15C [0x0 | @0x302] [0x0 | @0x2A5] [:label7 | :label6] [:label6 | @0x13]]
0x264	PUSH(SLOAD(0x2))
0x265	PUSH(0x0)
0x267	DUP1
0x268	PUSH(SLOAD(POP(0x0)))
0x269	DUP4
0x26A	SWAP1
0x26B	DUP2
0x271	JUMPI(0x2, !(POP() < POP(@0x268)))

# Stack: [[0x0 | @0x302] 0x0 @0x264 @0x15C [0x0 | @0x302] [0x0 | @0x2A5] [:label7 | :label6] [:label6 | @0x13]]
0x272	DUP2
0x273	DUP1
0x274	MSTORE(POP(0x0), POP(0x0))
0x275	DUP2
0x276	PUSH(SLOAD(POP(0x0)))
0x277	PUSH(0x2)
0x279	SWAP1
0x27A	SWAP1
0x27B	SWAP2
0x2A1	PUSH(CALLVALUE() * SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 + POP(0x2) * POP()))
0x2A2	SWAP3
0x2A3	SWAP1
0x2A4	SWAP3
0x2A5	PUSH(POP(@0x2A1) / POP(@0x264))
0x2A6	SWAP5
0x2A7	POP()
0x2A8	SWAP1
0x2A9	DUP4
0x2AA	SWAP1
0x2AB	DUP2
0x2B1	JUMPI(0x2, !(POP() < POP(@0x276)))

# Stack: [[0x0 | @0x302] 0x0 @0x15C [0x0 | @0x302] @0x2A5 [:label7 | :label6] [:label6 | @0x13]]
0x2B4	PUSH(MLOAD(0x40))
0x2B5	PUSH(0x2)
0x2B7	SWAP2
0x2B8	SWAP1
0x2B9	SWAP2
0x2E6	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP()))
0x2E7	SWAP2
0x2E8	SWAP1
0x2E9	DUP6
0x2EA	SWAP1
0x2EB	DUP3
0x2EC	DUP2
0x2ED	DUP2
0x2EE	DUP2
0x2EF	DUP6
0x2F0	DUP9
0x2F1	DUP4
0x2F2	PUSH(CALL(POP(0x0), POP(@0x2E6), POP(@0x2A5), POP(@0x2B4), POP(0x0), POP(@0x2B4), POP(0x0)))
0x2F3	POP()
0x2F4	POP()
0x2F5	PUSH(0x1)
0x2F7	DUP1
0x2F8	PUSH(SLOAD(POP(0x1)))
0x2F9	SWAP2
0x2FA	SWAP1
0x2FB	SWAP2
0x2FD	DUP1
0x2FE	SSTORE(POP(0x1), POP(@0x2F8) - POP(@0x2A5))
0x2FF	SWAP4
0x300	SWAP1
0x301	SWAP4
0x302	PUSH(POP(0x1) + POP())
0x303	SWAP3
0x304	POP()
0x305	PUSH(:label15)
0x308	SWAP1
0x309	POP()
0x30A	JUMP(POP(:label15))

:label16
# Stack: [[@0x1B5 | @0x184] @0x182 :label14 @0x160 0x0 @0x160 @0x15C 0x0 0x0 [:label7 | :label6] [:label6 | @0x13]]
0x30C	POP()
0x30D	SWAP1
0x30E	JUMP(POP(:label14))


