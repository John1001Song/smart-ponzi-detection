# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label11)
0x65	PUSH(:label12)
0x6B	JUMP(:label9)

:label1
# Stack: [@0x13]
0x6D	PUSH(:label11)
0x72	PUSH(CALLDATALOAD(0x4))
0x75	PUSH(SLOAD(0x4))
0x7D	PUSH(0x2 ** 0xA0 - 0x1)
0x7E	SWAP1
0x7F	DUP2
0x80	PUSH(POP(@0x7D) & POP(@0x75))
0x81	PUSH(CALLER())
0x82	SWAP1
0x83	SWAP1
0x84	SWAP2
0x8B	JUMPI(:label2, !(POP(@0x81) & POP(@0x7D) == POP(@0x80)))

# Stack: [@0x72 :label11 @0x13]
0x8C	PUSH(0x4)
0x8E	DUP1
0x9A	DUP2
0x9B	PUSH(POP(@0x72) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0x9C	SWAP1
0x9D	SSTORE(POP(0x4), POP(@0x9B))

:label2
# Stack: [@0x72 :label11 @0x13]
0x9F	POP()
0xA0	JUMP(POP(:label11))

:label3
# Stack: [@0x13]
0xA2	PUSH(:label13)
0xB0	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0xB1	DUP2
0xB2	JUMP(POP(:label13))

:label4
# Stack: [@0x13]
0xB4	PUSH(:label14)
0xB9	PUSH(SLOAD(0x2))
0xBA	DUP2
0xBB	JUMP(POP(:label14))

:label5
# Stack: [@0x13]
0xBD	PUSH(:label15)
0xC2	PUSH(CALLDATALOAD(0x4))
0xC3	PUSH(0x0)
0xC5	DUP1
0xC6	PUSH(SLOAD(POP(0x0)))
0xC7	DUP2
0xC8	SWAP1
0xC9	DUP2
0xCF	JUMPI(0x2, !(POP(@0xC2) < POP(@0xC6)))

# Stack: [@0xC2 0x0 @0xC2 :label15 @0x13]
0xD0	POP()
0xD1	DUP1
0xD2	MSTORE(POP(0x0), POP(0x0))
0xD5	PUSH(0x2 * POP(@0xC2))
0xF7	DUP1
0xF9	PUSH(SLOAD(POP(@0xD5) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0xFA	PUSH(0x0)
0xFC	DUP1
0x103	DUP1
0x104	CODECOPY(POP(0x0), 0x3C6, 0x20)
0x105	DUP1
0x106	PUSH(MLOAD(POP(0x0)))
0x107	SWAP1
0x108	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x109	SWAP1
0x10A	SWAP1
0x10B	SWAP2
0x10D	PUSH(SLOAD(POP(@0x106) + POP(@0xD5)))
0x115	PUSH(0x2 ** 0xA0 - 0x1)
0x116	SWAP2
0x117	SWAP1
0x118	SWAP2
0x119	PUSH(POP(@0x115) & POP(@0xF9))
0x11A	SWAP1
0x11B	DUP3
0x11C	JUMP(POP(:label15))

:label6
# Stack: [@0x13]
0x11E	PUSH(:label14)
0x123	PUSH(SLOAD(0x1))
0x124	DUP2
0x125	JUMP(POP(:label14))

:label7
# Stack: [@0x13]
0x127	PUSH(:label14)
0x12C	PUSH(SLOAD(0x3))
0x12D	DUP2
0x12E	JUMP(POP(:label14))

:label8
# Stack: [@0x13]
0x130	PUSH(:label11)

:label9
# Stack: [[:label12 | :label11] [:label11 | @0x13]]
0x134	PUSH(0x0)
0x136	PUSH(0x0)
0x138	PUSH(0x0)
0x142	JUMPI(:label16, !(CALLVALUE() < 0x0))

# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x145	PUSH(MLOAD(0x40))
0x14F	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x150	SWAP1
0x151	DUP3
0x152	SWAP1
0x153	PUSH(CALLVALUE())
0x154	SWAP1
0x155	DUP3
0x156	DUP2
0x157	DUP2
0x158	DUP2
0x159	DUP6
0x15A	DUP9
0x15B	DUP4
0x15C	PUSH(CALL(POP(0x0), POP(@0x14F), POP(@0x153), POP(@0x145), POP(0x0), POP(@0x145), POP(0x0)))
0x15D	POP()
0x15E	POP()
0x15F	POP()
0x160	POP()
0x161	POP()

:label10
# Stack: [[0x0 | @0x35A] [0x0 | @0x214] [0x0 | 0x4563918244F40000 | @0x20D] [:label12 | :label11] [:label11 | @0x13]]
0x163	POP()
0x164	POP()
0x165	POP()
0x166	JUMP(POP())

:label11
# Stack: []
0x168	STOP()

:label12
# Stack: [:label11]
0x16A	JUMP(POP(:label11))

:label13
# Stack: [@0xB0 :label13 @0x13]
0x16C	PUSH(0x40)
0x16E	DUP1
0x16F	PUSH(MLOAD(POP(0x40)))
0x177	PUSH(0x2 ** 0xA0 - 0x1)
0x178	SWAP3
0x179	SWAP1
0x17A	SWAP3
0x17C	DUP2
0x17D	MSTORE(POP(@0x16F), POP(@0x177) & POP(@0xB0))
0x17E	PUSH(MLOAD(POP(0x40)))
0x17F	SWAP1
0x180	DUP2
0x181	SWAP1
0x185	PUSH(0x20 + POP(@0x16F) - POP(@0x17E))
0x186	SWAP1
0x187	RETURN(POP(@0x17E), POP(@0x185))

:label14
# Stack: [[@0x12C | @0x123 | @0xB9] [:label14 | :label14 | :label14] @0x13]
0x189	PUSH(0x40)
0x18B	DUP1
0x18C	PUSH(MLOAD(POP(0x40)))
0x18D	SWAP2
0x18E	DUP3
0x18F	MSTORE(POP(@0x18C), POP())
0x190	PUSH(MLOAD(POP(0x40)))
0x191	SWAP1
0x192	DUP2
0x193	SWAP1
0x197	PUSH(0x20 + POP(@0x18C) - POP(@0x190))
0x198	SWAP1
0x199	RETURN(POP(@0x190), POP(@0x197))

:label15
# Stack: [@0x10D @0x119 :label15 @0x13]
0x19D	PUSH(MLOAD(0x40))
0x19E	DUP1
0x19F	DUP4
0x1A9	DUP1
0x1AA	MSTORE(POP(@0x19D), 0x2 ** 0xA0 - 0x1 & POP(@0x119))
0x1AD	PUSH(0x20 + POP(@0x19D))
0x1AE	DUP3
0x1AF	DUP2
0x1B0	MSTORE(POP(@0x1AD), POP(@0x10D))
0x1B3	PUSH(0x20 + POP(@0x1AD))
0x1B4	SWAP3
0x1B5	POP()
0x1B6	POP()
0x1B7	POP()
0x1BA	PUSH(MLOAD(0x40))
0x1BB	DUP1
0x1BC	SWAP2
0x1BD	PUSH(POP(@0x1B3) - POP(@0x1BA))
0x1BE	SWAP1
0x1BF	RETURN(POP(@0x1BA), POP(@0x1BD))

:label16
# Stack: [0x0 0x0 0x0 [:label11 | :label12] [:label11 | @0x13]]
0x1D0	JUMPI(:label17, !(CALLVALUE() > 0x4563918244F40000))

# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x1D3	PUSH(MLOAD(0x40))
0x1DD	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x1DE	SWAP1
0x1DF	PUSH(0x0)
0x1E1	SWAP1
0x1ED	PUSH(CALLVALUE() + ~0x4563918244F3FFFF)
0x1EE	SWAP1
0x1EF	DUP3
0x1F0	DUP2
0x1F1	DUP2
0x1F2	DUP2
0x1F3	DUP6
0x1F4	DUP9
0x1F5	DUP4
0x1F6	PUSH(CALL(POP(0x0), POP(@0x1DD), POP(@0x1ED), POP(@0x1D3), POP(0x0), POP(@0x1D3), POP(0x0)))
0x1F7	POP()
0x1F8	PUSH(0x4563918244F40000)
0x201	SWAP7
0x202	POP()
0x203	PUSH(:label18)
0x206	SWAP4
0x207	POP()
0x208	POP()
0x209	POP()
0x20A	POP()
0x20B	JUMP(POP(:label18))

:label17
# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x20D	PUSH(CALLVALUE())
0x20E	SWAP3
0x20F	POP()

:label18
# Stack: [0x0 0x0 [0x4563918244F40000 | @0x20D] [:label12 | :label11] [:label11 | @0x13]]
0x211	PUSH(0x0)
0x213	DUP1
0x214	PUSH(SLOAD(POP(0x0)))
0x217	DUP1
0x218	PUSH(POP(@0x214) + 0x1)
0x219	DUP1
0x21A	DUP4
0x21B	SSTORE(POP(0x0), POP(@0x218))
0x21C	SWAP1
0x21D	SWAP4
0x21E	POP()
0x21F	SWAP1
0x220	DUP2
0x221	DUP5
0x222	DUP1
0x223	PUSH(!POP(@0x214))
0x224	DUP2
0x225	SWAP1
0x22A	JUMPI(:label20, POP(@0x223) > POP(@0x218))

# Stack: [@0x214 @0x218 0x0 @0x218 0x0 @0x214 [0x4563918244F40000 | @0x20D] [:label12 | :label11] [:label11 | @0x13]]
0x22D	PUSH(0x2 * POP(@0x214))
0x22E	DUP1
0x232	DUP2
0x235	MSTORE(0x0, POP(0x0))
0x23A	PUSH(SHA3(0x0, 0x20))
0x23B	SWAP1
0x23C	DUP2
0x23D	PUSH(POP(@0x23A) + POP(@0x22D))
0x23E	SWAP1
0x23F	PUSH(POP(@0x23A) + 0x2 * POP(@0x218))
0x240	PUSH(:label20)
0x243	SWAP2
0x244	SWAP1

:label19
# Stack: [[@0x23F | @0x263] @0x23D :label20 @0x218 0x0 @0x218 0x0 @0x214 [0x4563918244F40000 | @0x20D] [:label12 | :label11] [:label11 | @0x13]]
0x246	DUP1
0x247	DUP3
0x24D	JUMPI(:label22, !(POP(@0x23D) > POP()))

# Stack: [[@0x23F | @0x263] @0x23D :label20 @0x218 0x0 @0x218 0x0 @0x214 [0x4563918244F40000 | @0x20D] [:label12 | :label11] [:label11 | @0x13]]
0x24E	DUP1
0x25A	DUP1
0x25B	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x25C	PUSH(0x0)
0x25E	PUSH(0x1)
0x260	SWAP1
0x261	SWAP1
0x262	SWAP2
0x263	PUSH(POP(0x1) + POP())
0x264	SWAP1
0x265	DUP2
0x266	SSTORE(POP(@0x263), POP(0x0))
0x26A	JUMP(:label19)

:label20
# Stack: [[@0x214 | @0x23D] @0x218 0x0 @0x218 0x0 @0x214 [0x4563918244F40000 | @0x20D] [:label11 | :label12] [@0x13 | :label11]]
0x26C	POP()
0x26D	POP()
0x26E	POP()
0x26F	POP()
0x270	PUSH(CALLER())
0x271	PUSH(0x0)
0x275	POP(0x0)
0x276	DUP4
0x277	DUP2
0x279	DUP1
0x27F	JUMPI(0x2, !(POP(@0x214) < SLOAD(POP(0x0))))

# Stack: [@0x214 0x0 @0x270 0x0 @0x214 [0x4563918244F40000 | @0x20D] [:label12 | :label11] [:label11 | @0x13]]
0x280	DUP2
0x281	DUP1
0x282	MSTORE(POP(0x0), POP(0x0))
0x2A7	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x214))
0x2A8	DUP1
0x2B3	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2A7)))
0x2B4	SWAP1
0x2B5	SWAP3
0x2B6	PUSH(POP(@0x270) | POP(@0x2B3))
0x2B7	SWAP1
0x2B8	SWAP2
0x2B9	SSTORE(POP(@0x2A7), POP(@0x2B6))
0x2BA	DUP1
0x2BB	PUSH(SLOAD(POP(0x0)))
0x2BC	DUP4
0x2BD	SWAP1
0x2BE	SWAP1
0x2BF	DUP5
0x2C0	SWAP1
0x2C1	DUP2
0x2C7	JUMPI(0x2, !(POP(@0x214) < POP(@0x2BB)))

# Stack: [@0x214 0x0 [0x4563918244F40000 | @0x20D] 0x0 @0x214 [0x4563918244F40000 | @0x20D] [:label12 | :label11] [:label11 | @0x13]]
0x2CB	PUSH(0x0)
0x2CD	DUP1
0x2D4	DUP1
0x2D5	CODECOPY(POP(0x0), 0x3C6, 0x20)
0x2D6	DUP1
0x2D7	PUSH(MLOAD(POP(0x0)))
0x2D8	SWAP1
0x2D9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2DA	PUSH(POP(@0x2D7) + 0x2 * POP(@0x214))
0x2DB	SWAP2
0x2DC	SWAP1
0x2DD	SWAP2
0x2DE	SSTORE(POP(@0x2DA), POP())
0x2DF	POP()
0x2E0	PUSH(0x3)
0x2E2	DUP1
0x2E4	DUP4
0x2E5	PUSH(POP() + SLOAD(POP(0x3)))
0x2E6	SWAP1
0x2E7	SSTORE(POP(0x3), POP(@0x2E5))

:label21
# Stack: [[0x0 | @0x35A] @0x214 [0x4563918244F40000 | @0x20D] [:label12 | :label11] [:label11 | @0x13]]
0x2EB	PUSH(SLOAD(0x1))
0x2EC	PUSH(0x0)
0x2EE	DUP1
0x2EF	PUSH(SLOAD(POP(0x0)))
0x2F0	PUSH(0x64)
0x2F2	SWAP2
0x2F3	SWAP1
0x2F4	DUP2
0x2FA	JUMPI(0x2, !(POP(@0x2EB) < POP(@0x2EF)))

# Stack: [@0x2EB 0x0 0x64 [0x0 | @0x35A] @0x214 [0x4563918244F40000 | @0x20D] [:label12 | :label11] [:label11 | @0x13]]
0x2FB	SWAP1
0x2FC	DUP1
0x2FD	MSTORE(POP(0x0), POP(0x0))
0x300	PUSH(SLOAD(0x3))
0x301	PUSH(0x2)
0x303	SWAP1
0x304	SWAP1
0x305	SWAP2
0x307	PUSH(0x0)
0x309	DUP1
0x310	DUP1
0x311	CODECOPY(POP(0x0), 0x3C6, 0x20)
0x312	DUP1
0x313	PUSH(MLOAD(POP(0x0)))
0x314	SWAP1
0x315	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x317	PUSH(SLOAD(POP(@0x313) + POP(0x2) * POP(@0x2EB)))
0x318	SWAP2
0x319	SWAP1
0x31A	SWAP2
0x31E	PUSH(0xC8 * POP(@0x317) / POP(0x64))
0x31F	SWAP1
0x325	JUMPI(:label10, !(POP(@0x300) > POP(@0x31E)))

# Stack: [[0x0 | @0x35A] @0x214 [@0x20D | 0x4563918244F40000] [:label12 | :label11] [:label11 | @0x13]]
0x328	PUSH(SLOAD(0x1))
0x329	PUSH(0x0)
0x32B	DUP1
0x32C	PUSH(SLOAD(POP(0x0)))
0x32D	PUSH(0x64)
0x32F	SWAP2
0x330	SWAP1
0x331	DUP2
0x337	JUMPI(0x2, !(POP(@0x328) < POP(@0x32C)))

# Stack: [@0x328 0x0 0x64 [0x0 | @0x35A] @0x214 [0x4563918244F40000 | @0x20D] [:label12 | :label11] [:label11 | @0x13]]
0x33A	PUSH(SLOAD(0x1))
0x33B	DUP3
0x33C	PUSH(SLOAD(POP(0x0)))
0x33D	PUSH(0x2)
0x33F	SWAP2
0x340	SWAP1
0x341	SWAP3
0x343	PUSH(0x0)
0x345	DUP1
0x34C	DUP1
0x34D	CODECOPY(POP(0x0), 0x3C6, 0x20)
0x34E	DUP1
0x34F	PUSH(MLOAD(POP(0x0)))
0x350	SWAP1
0x351	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x353	PUSH(SLOAD(POP(@0x34F) + POP(0x2) * POP(@0x328)))
0x354	SWAP4
0x355	SWAP1
0x356	SWAP4
0x35A	PUSH(0xC8 * POP(@0x353) / POP(0x64))
0x35B	SWAP4
0x35C	POP()
0x35D	SWAP1
0x35E	SWAP2
0x35F	SWAP1
0x360	DUP2
0x366	JUMPI(0x2, !(POP(@0x33A) < POP(@0x33C)))

# Stack: [@0x33A 0x0 @0x35A @0x214 [@0x20D | 0x4563918244F40000] [:label12 | :label11] [:label11 | @0x13]]
0x369	PUSH(MLOAD(0x40))
0x36A	PUSH(0x2)
0x36C	SWAP2
0x36D	SWAP1
0x36E	SWAP2
0x39B	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP(@0x33A)))
0x39C	SWAP2
0x39D	SWAP1
0x39E	DUP4
0x39F	SWAP1
0x3A0	DUP3
0x3A1	DUP2
0x3A2	DUP2
0x3A3	DUP2
0x3A4	DUP6
0x3A5	DUP9
0x3A6	DUP4
0x3A7	PUSH(CALL(POP(0x0), POP(@0x39B), POP(@0x35A), POP(@0x369), POP(0x0), POP(@0x369), POP(0x0)))
0x3A8	POP()
0x3A9	POP()
0x3AA	PUSH(0x3)
0x3AC	DUP1
0x3AD	PUSH(SLOAD(POP(0x3)))
0x3AE	SWAP2
0x3AF	SWAP1
0x3B0	SWAP2
0x3B1	PUSH(POP(@0x3AD) - POP(@0x35A))
0x3B2	SWAP1
0x3B3	SSTORE(POP(0x3), POP(@0x3B1))
0x3B4	POP()
0x3B5	POP()
0x3B6	PUSH(0x1)
0x3B8	DUP1
0x3BA	DUP1
0x3BB	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x3BC	SWAP1
0x3BD	SSTORE(POP(0x1), POP(@0x3BB))
0x3C1	JUMP(:label21)

:label22
# Stack: [[@0x263 | @0x23F] @0x23D :label20 @0x218 0x0 @0x218 0x0 @0x214 [0x4563918244F40000 | @0x20D] [:label12 | :label11] [@0x13 | :label11]]
0x3C3	POP()
0x3C4	SWAP1
0x3C5	JUMP(POP(:label20))


