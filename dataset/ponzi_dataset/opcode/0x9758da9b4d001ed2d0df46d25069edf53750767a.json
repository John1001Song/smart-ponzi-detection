# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x53850DB3)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label2, 0xAD605729 == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label3, 0xD014C01F == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label7, 0xE837AB59 == POP(@0x13))

:label0
# Stack: []
0x41	PUSH(:label8)
0x46	PUSH(SLOAD(0x2))
0x4E	PUSH(0x2 ** 0xA0 - 0x1)
0x50	DUP1
0x51	PUSH(POP(@0x4E) & CALLER())
0x52	SWAP1
0x53	SWAP1
0x54	SWAP2
0x55	PUSH(POP(@0x51) % POP(@0x46))
0x56	PUSH(0x0)
0x58	DUP2
0x59	DUP2
0x5A	MSTORE(POP(0x0), POP(@0x55))
0x5F	MSTORE(0x20, 0x1)
0x60	PUSH(0x40)
0x62	SWAP1
0x64	PUSH(SLOAD(SHA3(POP(0x0), POP(0x40))))
0x65	SWAP1
0x66	SWAP2
0x67	PUSH(:label9)
0x6A	SWAP2
0x6B	PUSH(POP(@0x64) & POP(@0x4E))
0x6F	JUMP(:label4)

:label1
# Stack: [@0x13]
0x71	PUSH(:label10)
0x76	PUSH(CALLDATALOAD(0x4))
0x77	PUSH(0x0)
0x79	PUSH(0x0)
0x7B	PUSH(0x0)
0x7D	PUSH(0x0)
0x83	POP(0x0)
0x85	DUP5
0x8C	JUMPI(:label11, !!(POP(@0x76) < SLOAD(0x2)))

# Stack: [0x0 0x0 0x0 0x0 @0x76 :label10 @0x13]
0x90	JUMP(:label12)

:label2
# Stack: [@0x13]
0x94	PUSH(SLOAD(0x2))
0x95	PUSH(0x40)
0x97	DUP1
0x98	PUSH(MLOAD(POP(0x40)))
0x99	SWAP2
0x9A	DUP3
0x9B	MSTORE(POP(@0x98), POP(@0x94))
0x9C	PUSH(MLOAD(POP(0x40)))
0x9D	SWAP1
0x9E	DUP2
0x9F	SWAP1
0xA3	PUSH(0x20 + POP(@0x98) - POP(@0x9C))
0xA4	SWAP1
0xA5	RETURN(POP(@0x9C), POP(@0xA3))

:label3
# Stack: [@0x13]
0xA7	PUSH(:label8)
0xAC	PUSH(CALLDATALOAD(0x4))

:label4
# Stack: [[@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0xAE	PUSH(CALLVALUE())
0xAF	PUSH(0x0)
0xB1	DUP1
0xB2	DUP1
0xB3	DUP1
0xBD	DUP5
0xBE	PUSH(POP(@0xAE) < 0xDE0B6B3A7640000)
0xBF	DUP1
0xC3	JUMPI(:label5, POP(@0xBE))

# Stack: [@0xBE 0x0 0x0 0x0 0x0 @0xAE [@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0xC4	POP()
0xCC	PUSH(0x2 ** 0xA0 - 0x1)
0xCE	DUP1
0xD0	DUP2
0xD1	MSTORE(POP(0x0), POP(@0xCC) & CALLER())
0xD2	PUSH(0x20)
0xD4	DUP2
0xD5	SWAP1
0xD6	MSTORE(POP(0x20), POP(0x0))
0xD9	DUP2
0xDD	DUP1
0xDF	PUSH(!(POP(0x0) == SLOAD(SHA3(POP(0x0), 0x40)) & POP(@0xCC)))

:label5
# Stack: [[@0xDF | @0xBE] 0x0 0x0 0x0 0x0 @0xAE [@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0xE1	DUP1
0xE5	JUMPI(:label6, POP())

# Stack: [[@0xDF | @0xBE] 0x0 0x0 0x0 0x0 @0xAE [@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0xE6	POP()
0xEE	PUSH(0x2 ** 0xA0 - 0x1)
0xEF	DUP7
0xF0	DUP2
0xF1	PUSH(POP(@0xEE) & POP())
0xF2	PUSH(0x0)
0xF4	SWAP1
0xF5	DUP2
0xF6	MSTORE(POP(0x0), POP(@0xF1))
0xF7	PUSH(0x20)
0xF9	DUP1
0xFA	SWAP1
0xFB	MSTORE(POP(0x20), POP(0x0))
0xFE	DUP1
0x100	PUSH(SLOAD(SHA3(POP(0x0), 0x40)))
0x101	SWAP1
0x102	SWAP2
0x104	PUSH(POP(@0xEE) & POP(@0x100) == POP(0x0))

:label6
# Stack: [[@0x104 | @0xDF | @0xBE] 0x0 0x0 0x0 0x0 @0xAE [@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0x10A	JUMPI(:label17, !POP())

# Stack: [0x0 0x0 0x0 0x0 @0xAE [@0x6B | @0xAC] [:label8 | :label9] [@0x55 | @0x13]]
0x10D	PUSH(MLOAD(0x40))
0x117	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x118	SWAP1
0x119	PUSH(0x0)
0x11B	SWAP1
0x11C	PUSH(CALLVALUE())
0x11D	SWAP1
0x11E	DUP3
0x11F	DUP2
0x120	DUP2
0x121	DUP2
0x122	DUP6
0x123	DUP9
0x124	DUP4
0x125	PUSH(CALL(POP(0x0), POP(@0x117), POP(@0x11C), POP(@0x10D), POP(0x0), POP(@0x10D), POP(0x0)))
0x126	SWAP4
0x127	POP()
0x128	POP()
0x129	POP()
0x12A	POP()
0x12B	POP()
0x12F	JUMP(:label16)

:label7
# Stack: [@0x13]
0x131	PUSH(:label10)
0x136	PUSH(CALLDATALOAD(0x4))
0x13E	PUSH(0x2 ** 0xA0 - 0x1)
0x13F	DUP2
0x140	DUP2
0x141	PUSH(POP(@0x13E) & POP(@0x136))
0x142	PUSH(0x0)
0x144	SWAP1
0x145	DUP2
0x146	MSTORE(POP(0x0), POP(@0x141))
0x147	PUSH(0x20)
0x149	DUP1
0x14A	SWAP1
0x14B	MSTORE(POP(0x20), POP(0x0))
0x14E	DUP1
0x153	PUSH(SLOAD(0x1 + SHA3(POP(0x0), 0x40)))
0x154	SWAP1
0x155	SWAP2
0x156	DUP3
0x157	SWAP2
0x158	DUP3
0x159	SWAP2
0x15B	DUP1
0x161	JUMPI(:label13, !(POP(0x0) == POP(@0x13E) & POP(@0x153)))

# Stack: [0x0 0x0 0x0 @0x136 :label10 @0x13]
0x165	JUMP(:label14)

:label8
# Stack: []
0x167	STOP()

:label9
# Stack: [@0x55 :label8]
0x169	POP()
0x16A	JUMP(POP(:label8))

:label10
# Stack: [[@0x207 | 0x0 | @0x1CB | 0x0] [0x0 | @0x20F | 0x0 | @0x1D3] [@0x1CE | 0x0 | @0x20A | 0x0] @0x13]
0x16C	PUSH(0x40)
0x16E	DUP1
0x16F	PUSH(MLOAD(POP(0x40)))
0x177	PUSH(0x2 ** 0xA0 - 0x1)
0x178	SWAP5
0x179	DUP6
0x17B	DUP1
0x17C	MSTORE(POP(@0x16F), POP(@0x177) & POP())
0x17D	SWAP3
0x17E	SWAP1
0x17F	SWAP4
0x183	DUP2
0x185	MSTORE(POP(@0x16F) + 0x20, POP(@0x177) & POP())
0x186	DUP2
0x187	DUP4
0x189	MSTORE(POP(0x40) + POP(@0x16F), POP())
0x18A	SWAP1
0x18B	PUSH(MLOAD(POP(0x40)))
0x18C	SWAP1
0x18D	DUP2
0x18E	SWAP1
0x192	PUSH(0x60 + POP(@0x16F) - POP(@0x18B))
0x193	SWAP1
0x194	RETURN(POP(@0x18B), POP(@0x192))

:label11
# Stack: [0x0 0x0 0x0 0x0 @0x76 :label10 @0x13]
0x196	POP()
0x197	POP()
0x198	POP()
0x199	PUSH(0x0)
0x19B	DUP3
0x19C	DUP2
0x19D	MSTORE(POP(0x0), POP(@0x76))
0x19E	PUSH(0x1)
0x1A0	PUSH(0x20)
0x1A2	DUP2
0x1A3	DUP2
0x1A4	MSTORE(POP(0x20), POP(0x1))
0x1A5	PUSH(0x40)
0x1A7	DUP1
0x1A8	DUP5
0x1AA	PUSH(SLOAD(SHA3(POP(0x0), POP(0x40))))
0x1B2	PUSH(0x2 ** 0xA0 - 0x1)
0x1B3	SWAP1
0x1B4	DUP2
0x1B5	PUSH(POP(@0x1B2) & POP(@0x1AA))
0x1B6	DUP1
0x1B7	DUP7
0x1B8	MSTORE(POP(0x0), POP(@0x1B5))
0x1B9	SWAP3
0x1BA	DUP6
0x1BB	SWAP1
0x1BC	MSTORE(POP(0x20), POP(0x0))
0x1BD	SWAP4
0x1BE	PUSH(SHA3(POP(0x0), POP(0x40)))
0x1BF	DUP1
0x1C0	PUSH(SLOAD(POP(@0x1BE)))
0x1C1	SWAP3
0x1C2	DUP2
0x1C4	PUSH(SLOAD(POP(@0x1BE) + POP(0x1)))
0x1C5	PUSH(0x2)
0x1C7	SWAP1
0x1C8	SWAP1
0x1C9	SWAP2
0x1CB	PUSH(SLOAD(POP(0x2) + POP(@0x1BE)))
0x1CC	SWAP3
0x1CD	DUP5
0x1CE	PUSH(POP(@0x1B2) & POP(@0x1C0))
0x1CF	SWAP5
0x1D0	POP()
0x1D1	SWAP1
0x1D2	SWAP3
0x1D3	PUSH(POP(@0x1B2) & POP(@0x1C4))
0x1D4	SWAP2

:label12
# Stack: [[0x0 | @0x1B5] [0x0 | @0x1CB] [0x0 | @0x1D3] [0x0 | @0x1CE] @0x76 :label10 @0x13]
0x1D6	POP()
0x1D7	SWAP2
0x1D8	SWAP4
0x1D9	SWAP1
0x1DA	SWAP3
0x1DB	POP()
0x1DC	JUMP(POP(:label10))

:label13
# Stack: [0x0 0x0 0x0 @0x136 :label10 @0x13]
0x1DE	POP()
0x1DF	POP()
0x1E0	POP()
0x1E8	PUSH(0x2 ** 0xA0 - 0x1)
0x1E9	DUP2
0x1EA	DUP2
0x1EB	PUSH(POP(@0x1E8) & POP(@0x136))
0x1EC	PUSH(0x0)
0x1EE	SWAP1
0x1EF	DUP2
0x1F0	MSTORE(POP(0x0), POP(@0x1EB))
0x1F1	PUSH(0x20)
0x1F3	DUP1
0x1F4	SWAP1
0x1F5	MSTORE(POP(0x20), POP(0x0))
0x1F6	PUSH(0x40)
0x1F8	SWAP1
0x1F9	PUSH(SHA3(POP(0x0), POP(0x40)))
0x1FA	DUP1
0x1FB	PUSH(SLOAD(POP(@0x1F9)))
0x1FE	DUP1
0x200	PUSH(SLOAD(POP(@0x1F9) + 0x1))
0x201	PUSH(0x2)
0x203	SWAP1
0x204	SWAP1
0x205	SWAP2
0x207	PUSH(SLOAD(POP(0x2) + POP(@0x1F9)))
0x208	SWAP1
0x209	DUP4
0x20A	PUSH(POP(@0x1E8) & POP(@0x1FB))
0x20B	SWAP3
0x20C	SWAP2
0x20D	SWAP1
0x20E	SWAP2
0x20F	PUSH(POP(@0x1E8) & POP(@0x200))
0x210	SWAP1

:label14
# Stack: [[0x0 | @0x207] [0x0 | @0x20F] [0x0 | @0x20A] @0x136 :label10 @0x13]
0x212	SWAP2
0x213	SWAP4
0x214	SWAP1
0x215	SWAP3
0x216	POP()
0x217	JUMP(POP(:label10))

:label15
# Stack: [[0x0 | @0x31F] [0x1 | @0x368] [@0x361 | @0xAE] [@0xAC | @0x35B | @0x6B] @0xAE [@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0x21B	PUSH(MLOAD(0x40))
0x224	DUP5
0x225	PUSH(POP() & 0x2 ** 0xA0 - 0x1)
0x226	SWAP1
0x227	PUSH(0x0)
0x229	SWAP1
0x22A	DUP6
0x22B	SWAP1
0x22C	DUP3
0x22D	DUP2
0x22E	DUP2
0x22F	DUP2
0x230	DUP6
0x231	DUP9
0x232	DUP4
0x233	PUSH(CALL(POP(0x0), POP(@0x225), POP(), POP(@0x21B), POP(0x0), POP(@0x21B), POP(0x0)))
0x234	POP()
0x235	POP()
0x236	POP()
0x237	SWAP1
0x238	DUP2
0x239	MSTORE(POP(0x0), POP(@0x225))
0x23A	PUSH(0x20)
0x23C	DUP1
0x23D	SWAP1
0x23E	MSTORE(POP(0x20), POP(0x0))
0x23F	PUSH(0x40)
0x241	SWAP1
0x245	PUSH(0x2 + SHA3(POP(0x0), POP(0x40)))
0x246	DUP1
0x248	DUP4
0x249	PUSH(POP() + SLOAD(POP(@0x245)))
0x24A	SWAP1
0x24B	SSTORE(POP(@0x245), POP(@0x249))

:label16
# Stack: [[0x0 | @0x31F] [0x0 | @0x368 | 0x1] [0x0 | @0x361 | @0xAE] [@0x35B | @0x6B | @0xAC | 0x0] @0xAE [@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0x24D	POP()
0x24E	POP()
0x24F	POP()
0x250	POP()
0x251	POP()
0x252	POP()
0x253	JUMP(POP())

:label17
# Stack: [0x0 0x0 0x0 0x0 @0xAE [@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0x258	PUSH(CALLER())
0x259	DUP7
0x25A	PUSH(0x2)
0x25C	DUP1
0x25D	PUSH(SLOAD(POP(0x2)))
0x25E	PUSH(0x0)
0x260	SWAP1
0x261	DUP2
0x262	MSTORE(POP(0x0), POP(@0x25D))
0x263	PUSH(0x1)
0x265	PUSH(0x20)
0x267	DUP2
0x268	DUP2
0x269	MSTORE(POP(0x20), POP(0x1))
0x26A	PUSH(0x40)
0x26C	DUP1
0x26D	DUP5
0x26E	PUSH(SHA3(POP(0x0), POP(0x40)))
0x26F	DUP1
0x270	PUSH(SLOAD(POP(@0x26E)))
0x286	PUSH(~0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)
0x287	SWAP1
0x288	DUP2
0x28A	DUP9
0x28B	PUSH(POP(@0x258) | POP(@0x286) & POP(@0x270))
0x28C	SWAP1
0x28D	SWAP2
0x28E	SSTORE(POP(@0x26E), POP(@0x28B))
0x28F	DUP2
0x290	PUSH(MLOAD(POP(0x40)))
0x293	DUP1
0x295	DUP3
0x296	MSTORE(POP(0x40), POP(@0x290) + 0x60)
0x297	DUP8
0x298	DUP2
0x299	MSTORE(POP(@0x290), POP())
0x29A	DUP1
0x29B	DUP5
0x29C	PUSH(POP(0x20) + POP(@0x290))
0x29D	DUP10
0x29E	DUP2
0x29F	MSTORE(POP(@0x29C), POP(@0x258))
0x2A0	DUP2
0x2A1	DUP5
0x2A2	PUSH(POP(0x40) + POP(@0x290))
0x2A3	DUP8
0x2A4	DUP2
0x2A5	MSTORE(POP(@0x2A2), POP(0x0))
0x2AE	DUP11
0x2B0	DUP8
0x2B1	MSTORE(POP(0x0), POP(@0x258) & 0x2 ** 0xA0 - 0x1)
0x2B2	SWAP5
0x2B3	DUP8
0x2B4	SWAP1
0x2B5	MSTORE(POP(0x20), POP(0x0))
0x2B6	SWAP3
0x2B7	SWAP1
0x2B8	SWAP6
0x2B9	PUSH(SHA3(POP(0x0), POP(0x40)))
0x2BA	DUP1
0x2BB	PUSH(SLOAD(POP(@0x2B9)))
0x2BC	SWAP6
0x2BD	PUSH(MLOAD(POP(@0x290)))
0x2BE	SWAP6
0x2BF	DUP3
0x2C0	PUSH(POP(@0x286) & POP(@0x2BB))
0x2C1	SWAP6
0x2C2	SWAP1
0x2C3	SWAP6
0x2C5	DUP5
0x2C6	SSTORE(POP(@0x2B9), POP(@0x2C0) | POP(@0x2BD))
0x2C7	DUP5
0x2C8	DUP5
0x2C9	PUSH(POP(0x1) + POP(@0x2B9))
0x2CA	DUP1
0x2CB	PUSH(SLOAD(POP(@0x2C9)))
0x2CC	SWAP3
0x2CD	PUSH(MLOAD(POP(@0x29C)))
0x2CE	SWAP3
0x2CF	SWAP1
0x2D0	SWAP2
0x2D1	PUSH(POP(@0x286) & POP(@0x2CB))
0x2D2	SWAP2
0x2D3	SWAP1
0x2D4	SWAP2
0x2D5	PUSH(POP(@0x2D1) | POP(@0x2CD))
0x2D6	SWAP1
0x2D7	SSTORE(POP(@0x2C9), POP(@0x2D5))
0x2D8	PUSH(MLOAD(POP(@0x2A2)))
0x2D9	SWAP2
0x2DA	DUP4
0x2DB	PUSH(POP(0x2) + POP(@0x2B9))
0x2DC	SWAP2
0x2DD	SWAP1
0x2DE	SWAP2
0x2DF	SSTORE(POP(@0x2DB), POP(@0x2D8))
0x2E0	DUP2
0x2E2	PUSH(SLOAD(POP(0x2)) + POP(0x1))
0x2E3	SWAP1
0x2E4	SSTORE(POP(0x2), POP(@0x2E2))
0x2E5	POP()
0x2E6	POP()
0x2E7	JUMP(:label18)

:label18
# Stack: [0x0 0x0 0x0 0x0 @0xAE [@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0x2E9	DUP6
0x2EA	SWAP4
0x2EB	POP()
0x2EC	DUP5
0x2ED	SWAP3
0x2EE	POP()
0x2EF	PUSH(0x1)
0x2F1	SWAP2
0x2F2	POP()

:label19
# Stack: [[0x0 | @0x31F] [0x1 | @0x368] [@0x361 | @0xAE] [@0x6B | @0x35B | @0xAC] @0xAE [@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0x2F6	PUSH(SLOAD(0x3))
0x2FE	PUSH(0x2 ** 0xA0 - 0x1)
0x2FF	SWAP1
0x300	DUP2
0x301	PUSH(POP(@0x2FE) & POP(@0x2F6))
0x302	SWAP1
0x303	DUP6
0x305	PUSH(POP() & POP(@0x2FE) == POP(@0x301))
0x306	DUP1
0x307	PUSH(!POP(@0x305))
0x308	SWAP1
0x30C	JUMPI(:label20, POP(@0x305))

# Stack: [@0x307 [0x0 | @0x31F] [@0x368 | 0x1] [@0xAE | @0x361] [@0x35B | @0xAC | @0x6B] @0xAE [@0xAC | @0x6B] [:label9 | :label8] [@0x55 | @0x13]]
0x30D	POP()
0x310	DUP2
0x311	PUSH(POP() < 0x7)

:label20
# Stack: [[@0x311 | @0x307] [0x0 | @0x31F] [0x1 | @0x368] [@0xAE | @0x361] [@0x6B | @0x35B | @0xAC] @0xAE [@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0x317	JUMPI(:label15, !POP())

# Stack: [[0x0 | @0x31F] [@0x368 | 0x1] [@0xAE | @0x361] [@0x6B | @0x35B | @0xAC] @0xAE [@0x6B | @0xAC] [:label9 | :label8] [@0x55 | @0x13]]
0x318	POP()
0x31B	PUSH(MLOAD(0x40))
0x31E	DUP3
0x31F	PUSH(POP() / 0x2)
0x320	SWAP1
0x329	DUP5
0x32A	PUSH(POP() & 0x2 ** 0xA0 - 0x1)
0x32B	SWAP1
0x32C	PUSH(0x0)
0x32E	SWAP1
0x32F	DUP4
0x330	SWAP1
0x331	DUP3
0x332	DUP2
0x333	DUP2
0x334	DUP2
0x335	DUP6
0x336	DUP9
0x337	DUP4
0x338	PUSH(CALL(POP(0x0), POP(@0x32A), POP(@0x31F), POP(@0x31B), POP(0x0), POP(@0x31B), POP(0x0)))
0x339	POP()
0x33A	POP()
0x33B	POP()
0x33C	SWAP1
0x33D	DUP2
0x33E	MSTORE(POP(0x0), POP(@0x32A))
0x33F	PUSH(0x20)
0x341	DUP1
0x342	SWAP1
0x343	MSTORE(POP(0x20), POP(0x0))
0x344	PUSH(0x40)
0x346	SWAP1
0x347	PUSH(SHA3(POP(0x0), POP(0x40)))
0x34A	DUP1
0x34B	PUSH(POP(@0x347) + 0x2)
0x34C	DUP1
0x34E	DUP3
0x34F	PUSH(POP(@0x31F) + SLOAD(POP(@0x34B)))
0x350	SWAP1
0x351	SSTORE(POP(@0x34B), POP(@0x34F))
0x35B	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x347)))
0x35C	SWAP4
0x35D	POP()
0x35E	SWAP2
0x35F	DUP3
0x360	SWAP1
0x361	PUSH(POP() - POP(@0x31F))
0x362	SWAP2
0x363	PUSH(0x1)
0x365	SWAP2
0x366	SWAP1
0x367	SWAP2
0x368	PUSH(POP(0x1) + POP())
0x369	SWAP1
0x36D	JUMP(:label19)


