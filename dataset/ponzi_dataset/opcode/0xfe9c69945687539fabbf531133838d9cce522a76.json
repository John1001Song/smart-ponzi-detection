# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x35C1D349 == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xC8796572 == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label10, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label13)
0x70	PUSH(:label9)
0x76	JUMP(:label11)

:label1
# Stack: [@0x13]
0x78	PUSH(:label13)
0x7D	PUSH(CALLDATALOAD(0x4))
0x80	PUSH(SLOAD(0x4))
0x88	PUSH(0x2 ** 0xA0 - 0x1)
0x89	SWAP1
0x8A	DUP2
0x8B	PUSH(POP(@0x88) & POP(@0x80))
0x8C	PUSH(CALLER())
0x8D	SWAP1
0x8E	SWAP1
0x8F	SWAP2
0x96	JUMPI(:label2, !(POP(@0x8C) & POP(@0x88) == POP(@0x8B)))

# Stack: [@0x7D :label13 @0x13]
0x97	PUSH(0x4)
0x99	DUP1
0xA5	DUP2
0xA6	PUSH(POP(@0x7D) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0xA7	SWAP1
0xA8	SSTORE(POP(0x4), POP(@0xA6))

:label2
# Stack: [@0x7D :label13 @0x13]
0xAA	POP()
0xAB	JUMP(POP(:label13))

:label3
# Stack: [@0x13]
0xAD	PUSH(:label14)
0xB2	PUSH(CALLDATALOAD(0x4))
0xB3	PUSH(0x0)
0xB5	DUP1
0xB6	PUSH(SLOAD(POP(0x0)))
0xB7	DUP2
0xB8	SWAP1
0xB9	DUP2
0xBF	JUMPI(0x2, !(POP(@0xB2) < POP(@0xB6)))

# Stack: [@0xB2 0x0 @0xB2 :label14 @0x13]
0xC0	POP()
0xC1	DUP1
0xC2	MSTORE(POP(0x0), POP(0x0))
0xC5	PUSH(0x2 * POP(@0xB2))
0xC6	PUSH(0x0)
0xC8	DUP1
0xCF	DUP1
0xD0	CODECOPY(POP(0x0), 0x43F, 0x20)
0xD1	DUP1
0xD2	PUSH(MLOAD(POP(0x0)))
0xD3	SWAP1
0xD4	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xD5	DUP2
0xD7	PUSH(SLOAD(POP(@0xC5) + POP(@0xD2)))
0xD8	PUSH(0x0)
0xDA	DUP1
0xE1	DUP1
0xE2	CODECOPY(POP(0x0), 0x45F, 0x20)
0xE3	DUP1
0xE4	PUSH(MLOAD(POP(0x0)))
0xE5	SWAP1
0xE6	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xE7	SWAP1
0xE8	SWAP1
0xE9	SWAP2
0xEB	PUSH(SLOAD(POP(@0xE4) + POP(@0xC5)))
0xF3	PUSH(0x2 ** 0xA0 - 0x1)
0xF4	SWAP2
0xF5	SWAP1
0xF6	SWAP2
0xF7	PUSH(POP(@0xF3) & POP(@0xD7))
0xF8	SWAP1
0xF9	DUP3
0xFA	JUMP(POP(:label14))

:label4
# Stack: [@0x13]
0xFC	PUSH(:label15)
0x10A	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0x10B	DUP2
0x10C	JUMP(POP(:label15))

:label5
# Stack: [@0x13]
0x10E	PUSH(:label16)
0x113	PUSH(SLOAD(0x2))
0x114	DUP2
0x115	JUMP(POP(:label16))

:label6
# Stack: [@0x13]
0x117	PUSH(:label16)
0x11C	PUSH(SLOAD(0x1))
0x11D	DUP2
0x11E	JUMP(POP(:label16))

:label7
# Stack: [@0x13]
0x120	PUSH(:label16)
0x125	PUSH(SLOAD(0x3))
0x126	DUP2
0x127	JUMP(POP(:label16))

:label8
# Stack: [@0x13]
0x129	PUSH(:label13)
0x12E	PUSH(SLOAD(0x4))
0x136	PUSH(0x2 ** 0xA0 - 0x1)
0x137	SWAP1
0x138	DUP2
0x139	PUSH(POP(@0x136) & POP(@0x12E))
0x13A	PUSH(CALLER())
0x13B	SWAP1
0x13C	SWAP1
0x13D	SWAP2
0x144	JUMPI(:label9, !(POP(@0x13A) & POP(@0x136) == POP(@0x139)))

# Stack: [:label13 @0x13]
0x14F	JUMPI(:label17, !(0x0 == SLOAD(0x2)))

:label9
# Stack: [[:label13 | :label13]]
0x151	JUMP(POP())

:label10
# Stack: [@0x13]
0x153	PUSH(:label13)

:label11
# Stack: [[:label9 | :label13] [@0x13 | :label13]]
0x157	PUSH(0x0)
0x159	PUSH(0x0)
0x15B	PUSH(0x0)
0x16B	JUMPI(:label18, !(CALLVALUE() < 0x2386F26FC10000))

# Stack: [0x0 0x0 0x0 [:label9 | :label13] [:label13 | @0x13]]
0x16E	PUSH(MLOAD(0x40))
0x178	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x179	SWAP1
0x17A	DUP3
0x17B	SWAP1
0x17C	PUSH(CALLVALUE())
0x17D	SWAP1
0x17E	DUP3
0x17F	DUP2
0x180	DUP2
0x181	DUP2
0x182	DUP6
0x183	DUP9
0x184	DUP4
0x185	PUSH(CALL(POP(0x0), POP(@0x178), POP(@0x17C), POP(@0x16E), POP(0x0), POP(@0x16E), POP(0x0)))
0x186	POP()
0x187	POP()
0x188	POP()
0x189	POP()
0x18A	POP()

:label12
# Stack: [[0x0 | @0x3BA] [0x0 | @0x266] [@0x25F | 0x0 | 0x29A2241AF62C0000] [:label9 | :label13] [:label13 | @0x13]]
0x18C	POP()
0x18D	POP()
0x18E	POP()
0x18F	JUMP(POP())

:label13
# Stack: []
0x191	STOP()

:label14
# Stack: [@0xEB @0xF7 :label14 @0x13]
0x195	PUSH(MLOAD(0x40))
0x196	DUP1
0x197	DUP4
0x1A1	DUP1
0x1A2	MSTORE(POP(@0x195), 0x2 ** 0xA0 - 0x1 & POP(@0xF7))
0x1A5	PUSH(0x20 + POP(@0x195))
0x1A6	DUP3
0x1A7	DUP2
0x1A8	MSTORE(POP(@0x1A5), POP(@0xEB))
0x1AB	PUSH(0x20 + POP(@0x1A5))
0x1AC	SWAP3
0x1AD	POP()
0x1AE	POP()
0x1AF	POP()
0x1B2	PUSH(MLOAD(0x40))
0x1B3	DUP1
0x1B4	SWAP2
0x1B5	PUSH(POP(@0x1AB) - POP(@0x1B2))
0x1B6	SWAP1
0x1B7	RETURN(POP(@0x1B2), POP(@0x1B5))

:label15
# Stack: [@0x10A :label15 @0x13]
0x1B9	PUSH(0x40)
0x1BB	DUP1
0x1BC	PUSH(MLOAD(POP(0x40)))
0x1C4	PUSH(0x2 ** 0xA0 - 0x1)
0x1C5	SWAP3
0x1C6	SWAP1
0x1C7	SWAP3
0x1C9	DUP2
0x1CA	MSTORE(POP(@0x1BC), POP(@0x1C4) & POP(@0x10A))
0x1CB	PUSH(MLOAD(POP(0x40)))
0x1CC	SWAP1
0x1CD	DUP2
0x1CE	SWAP1
0x1D2	PUSH(0x20 + POP(@0x1BC) - POP(@0x1CB))
0x1D3	SWAP1
0x1D4	RETURN(POP(@0x1CB), POP(@0x1D2))

:label16
# Stack: [[@0x125 | @0x11C | @0x113] [:label16 | :label16 | :label16] @0x13]
0x1D6	PUSH(0x40)
0x1D8	DUP1
0x1D9	PUSH(MLOAD(POP(0x40)))
0x1DA	SWAP2
0x1DB	DUP3
0x1DC	MSTORE(POP(@0x1D9), POP())
0x1DD	PUSH(MLOAD(POP(0x40)))
0x1DE	SWAP1
0x1DF	DUP2
0x1E0	SWAP1
0x1E4	PUSH(0x20 + POP(@0x1D9) - POP(@0x1DD))
0x1E5	SWAP1
0x1E6	RETURN(POP(@0x1DD), POP(@0x1E4))

:label17
# Stack: [:label13 @0x13]
0x1EA	PUSH(SLOAD(0x4))
0x1ED	PUSH(SLOAD(0x2))
0x1F0	PUSH(MLOAD(0x40))
0x1F8	PUSH(0x2 ** 0xA0 - 0x1)
0x1F9	SWAP1
0x1FA	SWAP1
0x1FB	SWAP3
0x1FC	PUSH(POP(@0x1F8) & POP(@0x1EA))
0x1FD	SWAP2
0x1FE	PUSH(0x0)
0x200	SWAP2
0x201	SWAP1
0x202	DUP3
0x203	DUP2
0x204	DUP2
0x205	DUP2
0x206	DUP6
0x207	DUP9
0x208	DUP4
0x209	PUSH(CALL(POP(0x0), POP(@0x1FC), POP(@0x1ED), POP(@0x1F0), POP(0x0), POP(@0x1F0), POP(0x0)))
0x20A	POP()
0x20B	POP()
0x20C	POP()
0x20F	SSTORE(0x2, POP(0x0))
0x210	POP()
0x211	JUMP(POP(:label13))

:label18
# Stack: [0x0 0x0 0x0 [:label9 | :label13] [:label13 | @0x13]]
0x222	JUMPI(:label19, !(CALLVALUE() > 0x29A2241AF62C0000))

# Stack: [0x0 0x0 0x0 [:label9 | :label13] [:label13 | @0x13]]
0x225	PUSH(MLOAD(0x40))
0x22F	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x230	SWAP1
0x231	PUSH(0x0)
0x233	SWAP1
0x23F	PUSH(CALLVALUE() + ~0x29A2241AF62BFFFF)
0x240	SWAP1
0x241	DUP3
0x242	DUP2
0x243	DUP2
0x244	DUP2
0x245	DUP6
0x246	DUP9
0x247	DUP4
0x248	PUSH(CALL(POP(0x0), POP(@0x22F), POP(@0x23F), POP(@0x225), POP(0x0), POP(@0x225), POP(0x0)))
0x249	POP()
0x24A	PUSH(0x29A2241AF62C0000)
0x253	SWAP7
0x254	POP()
0x255	PUSH(:label20)
0x258	SWAP4
0x259	POP()
0x25A	POP()
0x25B	POP()
0x25C	POP()
0x25D	JUMP(POP(:label20))

:label19
# Stack: [0x0 0x0 0x0 [:label9 | :label13] [@0x13 | :label13]]
0x25F	PUSH(CALLVALUE())
0x260	SWAP3
0x261	POP()

:label20
# Stack: [0x0 0x0 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [@0x13 | :label13]]
0x263	PUSH(0x0)
0x265	DUP1
0x266	PUSH(SLOAD(POP(0x0)))
0x269	DUP1
0x26A	PUSH(POP(@0x266) + 0x1)
0x26B	DUP1
0x26C	DUP4
0x26D	SSTORE(POP(0x0), POP(@0x26A))
0x26E	SWAP1
0x26F	SWAP4
0x270	POP()
0x271	SWAP1
0x272	DUP2
0x273	DUP5
0x274	DUP1
0x275	PUSH(!POP(@0x266))
0x276	DUP2
0x277	SWAP1
0x27C	JUMPI(:label22, POP(@0x275) > POP(@0x26A))

# Stack: [@0x266 @0x26A 0x0 @0x26A 0x0 @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [:label13 | @0x13]]
0x27F	PUSH(0x2 * POP(@0x266))
0x280	DUP1
0x284	DUP2
0x287	MSTORE(0x0, POP(0x0))
0x28C	PUSH(SHA3(0x0, 0x20))
0x28D	SWAP1
0x28E	DUP2
0x28F	PUSH(POP(@0x28C) + POP(@0x27F))
0x290	SWAP1
0x291	PUSH(POP(@0x28C) + 0x2 * POP(@0x26A))
0x292	PUSH(:label22)
0x295	SWAP2
0x296	SWAP1

:label21
# Stack: [[@0x291 | @0x2B5] @0x28F :label22 @0x26A 0x0 @0x26A 0x0 @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [@0x13 | :label13]]
0x298	DUP1
0x299	DUP3
0x29F	JUMPI(:label23, !(POP(@0x28F) > POP()))

# Stack: [[@0x291 | @0x2B5] @0x28F :label22 @0x26A 0x0 @0x26A 0x0 @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [:label13 | @0x13]]
0x2A0	DUP1
0x2AC	DUP1
0x2AD	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x2AE	PUSH(0x0)
0x2B0	PUSH(0x1)
0x2B2	SWAP1
0x2B3	SWAP1
0x2B4	SWAP2
0x2B5	PUSH(POP(0x1) + POP())
0x2B6	SWAP1
0x2B7	DUP2
0x2B8	SSTORE(POP(@0x2B5), POP(0x0))
0x2BC	JUMP(:label21)

:label22
# Stack: [[@0x28F | @0x266] @0x26A 0x0 @0x26A 0x0 @0x266 [0x29A2241AF62C0000 | @0x25F] [:label13 | :label9] [:label13 | @0x13]]
0x2BE	POP()
0x2BF	POP()
0x2C0	POP()
0x2C1	POP()
0x2C2	PUSH(CALLER())
0x2C3	PUSH(0x0)
0x2C7	POP(0x0)
0x2C8	DUP4
0x2C9	DUP2
0x2CB	DUP1
0x2D1	JUMPI(0x2, !(POP(@0x266) < SLOAD(POP(0x0))))

# Stack: [@0x266 0x0 @0x2C2 0x0 @0x266 [0x29A2241AF62C0000 | @0x25F] [:label13 | :label9] [@0x13 | :label13]]
0x2D2	DUP2
0x2D3	DUP1
0x2D4	MSTORE(POP(0x0), POP(0x0))
0x2D8	PUSH(0x0)
0x2DA	DUP1
0x2E1	DUP1
0x2E2	CODECOPY(POP(0x0), 0x43F, 0x20)
0x2E3	DUP1
0x2E4	PUSH(MLOAD(POP(0x0)))
0x2E5	SWAP1
0x2E6	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2E7	PUSH(POP(@0x2E4) + 0x2 * POP(@0x266))
0x2E8	DUP1
0x2F3	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2E7)))
0x2F4	SWAP1
0x2F5	SWAP3
0x2F6	PUSH(POP(@0x2C2) | POP(@0x2F3))
0x2F7	SWAP1
0x2F8	SWAP2
0x2F9	SSTORE(POP(@0x2E7), POP(@0x2F6))
0x2FA	DUP1
0x2FB	PUSH(SLOAD(POP(0x0)))
0x2FC	DUP4
0x2FD	SWAP1
0x2FE	SWAP1
0x2FF	DUP5
0x300	SWAP1
0x301	DUP2
0x307	JUMPI(0x2, !(POP(@0x266) < POP(@0x2FB)))

# Stack: [@0x266 0x0 [0x29A2241AF62C0000 | @0x25F] 0x0 @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [:label13 | @0x13]]
0x30B	PUSH(0x0)
0x30D	DUP1
0x314	DUP1
0x315	CODECOPY(POP(0x0), 0x45F, 0x20)
0x316	DUP1
0x317	PUSH(MLOAD(POP(0x0)))
0x318	SWAP1
0x319	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x31A	PUSH(POP(@0x317) + 0x2 * POP(@0x266))
0x31B	SWAP2
0x31C	SWAP1
0x31D	SWAP2
0x31E	SSTORE(POP(@0x31A), POP())
0x31F	DUP3
0x324	JUMPI(:label24, POP(@0x266) == POP(0x0))

# Stack: [0x0 @0x266 [0x29A2241AF62C0000 | @0x25F] [:label13 | :label9] [@0x13 | :label13]]
0x325	PUSH(0x2)
0x327	DUP1
0x32B	DUP4
0x32D	PUSH(POP() / 0x32 + SLOAD(POP(0x2)))
0x32E	SWAP1
0x32F	SSTORE(POP(0x2), POP(@0x32D))
0x330	PUSH(0x3)
0x332	DUP1
0x334	DUP4
0x335	PUSH(POP() + SLOAD(POP(0x3)))
0x336	SWAP1
0x337	SSTORE(POP(0x3), POP(@0x335))
0x33B	JUMP(:label25)

:label23
# Stack: [[@0x2B5 | @0x291] @0x28F :label22 @0x26A 0x0 @0x26A 0x0 @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [:label13 | @0x13]]
0x33D	POP()
0x33E	SWAP1
0x33F	JUMP(POP(:label22))

:label24
# Stack: [0x0 @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [:label13 | @0x13]]
0x341	PUSH(0x2)
0x343	DUP1
0x345	DUP4
0x346	PUSH(POP() + SLOAD(POP(0x2)))
0x347	SWAP1
0x348	SSTORE(POP(0x2), POP(@0x346))

:label25
# Stack: [[@0x3BA | 0x0] @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [@0x13 | :label13]]
0x34D	PUSH(SLOAD(0x1))
0x34E	PUSH(0x0)
0x350	DUP1
0x351	PUSH(SLOAD(POP(0x0)))
0x352	PUSH(0x64)
0x354	SWAP2
0x355	SWAP1
0x356	DUP2
0x35C	JUMPI(0x2, !(POP(@0x34D) < POP(@0x351)))

# Stack: [@0x34D 0x0 0x64 [0x0 | @0x3BA] @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [:label13 | @0x13]]
0x35D	DUP2
0x35E	DUP1
0x35F	MSTORE(POP(0x0), POP(0x0))
0x363	PUSH(0x0)
0x365	DUP1
0x36C	DUP1
0x36D	CODECOPY(POP(0x0), 0x43F, 0x20)
0x36E	DUP1
0x36F	PUSH(MLOAD(POP(0x0)))
0x370	SWAP1
0x371	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x372	PUSH(POP(@0x36F) + 0x2 * POP(@0x34D))
0x373	SWAP1
0x374	POP()
0x378	PUSH(SLOAD(0x1 + POP(@0x372)))
0x37B	PUSH(SLOAD(0x3))
0x37C	SWAP1
0x37D	SWAP1
0x381	PUSH(0xBC * POP(@0x378) / POP(0x64))
0x382	SWAP1
0x388	JUMPI(:label12, !(POP(@0x37B) > POP(@0x381)))

# Stack: [[@0x3BA | 0x0] @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [:label13 | @0x13]]
0x38B	PUSH(SLOAD(0x1))
0x38C	PUSH(0x0)
0x38E	DUP1
0x38F	PUSH(SLOAD(POP(0x0)))
0x390	PUSH(0x32)
0x392	SWAP2
0x393	SWAP1
0x394	DUP2
0x39A	JUMPI(0x2, !(POP(@0x38B) < POP(@0x38F)))

# Stack: [@0x38B 0x0 0x32 [0x0 | @0x3BA] @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [:label13 | @0x13]]
0x39E	PUSH(0x0)
0x3A0	DUP1
0x3A7	DUP1
0x3A8	CODECOPY(POP(0x0), 0x45F, 0x20)
0x3A9	DUP1
0x3AA	PUSH(MLOAD(POP(0x0)))
0x3AB	SWAP1
0x3AC	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3AE	PUSH(SLOAD(POP(@0x3AA) + 0x2 * POP(@0x38B)))
0x3B1	PUSH(SLOAD(0x1))
0x3B2	DUP2
0x3B3	PUSH(SLOAD(POP(0x0)))
0x3B4	SWAP3
0x3B5	SWAP1
0x3B6	SWAP2
0x3BA	PUSH(0x5F * POP(@0x3AE) / POP(0x32))
0x3BB	SWAP4
0x3BC	POP()
0x3BD	SWAP1
0x3BE	SWAP2
0x3BF	DUP2
0x3C5	JUMPI(0x2, !(POP(@0x3B1) < POP(@0x3B3)))

# Stack: [@0x3B1 0x0 @0x3BA @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [:label13 | @0x13]]
0x3C9	PUSH(0x0)
0x3CB	DUP1
0x3D2	DUP1
0x3D3	CODECOPY(POP(0x0), 0x43F, 0x20)
0x3D4	DUP1
0x3D5	PUSH(MLOAD(POP(0x0)))
0x3D6	SWAP1
0x3D7	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3D9	PUSH(SLOAD(POP(@0x3D5) + 0x2 * POP(@0x3B1)))
0x3DC	PUSH(MLOAD(0x40))
0x3E4	PUSH(0x2 ** 0xA0 - 0x1)
0x3E5	SWAP1
0x3E6	SWAP1
0x3E7	SWAP2
0x3E8	PUSH(POP(@0x3E4) & POP(@0x3D9))
0x3E9	SWAP2
0x3EA	SWAP1
0x3EB	DUP4
0x3EC	SWAP1
0x3ED	DUP3
0x3EE	DUP2
0x3EF	DUP2
0x3F0	DUP2
0x3F1	DUP6
0x3F2	DUP9
0x3F3	DUP4
0x3F4	PUSH(CALL(POP(0x0), POP(@0x3E8), POP(@0x3BA), POP(@0x3DC), POP(0x0), POP(@0x3DC), POP(0x0)))
0x3F5	POP()
0x3F6	POP()
0x3F9	PUSH(SLOAD(0x1))
0x3FA	DUP3
0x3FB	PUSH(SLOAD(POP(0x0)))
0x3FC	PUSH(0x64)
0x3FE	SWAP4
0x3FF	POP()
0x400	SWAP1
0x401	SWAP2
0x402	POP()
0x403	DUP2
0x409	JUMPI(0x2, !(POP(@0x3F9) < POP(@0x3FB)))

# Stack: [@0x3F9 0x0 0x64 @0x3BA @0x266 [0x29A2241AF62C0000 | @0x25F] [:label9 | :label13] [@0x13 | :label13]]
0x40A	SWAP1
0x40B	DUP1
0x40C	MSTORE(POP(0x0), POP(0x0))
0x40D	PUSH(0x3)
0x40F	DUP1
0x410	PUSH(SLOAD(POP(0x3)))
0x411	PUSH(0x2)
0x413	SWAP2
0x414	SWAP1
0x415	SWAP3
0x417	PUSH(0x0)
0x419	DUP1
0x420	DUP1
0x421	CODECOPY(POP(0x0), 0x45F, 0x20)
0x422	DUP1
0x423	PUSH(MLOAD(POP(0x0)))
0x424	SWAP1
0x425	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x427	PUSH(SLOAD(POP(@0x423) + POP(0x2) * POP(@0x3F9)))
0x428	SWAP3
0x429	SWAP1
0x42A	SWAP3
0x42E	PUSH(0xBC * POP(@0x427) / POP(0x64))
0x42F	SWAP1
0x430	PUSH(POP(@0x410) - POP(@0x42E))
0x431	SWAP1
0x432	SSTORE(POP(0x3), POP(@0x430))
0x433	PUSH(0x1)
0x435	DUP1
0x437	DUP1
0x438	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x439	SWAP1
0x43A	SSTORE(POP(0x1), POP(@0x438))
0x43E	JUMP(:label25)


