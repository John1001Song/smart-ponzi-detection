# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x1E0018D6)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label2, 0x1FC06F0D == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label3, 0x32D79689 == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label4, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label5, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label6, 0xD377DEDD == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label7, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label9)
0x65	PUSH(:label10)
0x6B	JUMP(:label8)

:label1
# Stack: [@0x13]
0x6D	PUSH(:label11)
0x72	PUSH(SLOAD(0x4))
0x73	DUP2
0x74	JUMP(POP(:label11))

:label2
# Stack: [@0x13]
0x76	PUSH(:label12)
0x7B	PUSH(CALLDATALOAD(0x4))
0x7C	PUSH(0x1)
0x7E	DUP1
0x7F	PUSH(SLOAD(POP(0x1)))
0x80	DUP2
0x81	SWAP1
0x82	DUP2
0x88	JUMPI(0x2, !(POP(@0x7B) < POP(@0x7F)))

# Stack: [@0x7B 0x1 @0x7B :label12 @0x13]
0x89	POP()
0x8C	MSTORE(0x0, POP(0x1))
0xB8	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 + POP(@0x7B)))
0xB9	DUP2
0xBA	JUMP(POP(:label12))

:label3
# Stack: [@0x13]
0xBC	PUSH(:label11)
0xC1	PUSH(SLOAD(0x3))
0xC2	DUP2
0xC3	JUMP(POP(:label11))

:label4
# Stack: [@0x13]
0xC5	PUSH(:label12)
0xCA	PUSH(CALLDATALOAD(0x4))
0xCB	PUSH(0x0)
0xCD	DUP1
0xCE	PUSH(SLOAD(POP(0x0)))
0xCF	DUP2
0xD0	SWAP1
0xD1	DUP2
0xD7	JUMPI(0x2, !(POP(@0xCA) < POP(@0xCE)))

# Stack: [@0xCA 0x0 @0xCA :label12 @0x13]
0xD8	POP()
0xD9	DUP1
0xDA	MSTORE(POP(0x0), POP(0x0))
0xDB	PUSH(0x0)
0xDD	DUP1
0xE4	DUP1
0xE5	CODECOPY(POP(0x0), 0x396, 0x20)
0xE6	DUP1
0xE7	PUSH(MLOAD(POP(0x0)))
0xE8	SWAP1
0xE9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xF4	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0xE7) + POP(@0xCA)))
0xF5	DUP2
0xF6	JUMP(POP(:label12))

:label5
# Stack: [@0x13]
0xF8	PUSH(:label11)
0xFD	PUSH(SLOAD(0x2))
0xFE	DUP2
0xFF	JUMP(POP(:label11))

:label6
# Stack: [@0x13]
0x101	PUSH(:label12)
0x10F	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x5))
0x110	DUP2
0x111	JUMP(POP(:label12))

:label7
# Stack: [@0x13]
0x113	PUSH(:label9)

:label8
# Stack: [[:label10 | :label9] [:label9 | @0x13]]
0x117	PUSH(0x0)
0x119	DUP1
0x11B	DUP1
0x120	JUMPI(:label13, POP(0x0) == CALLVALUE())

# Stack: [0x0 0x0 [:label10 | :label9] [:label9 | @0x13]]
0x124	JUMP(0x2)

:label9
# Stack: []
0x126	STOP()

:label10
# Stack: [:label9]
0x128	JUMP(POP(:label9))

:label11
# Stack: [[@0xFD | @0xC1 | @0x72] [:label11 | :label11 | :label11] @0x13]
0x12A	PUSH(0x40)
0x12C	DUP1
0x12D	PUSH(MLOAD(POP(0x40)))
0x12E	SWAP2
0x12F	DUP3
0x130	MSTORE(POP(@0x12D), POP())
0x131	PUSH(MLOAD(POP(0x40)))
0x132	SWAP1
0x133	DUP2
0x134	SWAP1
0x138	PUSH(0x20 + POP(@0x12D) - POP(@0x131))
0x139	SWAP1
0x13A	RETURN(POP(@0x131), POP(@0x138))

:label12
# Stack: [[@0x10F | @0xF4 | @0xB8] [:label12 | :label12 | :label12] @0x13]
0x13C	PUSH(0x40)
0x13E	DUP1
0x13F	PUSH(MLOAD(POP(0x40)))
0x147	PUSH(0x2 ** 0xA0 - 0x1)
0x148	SWAP3
0x149	SWAP1
0x14A	SWAP3
0x14C	DUP2
0x14D	MSTORE(POP(@0x13F), POP(@0x147) & POP())
0x14E	PUSH(MLOAD(POP(0x40)))
0x14F	SWAP1
0x150	DUP2
0x151	SWAP1
0x155	PUSH(0x20 + POP(@0x13F) - POP(@0x14E))
0x156	SWAP1
0x157	RETURN(POP(@0x14E), POP(@0x155))

:label13
# Stack: [0x0 0x0 [:label10 | :label9] [:label9 | @0x13]]
0x15B	PUSH(SLOAD(0x4))
0x15C	PUSH(0x8)
0x15E	SWAP1
0x164	JUMPI(:label16, !(POP(@0x15B) > POP(0x8)))

# Stack: [0x0 0x0 [:label10 | :label9] [:label9 | @0x13]]
0x165	PUSH(0x1)
0x167	DUP1
0x168	PUSH(SLOAD(POP(0x1)))
0x169	DUP1
0x16A	DUP3
0x16B	PUSH(POP(0x1) + POP(@0x168))
0x16C	DUP1
0x16D	DUP4
0x16E	SSTORE(POP(0x1), POP(@0x16B))
0x16F	SWAP1
0x170	SWAP4
0x171	POP()
0x172	SWAP1
0x173	DUP2
0x174	DUP5
0x175	DUP1
0x176	PUSH(!POP(@0x168))
0x177	DUP2
0x178	SWAP1
0x17D	JUMPI(:label15, POP(@0x176) > POP(@0x16B))

# Stack: [@0x168 @0x16B 0x1 @0x16B 0x0 @0x168 [:label10 | :label9] [:label9 | @0x13]]
0x17E	DUP2
0x17F	DUP4
0x182	MSTORE(0x0, POP(0x1))
0x187	PUSH(SHA3(0x0, 0x20))
0x188	SWAP2
0x189	DUP3
0x18A	PUSH(POP(@0x187) + POP(@0x168))
0x18B	SWAP2
0x18C	PUSH(POP(@0x187) + POP(@0x16B))
0x18D	PUSH(:label15)
0x190	SWAP2
0x191	SWAP1

:label14
# Stack: [[@0x1AB | @0x2AA | @0x18C] [@0x18A | @0x2A7] [:label15 | :label18] [@0x16B | @0x27E] [0x1 | 0x0] [@0x27E | @0x16B] [0x0 | @0x27A] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x193	DUP1
0x194	DUP3
0x19A	JUMPI(:label17, !(POP() > POP()))

# Stack: [[@0x1AB | @0x2AA | @0x18C] [@0x2A7 | @0x18A] [:label15 | :label18] [@0x16B | @0x27E] [0x0 | 0x1] [@0x16B | @0x27E] [@0x27A | 0x0] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x19B	DUP1
0x1A7	DUP1
0x1A8	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x1AB	PUSH(0x1 + POP())
0x1AF	JUMP(:label14)

:label15
# Stack: [[@0x18A | @0x168] @0x16B 0x1 @0x16B 0x0 @0x168 [:label9 | :label10] [:label9 | @0x13]]
0x1B1	POP()
0x1B2	POP()
0x1B3	POP()
0x1B4	POP()
0x1B5	PUSH(CALLER())
0x1B6	PUSH(0x1)
0x1BA	POP(0x0)
0x1BB	DUP4
0x1BC	DUP2
0x1BE	DUP1
0x1C4	JUMPI(0x2, !(POP(@0x168) < SLOAD(POP(0x1))))

# Stack: [@0x168 0x1 @0x1B5 0x0 @0x168 [:label10 | :label9] [:label9 | @0x13]]
0x1C5	PUSH(0x0)
0x1C7	SWAP2
0x1C8	SWAP1
0x1C9	SWAP2
0x1CA	MSTORE(POP(0x0), POP(0x1))
0x1EC	PUSH(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 + POP(@0x168))
0x1ED	DUP1
0x1F8	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x1EC)))
0x1F9	SWAP1
0x1FA	SWAP2
0x1FB	PUSH(POP(@0x1B5) | POP(@0x1F8))
0x1FC	SWAP1
0x1FD	SSTORE(POP(@0x1EC), POP(@0x1FB))
0x208	JUMPI(:label16, !(0xA == SLOAD(0x4)))

# Stack: [0x0 @0x168 [:label10 | :label9] [:label9 | @0x13]]
0x20B	PUSH(SLOAD(0x3))
0x20C	PUSH(0x1)
0x20E	DUP1
0x20F	PUSH(SLOAD(POP(0x1)))
0x210	SWAP1
0x211	SWAP2
0x212	SWAP1
0x213	DUP2
0x219	JUMPI(0x2, !(POP(@0x20B) < POP(@0x20F)))

# Stack: [@0x20B 0x1 0x0 @0x168 [:label10 | :label9] [:label9 | @0x13]]
0x21A	PUSH(0x5)
0x21C	DUP1
0x21D	PUSH(SLOAD(POP(0x5)))
0x21E	PUSH(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6)
0x23F	SWAP2
0x240	SWAP1
0x241	SWAP3
0x24C	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6) + POP(@0x20B)))
0x255	PUSH(~(0x2 ** 0xA0 - 0x1))
0x256	SWAP2
0x257	SWAP1
0x258	SWAP3
0x259	PUSH(POP(@0x255) & POP(@0x21D))
0x25A	SWAP2
0x25B	SWAP1
0x25C	SWAP2
0x25D	PUSH(POP(@0x259) | POP(@0x24C))
0x25E	SWAP1
0x25F	SSTORE(POP(0x5), POP(@0x25D))
0x260	PUSH(0x3)
0x262	DUP1
0x263	PUSH(SLOAD(POP(0x3)))
0x264	SWAP1
0x265	SWAP2
0x266	PUSH(POP(0x1) + POP(@0x263))
0x267	SWAP1
0x268	SSTORE(POP(0x3), POP(@0x266))

:label16
# Stack: [0x0 [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x26C	PUSH(SLOAD(0x4))
0x26D	PUSH(0x9)
0x26F	SWAP1
0x275	JUMPI(:label19, !(POP(@0x26C) < POP(0x9)))

# Stack: [0x0 [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x276	POP()
0x277	PUSH(0x0)
0x279	DUP1
0x27A	PUSH(SLOAD(POP(0x0)))
0x27D	DUP1
0x27E	PUSH(POP(@0x27A) + 0x1)
0x27F	DUP1
0x280	DUP4
0x281	SSTORE(POP(0x0), POP(@0x27E))
0x282	SWAP1
0x283	SWAP2
0x284	DUP2
0x285	DUP4
0x286	DUP1
0x287	PUSH(!POP(@0x27A))
0x288	DUP2
0x289	SWAP1
0x28E	JUMPI(:label18, POP(@0x287) > POP(@0x27E))

# Stack: [@0x27A @0x27E 0x0 @0x27E @0x27A [@0x168 | 0x0] [:label10 | :label9] [@0x13 | :label9]]
0x28F	DUP3
0x290	DUP1
0x291	MSTORE(POP(0x0), POP(0x0))
0x292	PUSH(:label18)
0x295	SWAP1
0x296	PUSH(0x0)
0x298	DUP1
0x29F	DUP1
0x2A0	CODECOPY(POP(0x0), 0x396, 0x20)
0x2A1	DUP1
0x2A2	PUSH(MLOAD(POP(0x0)))
0x2A3	SWAP1
0x2A4	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2A5	SWAP1
0x2A6	DUP2
0x2A7	PUSH(POP(@0x2A2) + POP(@0x27A))
0x2A8	SWAP1
0x2A9	DUP4
0x2AA	PUSH(POP(@0x27E) + POP(@0x2A2))
0x2AE	JUMP(:label14)

:label17
# Stack: [[@0x1AB | @0x2AA | @0x18C] [@0x18A | @0x2A7] [:label18 | :label15] [@0x16B | @0x27E] [0x1 | 0x0] [@0x16B | @0x27E] [0x0 | @0x27A] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x2B0	POP()
0x2B1	SWAP1
0x2B2	JUMP(POP())

:label18
# Stack: [[@0x2A7 | @0x27A] @0x27E 0x0 @0x27E @0x27A [@0x168 | 0x0] [:label10 | :label9] [@0x13 | :label9]]
0x2B4	POP()
0x2B5	POP()
0x2B6	POP()
0x2B7	POP()
0x2B8	PUSH(CALLER())
0x2B9	PUSH(0x0)
0x2BD	POP(0x0)
0x2BE	DUP3
0x2BF	DUP2
0x2C1	DUP1
0x2C7	JUMPI(0x2, !(POP(@0x27A) < SLOAD(POP(0x0))))

# Stack: [@0x27A 0x0 @0x2B8 @0x27A [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x2C8	SWAP1
0x2C9	DUP1
0x2CA	MSTORE(POP(0x0), POP(0x0))
0x2CB	PUSH(0x0)
0x2CD	DUP1
0x2D4	DUP1
0x2D5	CODECOPY(POP(0x0), 0x396, 0x20)
0x2D6	DUP1
0x2D7	PUSH(MLOAD(POP(0x0)))
0x2D8	SWAP1
0x2D9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2DA	PUSH(POP(@0x2D7) + POP(@0x27A))
0x2DB	DUP1
0x2E6	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2DA)))
0x2E7	SWAP1
0x2E8	SWAP2
0x2E9	PUSH(POP(@0x2B8) | POP(@0x2E6))
0x2EA	SWAP1
0x2EB	SSTORE(POP(@0x2DA), POP(@0x2E9))

:label19
# Stack: [[@0x27A | 0x0] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x2ED	PUSH(0x4)
0x2EF	DUP1
0x2F3	PUSH(0x1 + SLOAD(POP(0x4)))
0x2F4	SWAP1
0x2F5	DUP2
0x2F6	SWAP1
0x2F7	SSTORE(POP(0x4), POP(@0x2F3))
0x2FF	JUMPI(:label20, !(0xB == POP(@0x2F3)))

# Stack: [[@0x27A | 0x0] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x304	SSTORE(0x4, 0x0)

:label20
# Stack: [[@0x27A | 0x0] [0x0 | @0x168] [:label10 | :label9] [:label9 | @0x13]]
0x308	PUSH(SLOAD(0x5))
0x30B	PUSH(MLOAD(0x40))
0x313	PUSH(0x2 ** 0xA0 - 0x1)
0x314	SWAP1
0x315	SWAP1
0x316	SWAP2
0x317	PUSH(POP(@0x313) & POP(@0x308))
0x318	SWAP1
0x319	PUSH(0x0)
0x31B	SWAP1
0x31C	DUP2
0x31D	SWAP1
0x31E	DUP2
0x31F	DUP2
0x320	DUP2
0x321	DUP2
0x322	DUP2
0x323	DUP9
0x324	DUP2
0x325	PUSH(CALL(POP(0x0), POP(@0x317), POP(0x0), POP(@0x30B), POP(0x0), POP(@0x30B), POP(0x0)))
0x326	POP()
0x327	POP()
0x328	POP()
0x329	POP()
0x32A	POP()

:label21
# Stack: [[0x0 | @0x27A] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x33E	JUMPI(:label22, !(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()) > 0x0))

# Stack: [[@0x27A | 0x0] [0x0 | @0x168] [:label10 | :label9] [:label9 | @0x13]]
0x341	PUSH(SLOAD(0x2))
0x342	PUSH(0x0)
0x344	DUP1
0x345	PUSH(SLOAD(POP(0x0)))
0x346	SWAP1
0x347	SWAP2
0x348	SWAP1
0x349	DUP2
0x34F	JUMPI(0x2, !(POP(@0x341) < POP(@0x345)))

# Stack: [@0x341 0x0 [0x0 | @0x27A] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x350	DUP2
0x351	DUP1
0x352	MSTORE(POP(0x0), POP(0x0))
0x355	PUSH(MLOAD(0x40))
0x356	PUSH(0x0)
0x358	DUP1
0x35F	DUP1
0x360	CODECOPY(POP(0x0), 0x396, 0x20)
0x361	DUP1
0x362	PUSH(MLOAD(POP(0x0)))
0x363	SWAP1
0x364	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x365	SWAP2
0x366	SWAP1
0x367	SWAP2
0x372	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x362) + POP(@0x341)))
0x373	SWAP2
0x374	SWAP1
0x375	DUP2
0x376	SWAP1
0x377	DUP2
0x378	DUP2
0x379	DUP2
0x37A	DUP2
0x37B	DUP2
0x37C	DUP9
0x37D	DUP2
0x37E	PUSH(CALL(POP(0x0), POP(@0x372), POP(0x0), POP(@0x355), POP(0x0), POP(@0x355), POP(0x0)))
0x37F	POP()
0x380	POP()
0x381	PUSH(0x2)
0x383	DUP1
0x387	PUSH(0x1 + SLOAD(POP(0x2)))
0x388	SWAP1
0x389	SSTORE(POP(0x2), POP(@0x387))
0x38A	POP()
0x38B	PUSH(:label21)
0x38E	SWAP2
0x38F	POP()
0x390	POP()
0x391	JUMP(POP(:label21))

:label22
# Stack: [[@0x27A | 0x0] [@0x168 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x393	POP()
0x394	POP()
0x395	JUMP(POP())


