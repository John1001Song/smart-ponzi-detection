# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x1E0018D6)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label2, 0x1FC06F0D == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label3, 0x32D79689 == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label4, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label5, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label6, 0xD377DEDD == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label7, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label9)
0x65	PUSH(:label10)
0x6B	JUMP(:label8)

:label1
# Stack: [@0x13]
0x6D	PUSH(:label11)
0x72	PUSH(SLOAD(0x4))
0x73	DUP2
0x74	JUMP(POP(:label11))

:label2
# Stack: [@0x13]
0x76	PUSH(:label12)
0x7B	PUSH(CALLDATALOAD(0x4))
0x7C	PUSH(0x1)
0x7E	DUP1
0x7F	PUSH(SLOAD(POP(0x1)))
0x80	DUP2
0x81	SWAP1
0x82	DUP2
0x88	JUMPI(0x2, !(POP(@0x7B) < POP(@0x7F)))

# Stack: [@0x7B 0x1 @0x7B :label12 @0x13]
0x89	POP()
0x8C	MSTORE(0x0, POP(0x1))
0xB8	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 + POP(@0x7B)))
0xB9	DUP2
0xBA	JUMP(POP(:label12))

:label3
# Stack: [@0x13]
0xBC	PUSH(:label11)
0xC1	PUSH(SLOAD(0x3))
0xC2	DUP2
0xC3	JUMP(POP(:label11))

:label4
# Stack: [@0x13]
0xC5	PUSH(:label12)
0xCA	PUSH(CALLDATALOAD(0x4))
0xCB	PUSH(0x0)
0xCD	DUP1
0xCE	PUSH(SLOAD(POP(0x0)))
0xCF	DUP2
0xD0	SWAP1
0xD1	DUP2
0xD7	JUMPI(0x2, !(POP(@0xCA) < POP(@0xCE)))

# Stack: [@0xCA 0x0 @0xCA :label12 @0x13]
0xD8	POP()
0xD9	DUP1
0xDA	MSTORE(POP(0x0), POP(0x0))
0xDB	PUSH(0x0)
0xDD	DUP1
0xE4	DUP1
0xE5	CODECOPY(POP(0x0), 0x3BE, 0x20)
0xE6	DUP1
0xE7	PUSH(MLOAD(POP(0x0)))
0xE8	SWAP1
0xE9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xF4	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0xE7) + POP(@0xCA)))
0xF5	DUP2
0xF6	JUMP(POP(:label12))

:label5
# Stack: [@0x13]
0xF8	PUSH(:label11)
0xFD	PUSH(SLOAD(0x2))
0xFE	DUP2
0xFF	JUMP(POP(:label11))

:label6
# Stack: [@0x13]
0x101	PUSH(:label12)
0x10F	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x5))
0x110	DUP2
0x111	JUMP(POP(:label12))

:label7
# Stack: [@0x13]
0x113	PUSH(:label9)

:label8
# Stack: [[:label10 | :label9] [:label9 | @0x13]]
0x117	PUSH(0x0)
0x119	DUP1
0x128	JUMPI(:label13, CALLVALUE() == 0x7CE66C50E2840000)

# Stack: [0x0 0x0 [:label10 | :label9] [:label9 | @0x13]]
0x12C	JUMP(0x2)

:label9
# Stack: []
0x12E	STOP()

:label10
# Stack: [:label9]
0x130	JUMP(POP(:label9))

:label11
# Stack: [[@0xFD | @0xC1 | @0x72] [:label11 | :label11 | :label11] @0x13]
0x132	PUSH(0x40)
0x134	DUP1
0x135	PUSH(MLOAD(POP(0x40)))
0x136	SWAP2
0x137	DUP3
0x138	MSTORE(POP(@0x135), POP())
0x139	PUSH(MLOAD(POP(0x40)))
0x13A	SWAP1
0x13B	DUP2
0x13C	SWAP1
0x140	PUSH(0x20 + POP(@0x135) - POP(@0x139))
0x141	SWAP1
0x142	RETURN(POP(@0x139), POP(@0x140))

:label12
# Stack: [[@0x10F | @0xF4 | @0xB8] [:label12 | :label12 | :label12] @0x13]
0x144	PUSH(0x40)
0x146	DUP1
0x147	PUSH(MLOAD(POP(0x40)))
0x14F	PUSH(0x2 ** 0xA0 - 0x1)
0x150	SWAP3
0x151	SWAP1
0x152	SWAP3
0x154	DUP2
0x155	MSTORE(POP(@0x147), POP(@0x14F) & POP())
0x156	PUSH(MLOAD(POP(0x40)))
0x157	SWAP1
0x158	DUP2
0x159	SWAP1
0x15D	PUSH(0x20 + POP(@0x147) - POP(@0x156))
0x15E	SWAP1
0x15F	RETURN(POP(@0x156), POP(@0x15D))

:label13
# Stack: [0x0 0x0 [:label10 | :label9] [:label9 | @0x13]]
0x163	PUSH(SLOAD(0x4))
0x164	PUSH(0x8)
0x166	SWAP1
0x16C	JUMPI(:label16, !(POP(@0x163) > POP(0x8)))

# Stack: [0x0 0x0 [:label10 | :label9] [:label9 | @0x13]]
0x16D	PUSH(0x1)
0x16F	DUP1
0x170	PUSH(SLOAD(POP(0x1)))
0x171	DUP1
0x172	DUP3
0x173	PUSH(POP(0x1) + POP(@0x170))
0x174	DUP1
0x175	DUP4
0x176	SSTORE(POP(0x1), POP(@0x173))
0x177	SWAP1
0x178	SWAP4
0x179	POP()
0x17A	SWAP1
0x17B	DUP2
0x17C	DUP5
0x17D	DUP1
0x17E	PUSH(!POP(@0x170))
0x17F	DUP2
0x180	SWAP1
0x185	JUMPI(:label15, POP(@0x17E) > POP(@0x173))

# Stack: [@0x170 @0x173 0x1 @0x173 0x0 @0x170 [:label10 | :label9] [:label9 | @0x13]]
0x186	DUP2
0x187	DUP4
0x18A	MSTORE(0x0, POP(0x1))
0x18F	PUSH(SHA3(0x0, 0x20))
0x190	SWAP2
0x191	DUP3
0x192	PUSH(POP(@0x18F) + POP(@0x170))
0x193	SWAP2
0x194	PUSH(POP(@0x18F) + POP(@0x173))
0x195	PUSH(:label15)
0x198	SWAP2
0x199	SWAP1

:label14
# Stack: [[@0x2B2 | @0x194 | @0x1B3] [@0x192 | @0x2AF] [:label15 | :label18] [@0x173 | @0x286] [0x1 | 0x0] [@0x173 | @0x286] [0x0 | @0x282] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x19B	DUP1
0x19C	DUP3
0x1A2	JUMPI(:label17, !(POP() > POP()))

# Stack: [[@0x194 | @0x1B3 | @0x2B2] [@0x192 | @0x2AF] [:label15 | :label18] [@0x173 | @0x286] [0x1 | 0x0] [@0x173 | @0x286] [@0x282 | 0x0] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x1A3	DUP1
0x1AF	DUP1
0x1B0	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x1B3	PUSH(0x1 + POP())
0x1B7	JUMP(:label14)

:label15
# Stack: [[@0x192 | @0x170] @0x173 0x1 @0x173 0x0 @0x170 [:label10 | :label9] [:label9 | @0x13]]
0x1B9	POP()
0x1BA	POP()
0x1BB	POP()
0x1BC	POP()
0x1BD	PUSH(CALLER())
0x1BE	PUSH(0x1)
0x1C2	POP(0x0)
0x1C3	DUP4
0x1C4	DUP2
0x1C6	DUP1
0x1CC	JUMPI(0x2, !(POP(@0x170) < SLOAD(POP(0x1))))

# Stack: [@0x170 0x1 @0x1BD 0x0 @0x170 [:label10 | :label9] [@0x13 | :label9]]
0x1CD	PUSH(0x0)
0x1CF	SWAP2
0x1D0	SWAP1
0x1D1	SWAP2
0x1D2	MSTORE(POP(0x0), POP(0x1))
0x1F4	PUSH(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 + POP(@0x170))
0x1F5	DUP1
0x200	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x1F4)))
0x201	SWAP1
0x202	SWAP2
0x203	PUSH(POP(@0x1BD) | POP(@0x200))
0x204	SWAP1
0x205	SSTORE(POP(@0x1F4), POP(@0x203))
0x210	JUMPI(:label16, !(0xA == SLOAD(0x4)))

# Stack: [0x0 @0x170 [:label10 | :label9] [:label9 | @0x13]]
0x213	PUSH(SLOAD(0x3))
0x214	PUSH(0x1)
0x216	DUP1
0x217	PUSH(SLOAD(POP(0x1)))
0x218	SWAP1
0x219	SWAP2
0x21A	SWAP1
0x21B	DUP2
0x221	JUMPI(0x2, !(POP(@0x213) < POP(@0x217)))

# Stack: [@0x213 0x1 0x0 @0x170 [:label10 | :label9] [:label9 | @0x13]]
0x222	PUSH(0x5)
0x224	DUP1
0x225	PUSH(SLOAD(POP(0x5)))
0x226	PUSH(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6)
0x247	SWAP2
0x248	SWAP1
0x249	SWAP3
0x254	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6) + POP(@0x213)))
0x25D	PUSH(~(0x2 ** 0xA0 - 0x1))
0x25E	SWAP2
0x25F	SWAP1
0x260	SWAP3
0x261	PUSH(POP(@0x25D) & POP(@0x225))
0x262	SWAP2
0x263	SWAP1
0x264	SWAP2
0x265	PUSH(POP(@0x261) | POP(@0x254))
0x266	SWAP1
0x267	SSTORE(POP(0x5), POP(@0x265))
0x268	PUSH(0x3)
0x26A	DUP1
0x26B	PUSH(SLOAD(POP(0x3)))
0x26C	SWAP1
0x26D	SWAP2
0x26E	PUSH(POP(0x1) + POP(@0x26B))
0x26F	SWAP1
0x270	SSTORE(POP(0x3), POP(@0x26E))

:label16
# Stack: [0x0 [0x0 | @0x170] [:label10 | :label9] [:label9 | @0x13]]
0x274	PUSH(SLOAD(0x4))
0x275	PUSH(0x9)
0x277	SWAP1
0x27D	JUMPI(:label19, !(POP(@0x274) < POP(0x9)))

# Stack: [0x0 [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x27E	POP()
0x27F	PUSH(0x0)
0x281	DUP1
0x282	PUSH(SLOAD(POP(0x0)))
0x285	DUP1
0x286	PUSH(POP(@0x282) + 0x1)
0x287	DUP1
0x288	DUP4
0x289	SSTORE(POP(0x0), POP(@0x286))
0x28A	SWAP1
0x28B	SWAP2
0x28C	DUP2
0x28D	DUP4
0x28E	DUP1
0x28F	PUSH(!POP(@0x282))
0x290	DUP2
0x291	SWAP1
0x296	JUMPI(:label18, POP(@0x28F) > POP(@0x286))

# Stack: [@0x282 @0x286 0x0 @0x286 @0x282 [@0x170 | 0x0] [:label9 | :label10] [:label9 | @0x13]]
0x297	DUP3
0x298	DUP1
0x299	MSTORE(POP(0x0), POP(0x0))
0x29A	PUSH(:label18)
0x29D	SWAP1
0x29E	PUSH(0x0)
0x2A0	DUP1
0x2A7	DUP1
0x2A8	CODECOPY(POP(0x0), 0x3BE, 0x20)
0x2A9	DUP1
0x2AA	PUSH(MLOAD(POP(0x0)))
0x2AB	SWAP1
0x2AC	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2AD	SWAP1
0x2AE	DUP2
0x2AF	PUSH(POP(@0x2AA) + POP(@0x282))
0x2B0	SWAP1
0x2B1	DUP4
0x2B2	PUSH(POP(@0x286) + POP(@0x2AA))
0x2B6	JUMP(:label14)

:label17
# Stack: [[@0x1B3 | @0x2B2 | @0x194] [@0x192 | @0x2AF] [:label15 | :label18] [@0x173 | @0x286] [0x1 | 0x0] [@0x173 | @0x286] [0x0 | @0x282] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x2B8	POP()
0x2B9	SWAP1
0x2BA	JUMP(POP())

:label18
# Stack: [[@0x2AF | @0x282] @0x286 0x0 @0x286 @0x282 [@0x170 | 0x0] [:label10 | :label9] [@0x13 | :label9]]
0x2BC	POP()
0x2BD	POP()
0x2BE	POP()
0x2BF	POP()
0x2C0	PUSH(CALLER())
0x2C1	PUSH(0x0)
0x2C5	POP(0x0)
0x2C6	DUP3
0x2C7	DUP2
0x2C9	DUP1
0x2CF	JUMPI(0x2, !(POP(@0x282) < SLOAD(POP(0x0))))

# Stack: [@0x282 0x0 @0x2C0 @0x282 [@0x170 | 0x0] [:label9 | :label10] [:label9 | @0x13]]
0x2D0	SWAP1
0x2D1	DUP1
0x2D2	MSTORE(POP(0x0), POP(0x0))
0x2D3	PUSH(0x0)
0x2D5	DUP1
0x2DC	DUP1
0x2DD	CODECOPY(POP(0x0), 0x3BE, 0x20)
0x2DE	DUP1
0x2DF	PUSH(MLOAD(POP(0x0)))
0x2E0	SWAP1
0x2E1	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2E2	PUSH(POP(@0x2DF) + POP(@0x282))
0x2E3	DUP1
0x2EE	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2E2)))
0x2EF	SWAP1
0x2F0	SWAP2
0x2F1	PUSH(POP(@0x2C0) | POP(@0x2EE))
0x2F2	SWAP1
0x2F3	SSTORE(POP(@0x2E2), POP(@0x2F1))

:label19
# Stack: [[@0x282 | 0x0] [0x0 | @0x170] [:label10 | :label9] [@0x13 | :label9]]
0x2F5	PUSH(0x4)
0x2F7	DUP1
0x2FB	PUSH(0x1 + SLOAD(POP(0x4)))
0x2FC	SWAP1
0x2FD	DUP2
0x2FE	SWAP1
0x2FF	SSTORE(POP(0x4), POP(@0x2FB))
0x307	JUMPI(:label20, !(0xB == POP(@0x2FB)))

# Stack: [[@0x282 | 0x0] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x30C	SSTORE(0x4, 0x0)

:label20
# Stack: [[@0x282 | 0x0] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x310	DUP1
0x315	JUMPI(:label21, POP() == 0x0)

# Stack: [[@0x282 | 0x0] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x318	PUSH(SLOAD(0x5))
0x31B	PUSH(MLOAD(0x40))
0x323	PUSH(0x2 ** 0xA0 - 0x1)
0x324	SWAP1
0x325	SWAP1
0x326	SWAP2
0x327	PUSH(POP(@0x323) & POP(@0x318))
0x328	SWAP1
0x329	PUSH(0x0)
0x32B	SWAP1
0x32C	PUSH(0xDE0B6B3A7640000)
0x335	SWAP1
0x336	DUP3
0x337	DUP2
0x338	DUP2
0x339	DUP2
0x33A	DUP6
0x33B	DUP9
0x33C	DUP4
0x33D	PUSH(CALL(POP(0x0), POP(@0x327), POP(0xDE0B6B3A7640000), POP(@0x31B), POP(0x0), POP(@0x31B), POP(0x0)))
0x33E	POP()
0x33F	POP()
0x340	POP()
0x341	POP()
0x342	POP()

:label21
# Stack: [[0x0 | @0x282] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x35E	JUMPI(:label22, !(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()) > 0x8AC7230489E80000))

# Stack: [[@0x282 | 0x0] [@0x170 | 0x0] [:label9 | :label10] [:label9 | @0x13]]
0x361	PUSH(SLOAD(0x2))
0x362	PUSH(0x0)
0x364	DUP1
0x365	PUSH(SLOAD(POP(0x0)))
0x366	SWAP1
0x367	SWAP2
0x368	SWAP1
0x369	DUP2
0x36F	JUMPI(0x2, !(POP(@0x361) < POP(@0x365)))

# Stack: [@0x361 0x0 [@0x282 | 0x0] [0x0 | @0x170] [:label10 | :label9] [:label9 | @0x13]]
0x370	DUP2
0x371	DUP1
0x372	MSTORE(POP(0x0), POP(0x0))
0x375	PUSH(MLOAD(0x40))
0x376	PUSH(0x0)
0x378	DUP1
0x37F	DUP1
0x380	CODECOPY(POP(0x0), 0x3BE, 0x20)
0x381	DUP1
0x382	PUSH(MLOAD(POP(0x0)))
0x383	SWAP1
0x384	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x385	SWAP2
0x386	SWAP1
0x387	SWAP2
0x392	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x382) + POP(@0x361)))
0x393	SWAP2
0x394	SWAP1
0x395	PUSH(0x8AC7230489E80000)
0x39E	SWAP1
0x39F	DUP3
0x3A0	DUP2
0x3A1	DUP2
0x3A2	DUP2
0x3A3	DUP6
0x3A4	DUP9
0x3A5	DUP4
0x3A6	PUSH(CALL(POP(0x0), POP(@0x392), POP(0x8AC7230489E80000), POP(@0x375), POP(0x0), POP(@0x375), POP(0x0)))
0x3A7	POP()
0x3A8	POP()
0x3A9	PUSH(0x2)
0x3AB	DUP1
0x3AF	PUSH(0x1 + SLOAD(POP(0x2)))
0x3B0	SWAP1
0x3B1	SSTORE(POP(0x2), POP(@0x3AF))
0x3B2	POP()
0x3B3	PUSH(:label21)
0x3B6	SWAP2
0x3B7	POP()
0x3B8	POP()
0x3B9	JUMP(POP(:label21))

:label22
# Stack: [[@0x282 | 0x0] [@0x170 | 0x0] [:label10 | :label9] [:label9 | @0x13]]
0x3BB	POP()
0x3BC	POP()
0x3BD	JUMP(POP())


