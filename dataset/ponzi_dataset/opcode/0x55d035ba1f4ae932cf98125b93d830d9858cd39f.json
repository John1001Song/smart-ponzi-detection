# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x1E0018D6)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label2, 0x1FC06F0D == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label3, 0x32D79689 == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label4, 0x9FAA3C91 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label5, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label7, 0xCA708230 == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label8, 0xD377DEDD == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label9)
0x70	PUSH(0x0)
0x72	DUP1
0x73	PUSH(SLOAD(POP(0x0)))
0x74	SWAP1
0x83	JUMPI(:label10, CALLVALUE() == 0x7CE66C50E2840000)

# Stack: [0x0 @0x73 :label9]
0x87	JUMP(0x2)

:label1
# Stack: [@0x13]
0x89	PUSH(:label20)
0x8E	PUSH(SLOAD(0x4))
0x8F	DUP2
0x90	JUMP(POP(:label20))

:label2
# Stack: [@0x13]
0x92	PUSH(:label21)
0x97	PUSH(CALLDATALOAD(0x4))
0x98	PUSH(0x1)
0x9A	DUP1
0x9B	PUSH(SLOAD(POP(0x1)))
0x9C	DUP2
0x9D	SWAP1
0x9E	DUP2
0xA4	JUMPI(0x2, !(POP(@0x97) < POP(@0x9B)))

# Stack: [@0x97 0x1 @0x97 :label21 @0x13]
0xA5	POP()
0xA8	MSTORE(0x0, POP(0x1))
0xD4	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 + POP(@0x97)))
0xD5	DUP2
0xD6	JUMP(POP(:label21))

:label3
# Stack: [@0x13]
0xD8	PUSH(:label20)
0xDD	PUSH(SLOAD(0x3))
0xDE	DUP2
0xDF	JUMP(POP(:label20))

:label4
# Stack: [@0x13]
0xE1	PUSH(:label21)
0xEF	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x6))
0xF0	DUP2
0xF1	JUMP(POP(:label21))

:label5
# Stack: [@0x13]
0xF3	PUSH(:label21)
0xF8	PUSH(CALLDATALOAD(0x4))
0xF9	PUSH(0x0)
0xFB	DUP1
0xFC	PUSH(SLOAD(POP(0x0)))
0xFD	DUP2
0xFE	SWAP1
0xFF	DUP2
0x105	JUMPI(0x2, !(POP(@0xF8) < POP(@0xFC)))

# Stack: [@0xF8 0x0 @0xF8 :label21 @0x13]
0x106	POP()
0x107	DUP1
0x108	MSTORE(POP(0x0), POP(0x0))
0x109	PUSH(0x0)
0x10B	DUP1
0x112	DUP1
0x113	CODECOPY(POP(0x0), 0x3FA, 0x20)
0x114	DUP1
0x115	PUSH(MLOAD(POP(0x0)))
0x116	SWAP1
0x117	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x122	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x115) + POP(@0xF8)))
0x123	DUP2
0x124	JUMP(POP(:label21))

:label6
# Stack: [@0x13]
0x126	PUSH(:label20)
0x12B	PUSH(SLOAD(0x2))
0x12C	DUP2
0x12D	JUMP(POP(:label20))

:label7
# Stack: [@0x13]
0x134	PUSH(SLOAD(0x6))
0x137	PUSH(MLOAD(0x40))
0x13F	PUSH(0x2 ** 0xA0 - 0x1)
0x140	SWAP2
0x141	DUP3
0x142	PUSH(POP(@0x13F) & POP(@0x134))
0x143	SWAP2
0x144	PUSH(0x0)
0x146	SWAP2
0x147	PUSH(ADDRESS())
0x148	SWAP1
0x149	SWAP2
0x14B	PUSH(BALANCE(POP(@0x13F) & POP(@0x147)))
0x14C	SWAP1
0x14D	DUP3
0x14E	DUP2
0x14F	DUP2
0x150	DUP2
0x151	DUP6
0x152	DUP9
0x153	DUP4
0x154	PUSH(CALL(POP(0x0), POP(@0x142), POP(@0x14B), POP(@0x137), POP(0x0), POP(@0x137), POP(0x0)))
0x155	POP()
0x156	POP()
0x157	POP()
0x158	POP()
0x159	POP()
0x15A	JUMP(:label9)

:label8
# Stack: [@0x13]
0x15C	PUSH(:label21)
0x16A	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x5))
0x16B	DUP2
0x16C	JUMP(POP(:label21))

:label9
# Stack: []
0x16E	STOP()

:label10
# Stack: [0x0 @0x73 :label9]
0x172	PUSH(SLOAD(0x4))
0x173	PUSH(0x8)
0x175	SWAP1
0x17B	JUMPI(:label13, !(POP(@0x172) > POP(0x8)))

# Stack: [0x0 @0x73 :label9]
0x17C	POP()
0x17D	PUSH(0x1)
0x17F	DUP1
0x180	PUSH(SLOAD(POP(0x1)))
0x181	DUP1
0x182	DUP3
0x183	PUSH(POP(0x1) + POP(@0x180))
0x184	DUP1
0x185	DUP4
0x186	SSTORE(POP(0x1), POP(@0x183))
0x187	SWAP1
0x188	SWAP2
0x189	DUP2
0x18A	DUP4
0x18B	DUP1
0x18C	PUSH(!POP(@0x180))
0x18D	DUP2
0x18E	SWAP1
0x193	JUMPI(:label12, POP(@0x18C) > POP(@0x183))

# Stack: [@0x180 @0x183 0x1 @0x183 @0x180 @0x73 :label9]
0x194	DUP2
0x195	DUP4
0x198	MSTORE(0x0, POP(0x1))
0x19D	PUSH(SHA3(0x0, 0x20))
0x19E	SWAP2
0x19F	DUP3
0x1A0	PUSH(POP(@0x19D) + POP(@0x180))
0x1A1	SWAP2
0x1A2	PUSH(POP(@0x19D) + POP(@0x183))
0x1A3	PUSH(:label12)
0x1A6	SWAP2
0x1A7	SWAP1

:label11
# Stack: [[@0x1A2 | @0x1C1 | @0x2BF] [@0x1A0 | @0x2BC] [:label12 | :label15] [@0x183 | @0x293] [0x1 | 0x0] [@0x183 | @0x293] [0x0 | @0x180] @0x73 :label9]
0x1A9	DUP1
0x1AA	DUP3
0x1B0	JUMPI(:label14, !(POP() > POP()))

# Stack: [[@0x1A2 | @0x1C1 | @0x2BF] [@0x1A0 | @0x2BC] [:label12 | :label15] [@0x183 | @0x293] [0x1 | 0x0] [@0x183 | @0x293] [@0x180 | 0x0] @0x73 :label9]
0x1B1	DUP1
0x1BD	DUP1
0x1BE	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x1C1	PUSH(0x1 + POP())
0x1C5	JUMP(:label11)

:label12
# Stack: [[@0x1A0 | @0x180] @0x183 0x1 @0x183 @0x180 @0x73 :label9]
0x1C7	POP()
0x1C8	POP()
0x1C9	POP()
0x1CA	POP()
0x1CB	PUSH(CALLER())
0x1CC	PUSH(0x1)
0x1D0	POP(0x0)
0x1D1	DUP3
0x1D2	DUP2
0x1D4	DUP1
0x1DA	JUMPI(0x2, !(POP(@0x180) < SLOAD(POP(0x1))))

# Stack: [@0x180 0x1 @0x1CB @0x180 @0x73 :label9]
0x1DB	PUSH(0x0)
0x1DD	SWAP2
0x1DE	SWAP1
0x1DF	SWAP2
0x1E0	MSTORE(POP(0x0), POP(0x1))
0x202	PUSH(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 + POP(@0x180))
0x203	DUP1
0x20E	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x202)))
0x20F	SWAP1
0x210	SWAP2
0x211	PUSH(POP(@0x1CB) | POP(@0x20E))
0x212	SWAP1
0x213	SSTORE(POP(@0x202), POP(@0x211))
0x21E	JUMPI(:label13, !(0xA == SLOAD(0x4)))

# Stack: [@0x180 @0x73 :label9]
0x221	PUSH(SLOAD(0x3))
0x222	PUSH(0x1)
0x224	DUP1
0x225	PUSH(SLOAD(POP(0x1)))
0x226	SWAP1
0x227	SWAP2
0x228	SWAP1
0x229	DUP2
0x22F	JUMPI(0x2, !(POP(@0x221) < POP(@0x225)))

# Stack: [@0x221 0x1 @0x180 @0x73 :label9]
0x230	PUSH(0x5)
0x232	DUP1
0x233	PUSH(SLOAD(POP(0x5)))
0x234	PUSH(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6)
0x255	SWAP2
0x256	SWAP1
0x257	SWAP3
0x262	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6) + POP(@0x221)))
0x26B	PUSH(~(0x2 ** 0xA0 - 0x1))
0x26C	SWAP2
0x26D	SWAP1
0x26E	SWAP3
0x26F	PUSH(POP(@0x26B) & POP(@0x233))
0x270	SWAP2
0x271	SWAP1
0x272	SWAP2
0x273	PUSH(POP(@0x26F) | POP(@0x262))
0x274	SWAP1
0x275	SSTORE(POP(0x5), POP(@0x273))
0x276	PUSH(0x3)
0x278	DUP1
0x279	PUSH(SLOAD(POP(0x3)))
0x27A	SWAP1
0x27B	SWAP2
0x27C	PUSH(POP(0x1) + POP(@0x279))
0x27D	SWAP1
0x27E	SSTORE(POP(0x3), POP(@0x27C))

:label13
# Stack: [[@0x180 | 0x0] @0x73 :label9]
0x282	PUSH(SLOAD(0x4))
0x283	PUSH(0x9)
0x285	SWAP1
0x28B	JUMPI(:label16, !(POP(@0x282) < POP(0x9)))

# Stack: [[@0x180 | 0x0] @0x73 :label9]
0x28C	PUSH(0x0)
0x28E	DUP1
0x28F	PUSH(SLOAD(POP(0x0)))
0x292	DUP1
0x293	PUSH(POP(@0x28F) + 0x1)
0x294	DUP1
0x295	DUP4
0x296	SSTORE(POP(0x0), POP(@0x293))
0x297	SWAP2
0x298	SWAP1
0x299	DUP3
0x29A	SWAP1
0x29B	DUP1
0x29C	PUSH(!POP(@0x28F))
0x29D	DUP2
0x29E	SWAP1
0x2A3	JUMPI(:label15, POP(@0x29C) > POP(@0x293))

# Stack: [@0x28F @0x293 0x0 @0x293 [@0x180 | 0x0] @0x73 :label9]
0x2A4	DUP3
0x2A5	DUP1
0x2A6	MSTORE(POP(0x0), POP(0x0))
0x2A7	PUSH(:label15)
0x2AA	SWAP1
0x2AB	PUSH(0x0)
0x2AD	DUP1
0x2B4	DUP1
0x2B5	CODECOPY(POP(0x0), 0x3FA, 0x20)
0x2B6	DUP1
0x2B7	PUSH(MLOAD(POP(0x0)))
0x2B8	SWAP1
0x2B9	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2BA	SWAP1
0x2BB	DUP2
0x2BC	PUSH(POP(@0x2B7) + POP(@0x28F))
0x2BD	SWAP1
0x2BE	DUP4
0x2BF	PUSH(POP(@0x293) + POP(@0x2B7))
0x2C3	JUMP(:label11)

:label14
# Stack: [[@0x1C1 | @0x2BF | @0x1A2] [@0x1A0 | @0x2BC] [:label12 | :label15] [@0x183 | @0x293] [0x1 | 0x0] [@0x183 | @0x293] [0x0 | @0x180] @0x73 :label9]
0x2C5	POP()
0x2C6	SWAP1
0x2C7	JUMP(POP())

:label15
# Stack: [[@0x2BC | @0x28F] @0x293 0x0 @0x293 [@0x180 | 0x0] @0x73 :label9]
0x2C9	POP()
0x2CA	POP()
0x2CB	POP()
0x2CC	POP()
0x2CD	PUSH(CALLER())
0x2CE	PUSH(0x0)
0x2D2	POP(0x0)
0x2D3	DUP4
0x2D4	DUP2
0x2D6	DUP1
0x2DC	JUMPI(0x2, !(POP(@0x73) < SLOAD(POP(0x0))))

# Stack: [@0x73 0x0 @0x2CD [0x0 | @0x180] @0x73 :label9]
0x2DD	SWAP1
0x2DE	DUP1
0x2DF	MSTORE(POP(0x0), POP(0x0))
0x2E0	PUSH(0x0)
0x2E2	DUP1
0x2E9	DUP1
0x2EA	CODECOPY(POP(0x0), 0x3FA, 0x20)
0x2EB	DUP1
0x2EC	PUSH(MLOAD(POP(0x0)))
0x2ED	SWAP1
0x2EE	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2EF	PUSH(POP(@0x2EC) + POP(@0x73))
0x2F0	DUP1
0x2FB	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2EF)))
0x2FC	SWAP1
0x2FD	SWAP2
0x2FE	PUSH(POP(@0x2CD) | POP(@0x2FB))
0x2FF	SWAP1
0x300	SSTORE(POP(@0x2EF), POP(@0x2FE))

:label16
# Stack: [[@0x180 | 0x0] @0x73 :label9]
0x302	PUSH(0x4)
0x304	DUP1
0x308	PUSH(0x1 + SLOAD(POP(0x4)))
0x309	SWAP1
0x30A	DUP2
0x30B	SWAP1
0x30C	SSTORE(POP(0x4), POP(@0x308))
0x314	JUMPI(:label17, !(0xB == POP(@0x308)))

# Stack: [[0x0 | @0x180] @0x73 :label9]
0x319	SSTORE(0x4, 0x0)

:label17
# Stack: [[@0x180 | 0x0] @0x73 :label9]
0x31D	DUP2
0x322	JUMPI(:label18, POP(@0x73) == 0x0)

# Stack: [[0x0 | @0x180] @0x73 :label9]
0x325	PUSH(SLOAD(0x5))
0x328	PUSH(MLOAD(0x40))
0x330	PUSH(0x2 ** 0xA0 - 0x1)
0x331	SWAP1
0x332	SWAP1
0x333	SWAP2
0x334	PUSH(POP(@0x330) & POP(@0x325))
0x335	SWAP1
0x336	PUSH(0x0)
0x338	SWAP1
0x339	PUSH(0xDE0B6B3A7640000)
0x342	SWAP1
0x343	DUP3
0x344	DUP2
0x345	DUP2
0x346	DUP2
0x347	DUP6
0x348	DUP9
0x349	DUP4
0x34A	PUSH(CALL(POP(0x0), POP(@0x334), POP(0xDE0B6B3A7640000), POP(@0x328), POP(0x0), POP(@0x328), POP(0x0)))
0x34B	POP()
0x34C	POP()
0x34D	POP()
0x34E	POP()
0x34F	POP()

:label18
# Stack: [[@0x180 | 0x0] @0x73 :label9]
0x36B	JUMPI(:label19, !(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()) > 0x8AC7230489E80000))

# Stack: [[@0x180 | 0x0] @0x73 :label9]
0x36E	PUSH(SLOAD(0x2))
0x36F	PUSH(0x0)
0x371	DUP1
0x372	PUSH(SLOAD(POP(0x0)))
0x373	SWAP1
0x374	SWAP2
0x375	SWAP1
0x376	DUP2
0x37C	JUMPI(0x2, !(POP(@0x36E) < POP(@0x372)))

# Stack: [@0x36E 0x0 [@0x180 | 0x0] @0x73 :label9]
0x37D	DUP2
0x37E	DUP1
0x37F	MSTORE(POP(0x0), POP(0x0))
0x382	PUSH(MLOAD(0x40))
0x383	PUSH(0x0)
0x385	DUP1
0x38C	DUP1
0x38D	CODECOPY(POP(0x0), 0x3FA, 0x20)
0x38E	DUP1
0x38F	PUSH(MLOAD(POP(0x0)))
0x390	SWAP1
0x391	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x392	SWAP2
0x393	SWAP1
0x394	SWAP2
0x39F	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x38F) + POP(@0x36E)))
0x3A0	SWAP2
0x3A1	SWAP1
0x3A2	PUSH(0x8AC7230489E80000)
0x3AB	SWAP1
0x3AC	DUP3
0x3AD	DUP2
0x3AE	DUP2
0x3AF	DUP2
0x3B0	DUP6
0x3B1	DUP9
0x3B2	DUP4
0x3B3	PUSH(CALL(POP(0x0), POP(@0x39F), POP(0x8AC7230489E80000), POP(@0x382), POP(0x0), POP(@0x382), POP(0x0)))
0x3B4	POP()
0x3B5	POP()
0x3B6	PUSH(0x2)
0x3B8	DUP1
0x3BC	PUSH(0x1 + SLOAD(POP(0x2)))
0x3BD	SWAP1
0x3BE	SSTORE(POP(0x2), POP(@0x3BC))
0x3BF	POP()
0x3C0	PUSH(:label18)
0x3C3	SWAP2
0x3C4	POP()
0x3C5	POP()
0x3C6	JUMP(POP(:label18))

:label19
# Stack: [[@0x180 | 0x0] @0x73 :label9]
0x3C8	POP()
0x3C9	POP()
0x3CA	JUMP(POP(:label9))

:label20
# Stack: [[@0x12B | @0xDD | @0x8E] [:label20 | :label20 | :label20] @0x13]
0x3CC	PUSH(0x40)
0x3CE	DUP1
0x3CF	PUSH(MLOAD(POP(0x40)))
0x3D0	SWAP2
0x3D1	DUP3
0x3D2	MSTORE(POP(@0x3CF), POP())
0x3D3	PUSH(MLOAD(POP(0x40)))
0x3D4	SWAP1
0x3D5	DUP2
0x3D6	SWAP1
0x3DA	PUSH(0x20 + POP(@0x3CF) - POP(@0x3D3))
0x3DB	SWAP1
0x3DC	RETURN(POP(@0x3D3), POP(@0x3DA))

:label21
# Stack: [[@0x16A | @0x122 | @0xEF | @0xD4] [:label21 | :label21 | :label21 | :label21] @0x13]
0x3DE	PUSH(0x40)
0x3E0	DUP1
0x3E1	PUSH(MLOAD(POP(0x40)))
0x3E9	PUSH(0x2 ** 0xA0 - 0x1)
0x3EA	SWAP3
0x3EB	SWAP1
0x3EC	SWAP3
0x3EE	DUP2
0x3EF	MSTORE(POP(@0x3E1), POP(@0x3E9) & POP())
0x3F0	PUSH(MLOAD(POP(0x40)))
0x3F1	SWAP1
0x3F2	DUP2
0x3F3	SWAP1
0x3F7	PUSH(0x20 + POP(@0x3E1) - POP(@0x3F0))
0x3F8	SWAP1
0x3F9	RETURN(POP(@0x3F0), POP(@0x3F7))


