# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label2, POP(@0x13) == 0x8714BFA)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x2F75CA81 == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label5, 0x9EAB503A == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label6, 0xD5F39488 == POP(@0x13))

:label0
# Stack: []
0x41	PUSH(:label7)
0x5C	JUMPI(:label1, !(BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()) > 0xF5232269808000))

# Stack: [:label7]
0x5F	PUSH(SLOAD(0x1))
0x67	PUSH(0x2 ** 0xA0 - 0x1)
0x68	SWAP1
0x69	DUP2
0x6A	PUSH(POP(@0x67) & POP(@0x5F))
0x6B	SWAP1
0x6C	PUSH(0x0)
0x6E	SWAP1
0x7B	PUSH(~0x470DE4DF81FFFF + BALANCE(ADDRESS() & POP(@0x67)))
0x7C	PUSH(0x60)
0x7E	DUP3
0x7F	DUP2
0x80	DUP2
0x81	DUP2
0x82	DUP6
0x83	DUP9
0x84	DUP4
0x85	PUSH(CALL(POP(0x0), POP(@0x6A), POP(@0x7B), POP(0x60), POP(0x0), POP(0x60), POP(0x0)))
0x86	POP()
0x87	POP()
0x88	POP()
0x89	POP()
0x8A	POP()

:label1
# Stack: [[:label7 | :label7]]
0x8C	JUMP(POP())

:label2
# Stack: [@0x13]
0x8E	PUSH(:label7)
0x93	PUSH(SLOAD(0x0))
0x94	PUSH(CALLER())
0x9C	PUSH(0x2 ** 0xA0 - 0x1)
0x9D	SWAP1
0x9E	DUP2
0x9F	PUSH(POP(@0x9C) & POP(@0x94))
0xA0	SWAP1
0xA7	JUMPI(:label1, !(POP(@0x93) & POP(@0x9C) == POP(@0x9F)))

# Stack: [:label7 @0x13]
0xA8	PUSH(0x0)
0xAA	DUP1
0xAB	PUSH(SLOAD(POP(0x0)))
0xB3	PUSH(0x2 ** 0xA0 - 0x1)
0xB4	SWAP1
0xB5	DUP2
0xB6	PUSH(POP(@0xB3) & POP(@0xAB))
0xB7	SWAP2
0xB8	SWAP1
0xBB	PUSH(BALANCE(ADDRESS() & POP(@0xB3)))
0xBC	PUSH(0x60)
0xBE	DUP3
0xBF	DUP2
0xC0	DUP2
0xC1	DUP2
0xC2	DUP6
0xC3	DUP9
0xC4	DUP4
0xC5	PUSH(CALL(POP(0x0), POP(@0xB6), POP(@0xBB), POP(0x60), POP(0x0), POP(0x60), POP(0x0)))
0xC6	POP()
0xC7	POP()
0xC8	POP()
0xC9	POP()
0xCA	POP()
0xCB	JUMP(POP(:label7))

:label3
# Stack: [@0x13]
0xCD	PUSH(:label7)
0xD2	PUSH(CALLDATALOAD(0x4))
0xD5	PUSH(SLOAD(0x0))
0xD6	PUSH(CALLER())
0xDE	PUSH(0x2 ** 0xA0 - 0x1)
0xDF	SWAP1
0xE0	DUP2
0xE1	PUSH(POP(@0xDE) & POP(@0xD6))
0xE2	SWAP1
0xE9	JUMPI(:label4, !(POP(@0xD5) & POP(@0xDE) == POP(@0xE1)))

# Stack: [@0xD2 :label7 @0x13]
0xEA	PUSH(0x1)
0xEC	DUP1
0x105	DUP2
0x106	PUSH(POP(@0xD2) | ~0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & SLOAD(POP(0x1)))
0x107	SWAP1
0x108	SSTORE(POP(0x1), POP(@0x106))

:label4
# Stack: [@0xD2 :label7 @0x13]
0x10A	POP()
0x10B	JUMP(POP(:label7))

:label5
# Stack: [@0x13]
0x10D	PUSH(:label8)
0x11B	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x1))
0x11C	DUP2
0x11D	JUMP(POP(:label8))

:label6
# Stack: [@0x13]
0x11F	PUSH(:label8)
0x12D	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x0))
0x12E	DUP2
0x12F	JUMP(POP(:label8))

:label7
# Stack: []
0x131	STOP()

:label8
# Stack: [[@0x12D | @0x11B] [:label8 | :label8] @0x13]
0x13B	PUSH(0x2 ** 0xA0 - 0x1 & POP())
0x13C	PUSH(0x60)
0x13E	SWAP1
0x13F	DUP2
0x140	MSTORE(POP(0x60), POP(@0x13B))
0x141	PUSH(0x20)
0x143	SWAP1
0x144	RETURN(POP(0x60), POP(0x20))


