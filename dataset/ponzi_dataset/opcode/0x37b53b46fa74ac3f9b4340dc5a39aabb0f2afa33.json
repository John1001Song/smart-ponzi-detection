# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0xA2F9EAC6 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x62	PUSH(:label11)
0x65	PUSH(:label12)
0x6B	JUMP(:label9)

:label1
# Stack: [@0x13]
0x6D	PUSH(:label11)
0x72	PUSH(CALLDATALOAD(0x4))
0x75	PUSH(SLOAD(0x4))
0x7D	PUSH(0x2 ** 0xA0 - 0x1)
0x7E	SWAP1
0x7F	DUP2
0x80	PUSH(POP(@0x7D) & POP(@0x75))
0x81	PUSH(CALLER())
0x82	SWAP1
0x83	SWAP1
0x84	SWAP2
0x8B	JUMPI(:label2, !(POP(@0x81) & POP(@0x7D) == POP(@0x80)))

# Stack: [@0x72 :label11 @0x13]
0x8C	PUSH(0x4)
0x8E	DUP1
0x9A	DUP2
0x9B	PUSH(POP(@0x72) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0x9C	SWAP1
0x9D	SSTORE(POP(0x4), POP(@0x9B))

:label2
# Stack: [@0x72 :label11 @0x13]
0x9F	POP()
0xA0	JUMP(POP(:label11))

:label3
# Stack: [@0x13]
0xA2	PUSH(:label13)
0xB0	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0xB1	DUP2
0xB2	JUMP(POP(:label13))

:label4
# Stack: [@0x13]
0xB4	PUSH(:label14)
0xB9	PUSH(SLOAD(0x2))
0xBA	DUP2
0xBB	JUMP(POP(:label14))

:label5
# Stack: [@0x13]
0xBD	PUSH(:label15)
0xC2	PUSH(CALLDATALOAD(0x4))
0xC3	PUSH(0x0)
0xC5	DUP1
0xC6	PUSH(SLOAD(POP(0x0)))
0xC7	DUP2
0xC8	SWAP1
0xC9	DUP2
0xCF	JUMPI(0x2, !(POP(@0xC2) < POP(@0xC6)))

# Stack: [@0xC2 0x0 @0xC2 :label15 @0x13]
0xD0	POP()
0xD1	DUP1
0xD2	MSTORE(POP(0x0), POP(0x0))
0xD5	PUSH(0x2 * POP(@0xC2))
0xF7	DUP1
0xF9	PUSH(SLOAD(POP(@0xD5) + 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563))
0xFA	PUSH(0x0)
0xFC	DUP1
0x103	DUP1
0x104	CODECOPY(POP(0x0), 0x415, 0x20)
0x105	DUP1
0x106	PUSH(MLOAD(POP(0x0)))
0x107	SWAP1
0x108	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x109	SWAP1
0x10A	SWAP1
0x10B	SWAP2
0x10D	PUSH(SLOAD(POP(@0x106) + POP(@0xD5)))
0x115	PUSH(0x2 ** 0xA0 - 0x1)
0x116	SWAP2
0x117	SWAP1
0x118	SWAP2
0x119	PUSH(POP(@0x115) & POP(@0xF9))
0x11A	SWAP1
0x11B	DUP3
0x11C	JUMP(POP(:label15))

:label6
# Stack: [@0x13]
0x11E	PUSH(:label14)
0x123	PUSH(SLOAD(0x1))
0x124	DUP2
0x125	JUMP(POP(:label14))

:label7
# Stack: [@0x13]
0x127	PUSH(:label14)
0x12C	PUSH(SLOAD(0x3))
0x12D	DUP2
0x12E	JUMP(POP(:label14))

:label8
# Stack: [@0x13]
0x130	PUSH(:label11)

:label9
# Stack: [[:label12 | :label11] [:label11 | @0x13]]
0x134	PUSH(0x0)
0x136	PUSH(0x0)
0x138	PUSH(0x0)
0x142	JUMPI(:label16, !(CALLVALUE() < 0x0))

# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x145	PUSH(MLOAD(0x40))
0x14F	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x150	SWAP1
0x151	DUP3
0x152	SWAP1
0x153	PUSH(CALLVALUE())
0x154	SWAP1
0x155	DUP3
0x156	DUP2
0x157	DUP2
0x158	DUP2
0x159	DUP6
0x15A	DUP9
0x15B	DUP4
0x15C	PUSH(CALL(POP(0x0), POP(@0x14F), POP(@0x153), POP(@0x145), POP(0x0), POP(@0x145), POP(0x0)))
0x15D	POP()
0x15E	POP()
0x15F	POP()
0x160	POP()
0x161	POP()

:label10
# Stack: [[0x0 | @0x3AD] [@0x217 | 0x0] [0x0 | 0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x163	POP()
0x164	POP()
0x165	POP()
0x166	JUMP(POP())

:label11
# Stack: []
0x168	STOP()

:label12
# Stack: [:label11]
0x16A	JUMP(POP(:label11))

:label13
# Stack: [@0xB0 :label13 @0x13]
0x16C	PUSH(0x40)
0x16E	DUP1
0x16F	PUSH(MLOAD(POP(0x40)))
0x177	PUSH(0x2 ** 0xA0 - 0x1)
0x178	SWAP3
0x179	SWAP1
0x17A	SWAP3
0x17C	DUP2
0x17D	MSTORE(POP(@0x16F), POP(@0x177) & POP(@0xB0))
0x17E	PUSH(MLOAD(POP(0x40)))
0x17F	SWAP1
0x180	DUP2
0x181	SWAP1
0x185	PUSH(0x20 + POP(@0x16F) - POP(@0x17E))
0x186	SWAP1
0x187	RETURN(POP(@0x17E), POP(@0x185))

:label14
# Stack: [[@0x12C | @0x123 | @0xB9] [:label14 | :label14 | :label14] @0x13]
0x189	PUSH(0x40)
0x18B	DUP1
0x18C	PUSH(MLOAD(POP(0x40)))
0x18D	SWAP2
0x18E	DUP3
0x18F	MSTORE(POP(@0x18C), POP())
0x190	PUSH(MLOAD(POP(0x40)))
0x191	SWAP1
0x192	DUP2
0x193	SWAP1
0x197	PUSH(0x20 + POP(@0x18C) - POP(@0x190))
0x198	SWAP1
0x199	RETURN(POP(@0x190), POP(@0x197))

:label15
# Stack: [@0x10D @0x119 :label15 @0x13]
0x19D	PUSH(MLOAD(0x40))
0x19E	DUP1
0x19F	DUP4
0x1A9	DUP1
0x1AA	MSTORE(POP(@0x19D), 0x2 ** 0xA0 - 0x1 & POP(@0x119))
0x1AD	PUSH(0x20 + POP(@0x19D))
0x1AE	DUP3
0x1AF	DUP2
0x1B0	MSTORE(POP(@0x1AD), POP(@0x10D))
0x1B3	PUSH(0x20 + POP(@0x1AD))
0x1B4	SWAP3
0x1B5	POP()
0x1B6	POP()
0x1B7	POP()
0x1BA	PUSH(MLOAD(0x40))
0x1BB	DUP1
0x1BC	SWAP2
0x1BD	PUSH(POP(@0x1B3) - POP(@0x1BA))
0x1BE	SWAP1
0x1BF	RETURN(POP(@0x1BA), POP(@0x1BD))

:label16
# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x1D1	JUMPI(:label17, !(CALLVALUE() > 0x3627E8F712373C0000))

# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x1D4	PUSH(MLOAD(0x40))
0x1DE	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x1DF	SWAP1
0x1E0	PUSH(0x0)
0x1E2	SWAP1
0x1EF	PUSH(CALLVALUE() + ~0x3627E8F712373BFFFF)
0x1F0	SWAP1
0x1F1	DUP3
0x1F2	DUP2
0x1F3	DUP2
0x1F4	DUP2
0x1F5	DUP6
0x1F6	DUP9
0x1F7	DUP4
0x1F8	PUSH(CALL(POP(0x0), POP(@0x1DE), POP(@0x1EF), POP(@0x1D4), POP(0x0), POP(@0x1D4), POP(0x0)))
0x1F9	POP()
0x1FA	PUSH(0x3627E8F712373C0000)
0x204	SWAP7
0x205	POP()
0x206	PUSH(:label18)
0x209	SWAP4
0x20A	POP()
0x20B	POP()
0x20C	POP()
0x20D	POP()
0x20E	JUMP(POP(:label18))

:label17
# Stack: [0x0 0x0 0x0 [:label12 | :label11] [:label11 | @0x13]]
0x210	PUSH(CALLVALUE())
0x211	SWAP3
0x212	POP()

:label18
# Stack: [0x0 0x0 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x214	PUSH(0x0)
0x216	DUP1
0x217	PUSH(SLOAD(POP(0x0)))
0x21A	DUP1
0x21B	PUSH(POP(@0x217) + 0x1)
0x21C	DUP1
0x21D	DUP4
0x21E	SSTORE(POP(0x0), POP(@0x21B))
0x21F	SWAP1
0x220	SWAP4
0x221	POP()
0x222	SWAP1
0x223	DUP2
0x224	DUP5
0x225	DUP1
0x226	PUSH(!POP(@0x217))
0x227	DUP2
0x228	SWAP1
0x22D	JUMPI(:label20, POP(@0x226) > POP(@0x21B))

# Stack: [@0x217 @0x21B 0x0 @0x21B 0x0 @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x230	PUSH(0x2 * POP(@0x217))
0x231	DUP1
0x235	DUP2
0x238	MSTORE(0x0, POP(0x0))
0x23D	PUSH(SHA3(0x0, 0x20))
0x23E	SWAP1
0x23F	DUP2
0x240	PUSH(POP(@0x23D) + POP(@0x230))
0x241	SWAP1
0x242	PUSH(POP(@0x23D) + 0x2 * POP(@0x21B))
0x243	PUSH(:label20)
0x246	SWAP2
0x247	SWAP1

:label19
# Stack: [[@0x242 | @0x266] @0x240 :label20 @0x21B 0x0 @0x21B 0x0 @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x249	DUP1
0x24A	DUP3
0x250	JUMPI(:label21, !(POP(@0x240) > POP()))

# Stack: [[@0x242 | @0x266] @0x240 :label20 @0x21B 0x0 @0x21B 0x0 @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [@0x13 | :label11]]
0x251	DUP1
0x25D	DUP1
0x25E	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x25F	PUSH(0x0)
0x261	PUSH(0x1)
0x263	SWAP1
0x264	SWAP1
0x265	SWAP2
0x266	PUSH(POP(0x1) + POP())
0x267	SWAP1
0x268	DUP2
0x269	SSTORE(POP(@0x266), POP(0x0))
0x26D	JUMP(:label19)

:label20
# Stack: [[@0x240 | @0x217] @0x21B 0x0 @0x21B 0x0 @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x26F	POP()
0x270	POP()
0x271	POP()
0x272	POP()
0x273	PUSH(CALLER())
0x274	PUSH(0x0)
0x278	POP(0x0)
0x279	DUP4
0x27A	DUP2
0x27C	DUP1
0x282	JUMPI(0x2, !(POP(@0x217) < SLOAD(POP(0x0))))

# Stack: [@0x217 0x0 @0x273 0x0 @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x283	DUP2
0x284	DUP1
0x285	MSTORE(POP(0x0), POP(0x0))
0x2AA	PUSH(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + 0x2 * POP(@0x217))
0x2AB	DUP1
0x2B6	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2AA)))
0x2B7	SWAP1
0x2B8	SWAP3
0x2B9	PUSH(POP(@0x273) | POP(@0x2B6))
0x2BA	SWAP1
0x2BB	SWAP2
0x2BC	SSTORE(POP(@0x2AA), POP(@0x2B9))
0x2BD	DUP1
0x2BE	PUSH(SLOAD(POP(0x0)))
0x2BF	DUP4
0x2C0	SWAP1
0x2C1	SWAP1
0x2C2	DUP5
0x2C3	SWAP1
0x2C4	DUP2
0x2CA	JUMPI(0x2, !(POP(@0x217) < POP(@0x2BE)))

# Stack: [@0x217 0x0 [0x3627E8F712373C0000 | @0x210] 0x0 @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x2CE	PUSH(0x0)
0x2D0	DUP1
0x2D7	DUP1
0x2D8	CODECOPY(POP(0x0), 0x415, 0x20)
0x2D9	DUP1
0x2DA	PUSH(MLOAD(POP(0x0)))
0x2DB	SWAP1
0x2DC	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2DD	PUSH(POP(@0x2DA) + 0x2 * POP(@0x217))
0x2DE	SWAP2
0x2DF	SWAP1
0x2E0	SWAP2
0x2E1	SSTORE(POP(@0x2DD), POP())
0x2E2	DUP3
0x2E7	JUMPI(:label22, POP(@0x217) == POP(0x0))

# Stack: [0x0 @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x2E8	PUSH(0x2)
0x2EA	DUP1
0x2EE	DUP4
0x2F0	PUSH(POP() / 0xA + SLOAD(POP(0x2)))
0x2F1	SWAP1
0x2F2	DUP2
0x2F3	SWAP1
0x2F4	SSTORE(POP(0x2), POP(@0x2F0))
0x2F7	PUSH(SLOAD(0x4))
0x2FA	PUSH(MLOAD(0x40))
0x302	PUSH(0x2 ** 0xA0 - 0x1)
0x303	SWAP1
0x304	SWAP1
0x305	SWAP2
0x306	PUSH(POP(@0x302) & POP(@0x2F7))
0x307	SWAP2
0x308	PUSH(0x0)
0x30A	SWAP2
0x30B	DUP3
0x30C	DUP2
0x30D	DUP2
0x30E	DUP2
0x30F	DUP6
0x310	DUP9
0x311	DUP4
0x312	PUSH(CALL(POP(0x0), POP(@0x306), POP(@0x2F0), POP(@0x2FA), POP(0x0), POP(@0x2FA), POP(0x0)))
0x313	POP()
0x314	POP()
0x315	POP()
0x318	SSTORE(0x2, POP(0x0))
0x319	POP()
0x31A	PUSH(0x3)
0x31C	DUP1
0x320	DUP4
0x322	DUP4
0x324	PUSH(POP() - POP() / 0xA + SLOAD(POP(0x3)))
0x325	SWAP1
0x326	SSTORE(POP(0x3), POP(@0x324))
0x32A	JUMP(:label23)

:label21
# Stack: [[@0x266 | @0x242] @0x240 :label20 @0x21B 0x0 @0x21B 0x0 @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x32C	POP()
0x32D	SWAP1
0x32E	JUMP(POP(:label20))

:label22
# Stack: [0x0 @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x330	PUSH(0x3)
0x332	DUP1
0x334	DUP4
0x335	PUSH(POP() + SLOAD(POP(0x3)))
0x336	SWAP1
0x337	SSTORE(POP(0x3), POP(@0x335))

:label23
# Stack: [[0x0 | @0x3AD] @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [@0x13 | :label11]]
0x33C	PUSH(SLOAD(0x1))
0x33D	PUSH(0x0)
0x33F	DUP1
0x340	PUSH(SLOAD(POP(0x0)))
0x341	PUSH(0x64)
0x343	SWAP2
0x344	SWAP1
0x345	DUP2
0x34B	JUMPI(0x2, !(POP(@0x33C) < POP(@0x340)))

# Stack: [@0x33C 0x0 0x64 [@0x3AD | 0x0] @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x34C	SWAP1
0x34D	DUP1
0x34E	MSTORE(POP(0x0), POP(0x0))
0x351	PUSH(SLOAD(0x3))
0x352	PUSH(0x2)
0x354	SWAP1
0x355	SWAP1
0x356	SWAP2
0x358	PUSH(0x0)
0x35A	DUP1
0x361	DUP1
0x362	CODECOPY(POP(0x0), 0x415, 0x20)
0x363	DUP1
0x364	PUSH(MLOAD(POP(0x0)))
0x365	SWAP1
0x366	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x368	PUSH(SLOAD(POP(@0x364) + POP(0x2) * POP(@0x33C)))
0x369	SWAP2
0x36A	SWAP1
0x36B	SWAP2
0x370	PUSH(0x1F4 * POP(@0x368) / POP(0x64))
0x371	SWAP1
0x377	JUMPI(:label10, !(POP(@0x351) > POP(@0x370)))

# Stack: [[0x0 | @0x3AD] @0x217 [@0x210 | 0x3627E8F712373C0000] [:label12 | :label11] [:label11 | @0x13]]
0x37A	PUSH(SLOAD(0x1))
0x37B	PUSH(0x0)
0x37D	DUP1
0x37E	PUSH(SLOAD(POP(0x0)))
0x37F	PUSH(0x64)
0x381	SWAP2
0x382	SWAP1
0x383	DUP2
0x389	JUMPI(0x2, !(POP(@0x37A) < POP(@0x37E)))

# Stack: [@0x37A 0x0 0x64 [0x0 | @0x3AD] @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x38C	PUSH(SLOAD(0x1))
0x38D	DUP3
0x38E	PUSH(SLOAD(POP(0x0)))
0x38F	PUSH(0x2)
0x391	SWAP2
0x392	SWAP1
0x393	SWAP3
0x395	PUSH(0x0)
0x397	DUP1
0x39E	DUP1
0x39F	CODECOPY(POP(0x0), 0x415, 0x20)
0x3A0	DUP1
0x3A1	PUSH(MLOAD(POP(0x0)))
0x3A2	SWAP1
0x3A3	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3A5	PUSH(SLOAD(POP(@0x3A1) + POP(0x2) * POP(@0x37A)))
0x3A6	SWAP4
0x3A7	SWAP1
0x3A8	SWAP4
0x3AD	PUSH(0x1F4 * POP(@0x3A5) / POP(0x64))
0x3AE	SWAP4
0x3AF	POP()
0x3B0	SWAP1
0x3B1	SWAP2
0x3B2	SWAP1
0x3B3	DUP2
0x3B9	JUMPI(0x2, !(POP(@0x38C) < POP(@0x38E)))

# Stack: [@0x38C 0x0 @0x3AD @0x217 [0x3627E8F712373C0000 | @0x210] [:label12 | :label11] [:label11 | @0x13]]
0x3BC	PUSH(MLOAD(0x40))
0x3BD	PUSH(0x2)
0x3BF	SWAP2
0x3C0	SWAP1
0x3C1	SWAP2
0x3EE	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 + POP(0x2) * POP(@0x38C)))
0x3EF	SWAP2
0x3F0	SWAP1
0x3F1	DUP4
0x3F2	SWAP1
0x3F3	DUP3
0x3F4	DUP2
0x3F5	DUP2
0x3F6	DUP2
0x3F7	DUP6
0x3F8	DUP9
0x3F9	DUP4
0x3FA	PUSH(CALL(POP(0x0), POP(@0x3EE), POP(@0x3AD), POP(@0x3BC), POP(0x0), POP(@0x3BC), POP(0x0)))
0x3FB	POP()
0x3FC	POP()
0x3FD	PUSH(0x3)
0x3FF	DUP1
0x400	PUSH(SLOAD(POP(0x3)))
0x401	SWAP2
0x402	SWAP1
0x403	SWAP2
0x404	PUSH(POP(@0x400) - POP(@0x3AD))
0x405	SWAP1
0x406	SSTORE(POP(0x3), POP(@0x404))
0x407	POP()
0x408	POP()
0x409	PUSH(0x1)
0x40B	DUP1
0x40D	DUP1
0x40E	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x40F	SWAP1
0x410	SSTORE(POP(0x1), POP(@0x40E))
0x414	JUMP(:label23)


