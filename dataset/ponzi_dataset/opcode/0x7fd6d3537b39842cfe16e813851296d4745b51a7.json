# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label1, POP(@0x13) == 0x13AF4035)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label3, 0x35C1D349 == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label4, 0x8DA5CB5B == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label5, 0x9003ADFE == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label6, 0xA60F3588 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label7, 0xB69EF8A8 == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label8, 0xC8796572 == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label10, 0xE97DCB62 == POP(@0x13))

:label0
# Stack: []
0x6D	PUSH(:label13)
0x70	PUSH(:label9)
0x76	JUMP(:label11)

:label1
# Stack: [@0x13]
0x78	PUSH(:label13)
0x7D	PUSH(CALLDATALOAD(0x4))
0x80	PUSH(SLOAD(0x4))
0x88	PUSH(0x2 ** 0xA0 - 0x1)
0x89	SWAP1
0x8A	DUP2
0x8B	PUSH(POP(@0x88) & POP(@0x80))
0x8C	PUSH(CALLER())
0x8D	SWAP1
0x8E	SWAP1
0x8F	SWAP2
0x96	JUMPI(:label2, !(POP(@0x8C) & POP(@0x88) == POP(@0x8B)))

# Stack: [@0x7D :label13 @0x13]
0x97	PUSH(0x4)
0x99	DUP1
0xA5	DUP2
0xA6	PUSH(POP(@0x7D) | ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(0x4)))
0xA7	SWAP1
0xA8	SSTORE(POP(0x4), POP(@0xA6))

:label2
# Stack: [@0x7D :label13 @0x13]
0xAA	POP()
0xAB	JUMP(POP(:label13))

:label3
# Stack: [@0x13]
0xAD	PUSH(:label14)
0xB2	PUSH(CALLDATALOAD(0x4))
0xB3	PUSH(0x0)
0xB5	DUP1
0xB6	PUSH(SLOAD(POP(0x0)))
0xB7	DUP2
0xB8	SWAP1
0xB9	DUP2
0xBF	JUMPI(0x2, !(POP(@0xB2) < POP(@0xB6)))

# Stack: [@0xB2 0x0 @0xB2 :label14 @0x13]
0xC0	POP()
0xC1	DUP1
0xC2	MSTORE(POP(0x0), POP(0x0))
0xC5	PUSH(0x2 * POP(@0xB2))
0xC6	PUSH(0x0)
0xC8	DUP1
0xCF	DUP1
0xD0	CODECOPY(POP(0x0), 0x45B, 0x20)
0xD1	DUP1
0xD2	PUSH(MLOAD(POP(0x0)))
0xD3	SWAP1
0xD4	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xD5	DUP2
0xD7	PUSH(SLOAD(POP(@0xC5) + POP(@0xD2)))
0xD8	PUSH(0x0)
0xDA	DUP1
0xE1	DUP1
0xE2	CODECOPY(POP(0x0), 0x43B, 0x20)
0xE3	DUP1
0xE4	PUSH(MLOAD(POP(0x0)))
0xE5	SWAP1
0xE6	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0xE7	SWAP2
0xE8	SWAP1
0xE9	SWAP2
0xF4	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0xE4) + POP(@0xC5)))
0xF5	SWAP1
0xF6	DUP3
0xF7	JUMP(POP(:label14))

:label4
# Stack: [@0x13]
0xF9	PUSH(:label15)
0x107	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x4))
0x108	DUP2
0x109	JUMP(POP(:label15))

:label5
# Stack: [@0x13]
0x10B	PUSH(:label16)
0x110	PUSH(SLOAD(0x2))
0x111	DUP2
0x112	JUMP(POP(:label16))

:label6
# Stack: [@0x13]
0x114	PUSH(:label16)
0x119	PUSH(SLOAD(0x1))
0x11A	DUP2
0x11B	JUMP(POP(:label16))

:label7
# Stack: [@0x13]
0x11D	PUSH(:label16)
0x122	PUSH(SLOAD(0x3))
0x123	DUP2
0x124	JUMP(POP(:label16))

:label8
# Stack: [@0x13]
0x126	PUSH(:label13)
0x12B	PUSH(SLOAD(0x4))
0x133	PUSH(0x2 ** 0xA0 - 0x1)
0x134	SWAP1
0x135	DUP2
0x136	PUSH(POP(@0x133) & POP(@0x12B))
0x137	PUSH(CALLER())
0x138	SWAP1
0x139	SWAP1
0x13A	SWAP2
0x141	JUMPI(:label9, !(POP(@0x137) & POP(@0x133) == POP(@0x136)))

# Stack: [:label13 @0x13]
0x14C	JUMPI(:label25, !(0x0 == SLOAD(0x2)))

:label9
# Stack: [[:label13 | :label13]]
0x14E	JUMP(POP())

:label10
# Stack: [@0x13]
0x150	PUSH(:label13)

:label11
# Stack: [[:label9 | :label13] [:label13 | @0x13]]
0x154	PUSH(0x0)
0x156	PUSH(0x0)
0x158	PUSH(0x0)
0x169	JUMPI(:label17, !(CALLVALUE() < 0x16345785D8A0000))

# Stack: [0x0 0x0 0x0 [:label9 | :label13] [@0x13 | :label13]]
0x16C	PUSH(MLOAD(0x40))
0x176	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x177	SWAP1
0x178	DUP3
0x179	SWAP1
0x17A	PUSH(CALLVALUE())
0x17B	SWAP1
0x17C	DUP3
0x17D	DUP2
0x17E	DUP2
0x17F	DUP2
0x180	DUP6
0x181	DUP9
0x182	DUP4
0x183	PUSH(CALL(POP(0x0), POP(@0x176), POP(@0x17A), POP(@0x16C), POP(0x0), POP(@0x16C), POP(0x0)))
0x184	POP()
0x185	POP()
0x186	POP()
0x187	POP()
0x188	POP()

:label12
# Stack: [[0x0 | @0x391] [0x0 | @0x23C] [0x0 | 0x2B5E3AF16B1880000 | @0x235] [:label9 | :label13] [:label13 | @0x13]]
0x18A	POP()
0x18B	POP()
0x18C	POP()
0x18D	JUMP(POP())

:label13
# Stack: []
0x18F	STOP()

:label14
# Stack: [@0xD7 @0xF4 :label14 @0x13]
0x193	PUSH(MLOAD(0x40))
0x194	DUP1
0x195	DUP4
0x19F	DUP1
0x1A0	MSTORE(POP(@0x193), 0x2 ** 0xA0 - 0x1 & POP(@0xF4))
0x1A3	PUSH(0x20 + POP(@0x193))
0x1A4	DUP3
0x1A5	DUP2
0x1A6	MSTORE(POP(@0x1A3), POP(@0xD7))
0x1A9	PUSH(0x20 + POP(@0x1A3))
0x1AA	SWAP3
0x1AB	POP()
0x1AC	POP()
0x1AD	POP()
0x1B0	PUSH(MLOAD(0x40))
0x1B1	DUP1
0x1B2	SWAP2
0x1B3	PUSH(POP(@0x1A9) - POP(@0x1B0))
0x1B4	SWAP1
0x1B5	RETURN(POP(@0x1B0), POP(@0x1B3))

:label15
# Stack: [@0x107 :label15 @0x13]
0x1B7	PUSH(0x40)
0x1B9	DUP1
0x1BA	PUSH(MLOAD(POP(0x40)))
0x1C2	PUSH(0x2 ** 0xA0 - 0x1)
0x1C3	SWAP3
0x1C4	SWAP1
0x1C5	SWAP3
0x1C7	DUP2
0x1C8	MSTORE(POP(@0x1BA), POP(@0x1C2) & POP(@0x107))
0x1C9	PUSH(MLOAD(POP(0x40)))
0x1CA	SWAP1
0x1CB	DUP2
0x1CC	SWAP1
0x1D0	PUSH(0x20 + POP(@0x1BA) - POP(@0x1C9))
0x1D1	SWAP1
0x1D2	RETURN(POP(@0x1C9), POP(@0x1D0))

:label16
# Stack: [[@0x122 | @0x119 | @0x110] [:label16 | :label16 | :label16] @0x13]
0x1D4	PUSH(0x40)
0x1D6	DUP1
0x1D7	PUSH(MLOAD(POP(0x40)))
0x1D8	SWAP2
0x1D9	DUP3
0x1DA	MSTORE(POP(@0x1D7), POP())
0x1DB	PUSH(MLOAD(POP(0x40)))
0x1DC	SWAP1
0x1DD	DUP2
0x1DE	SWAP1
0x1E2	PUSH(0x20 + POP(@0x1D7) - POP(@0x1DB))
0x1E3	SWAP1
0x1E4	RETURN(POP(@0x1DB), POP(@0x1E2))

:label17
# Stack: [0x0 0x0 0x0 [:label9 | :label13] [:label13 | @0x13]]
0x1F6	JUMPI(:label18, !(CALLVALUE() > 0x2B5E3AF16B1880000))

# Stack: [0x0 0x0 0x0 [:label9 | :label13] [:label13 | @0x13]]
0x1F9	PUSH(MLOAD(0x40))
0x203	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x204	SWAP1
0x205	PUSH(0x0)
0x207	SWAP1
0x214	PUSH(CALLVALUE() + ~0x2B5E3AF16B187FFFF)
0x215	SWAP1
0x216	DUP3
0x217	DUP2
0x218	DUP2
0x219	DUP2
0x21A	DUP6
0x21B	DUP9
0x21C	DUP4
0x21D	PUSH(CALL(POP(0x0), POP(@0x203), POP(@0x214), POP(@0x1F9), POP(0x0), POP(@0x1F9), POP(0x0)))
0x21E	POP()
0x21F	PUSH(0x2B5E3AF16B1880000)
0x229	SWAP7
0x22A	POP()
0x22B	PUSH(:label19)
0x22E	SWAP4
0x22F	POP()
0x230	POP()
0x231	POP()
0x232	POP()
0x233	JUMP(POP(:label19))

:label18
# Stack: [0x0 0x0 0x0 [:label13 | :label9] [:label13 | @0x13]]
0x235	PUSH(CALLVALUE())
0x236	SWAP3
0x237	POP()

:label19
# Stack: [0x0 0x0 [@0x235 | 0x2B5E3AF16B1880000] [:label9 | :label13] [:label13 | @0x13]]
0x239	PUSH(0x0)
0x23B	DUP1
0x23C	PUSH(SLOAD(POP(0x0)))
0x23F	DUP1
0x240	PUSH(POP(@0x23C) + 0x1)
0x241	DUP1
0x242	DUP4
0x243	SSTORE(POP(0x0), POP(@0x240))
0x244	SWAP1
0x245	SWAP4
0x246	POP()
0x247	SWAP1
0x248	DUP2
0x249	DUP5
0x24A	DUP1
0x24B	PUSH(!POP(@0x23C))
0x24C	DUP2
0x24D	SWAP1
0x252	JUMPI(:label21, POP(@0x24B) > POP(@0x240))

# Stack: [@0x23C @0x240 0x0 @0x240 0x0 @0x23C [0x2B5E3AF16B1880000 | @0x235] [:label9 | :label13] [:label13 | @0x13]]
0x253	DUP3
0x254	DUP1
0x255	MSTORE(POP(0x0), POP(0x0))
0x256	PUSH(:label21)
0x259	SWAP1
0x25A	PUSH(0x2)
0x25C	SWAP1
0x25D	DUP2
0x25E	PUSH(POP(0x2) * POP(@0x23C))
0x25F	PUSH(0x0)
0x261	DUP1
0x268	DUP1
0x269	CODECOPY(POP(0x0), 0x43B, 0x20)
0x26A	DUP1
0x26B	PUSH(MLOAD(POP(0x0)))
0x26C	SWAP1
0x26D	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x26E	SWAP1
0x26F	DUP2
0x270	PUSH(POP(@0x26B) + POP(@0x25E))
0x271	SWAP2
0x272	DUP5
0x274	PUSH(POP(@0x240) * POP(0x2) + POP(@0x26B))

:label20
# Stack: [[@0x274 | @0x293] @0x270 :label21 @0x240 0x0 @0x240 0x0 @0x23C [0x2B5E3AF16B1880000 | @0x235] [:label9 | :label13] [:label13 | @0x13]]
0x276	DUP1
0x277	DUP3
0x27D	JUMPI(:label22, !(POP(@0x270) > POP()))

# Stack: [[@0x274 | @0x293] @0x270 :label21 @0x240 0x0 @0x240 0x0 @0x23C [0x2B5E3AF16B1880000 | @0x235] [:label9 | :label13] [@0x13 | :label13]]
0x27E	DUP1
0x28A	DUP1
0x28B	SSTORE(POP(), ~(0x2 ** 0xA0 - 0x1) & SLOAD(POP()))
0x28C	PUSH(0x0)
0x28E	PUSH(0x1)
0x290	SWAP1
0x291	SWAP1
0x292	SWAP2
0x293	PUSH(POP(0x1) + POP())
0x294	SWAP1
0x295	DUP2
0x296	SSTORE(POP(@0x293), POP(0x0))
0x29A	JUMP(:label20)

:label21
# Stack: [[@0x23C | @0x270] @0x240 0x0 @0x240 0x0 @0x23C [@0x235 | 0x2B5E3AF16B1880000] [:label9 | :label13] [:label13 | @0x13]]
0x29C	POP()
0x29D	POP()
0x29E	POP()
0x29F	POP()
0x2A0	PUSH(CALLER())
0x2A1	PUSH(0x0)
0x2A5	POP(0x0)
0x2A6	DUP4
0x2A7	DUP2
0x2A9	DUP1
0x2AF	JUMPI(0x2, !(POP(@0x23C) < SLOAD(POP(0x0))))

# Stack: [@0x23C 0x0 @0x2A0 0x0 @0x23C [@0x235 | 0x2B5E3AF16B1880000] [:label9 | :label13] [:label13 | @0x13]]
0x2B0	DUP2
0x2B1	DUP1
0x2B2	MSTORE(POP(0x0), POP(0x0))
0x2B6	PUSH(0x0)
0x2B8	DUP1
0x2BF	DUP1
0x2C0	CODECOPY(POP(0x0), 0x43B, 0x20)
0x2C1	DUP1
0x2C2	PUSH(MLOAD(POP(0x0)))
0x2C3	SWAP1
0x2C4	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2C5	PUSH(POP(@0x2C2) + 0x2 * POP(@0x23C))
0x2C6	DUP1
0x2D1	PUSH(~(0x2 ** 0xA0 - 0x1) & SLOAD(POP(@0x2C5)))
0x2D2	SWAP1
0x2D3	SWAP3
0x2D4	PUSH(POP(@0x2A0) | POP(@0x2D1))
0x2D5	SWAP1
0x2D6	SWAP2
0x2D7	SSTORE(POP(@0x2C5), POP(@0x2D4))
0x2D8	DUP1
0x2D9	PUSH(SLOAD(POP(0x0)))
0x2DA	DUP4
0x2DB	SWAP1
0x2DC	SWAP1
0x2DD	DUP5
0x2DE	SWAP1
0x2DF	DUP2
0x2E5	JUMPI(0x2, !(POP(@0x23C) < POP(@0x2D9)))

# Stack: [@0x23C 0x0 [@0x235 | 0x2B5E3AF16B1880000] 0x0 @0x23C [0x2B5E3AF16B1880000 | @0x235] [:label9 | :label13] [:label13 | @0x13]]
0x2E9	PUSH(0x0)
0x2EB	DUP1
0x2F2	DUP1
0x2F3	CODECOPY(POP(0x0), 0x45B, 0x20)
0x2F4	DUP1
0x2F5	PUSH(MLOAD(POP(0x0)))
0x2F6	SWAP1
0x2F7	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x2F8	PUSH(POP(@0x2F5) + 0x2 * POP(@0x23C))
0x2F9	SWAP2
0x2FA	SWAP1
0x2FB	SWAP2
0x2FC	SSTORE(POP(@0x2F8), POP())
0x2FD	DUP3
0x302	JUMPI(:label23, POP(@0x23C) == POP(0x0))

# Stack: [0x0 @0x23C [0x2B5E3AF16B1880000 | @0x235] [:label9 | :label13] [:label13 | @0x13]]
0x303	PUSH(0x2)
0x305	DUP1
0x309	DUP4
0x30B	PUSH(POP() / 0x32 + SLOAD(POP(0x2)))
0x30C	SWAP1
0x30D	SSTORE(POP(0x2), POP(@0x30B))
0x30E	PUSH(0x3)
0x310	DUP1
0x312	DUP4
0x313	PUSH(POP() + SLOAD(POP(0x3)))
0x314	SWAP1
0x315	SSTORE(POP(0x3), POP(@0x313))
0x319	JUMP(:label24)

:label22
# Stack: [[@0x293 | @0x274] @0x270 :label21 @0x240 0x0 @0x240 0x0 @0x23C [@0x235 | 0x2B5E3AF16B1880000] [:label9 | :label13] [:label13 | @0x13]]
0x31B	POP()
0x31C	SWAP1
0x31D	JUMP(POP(:label21))

:label23
# Stack: [0x0 @0x23C [0x2B5E3AF16B1880000 | @0x235] [:label9 | :label13] [:label13 | @0x13]]
0x31F	PUSH(0x2)
0x321	DUP1
0x323	DUP4
0x324	PUSH(POP() + SLOAD(POP(0x2)))
0x325	SWAP1
0x326	SSTORE(POP(0x2), POP(@0x324))

:label24
# Stack: [[0x0 | @0x391] @0x23C [0x2B5E3AF16B1880000 | @0x235] [:label9 | :label13] [@0x13 | :label13]]
0x329	PUSH(0x0)
0x32B	DUP1
0x32C	PUSH(SLOAD(POP(0x0)))
0x32F	PUSH(SLOAD(0x1))
0x330	SWAP1
0x331	DUP2
0x337	JUMPI(0x2, !(POP(@0x32F) < POP(@0x32C)))

# Stack: [@0x32F 0x0 [0x0 | @0x391] @0x23C [0x2B5E3AF16B1880000 | @0x235] [:label9 | :label13] [:label13 | @0x13]]
0x338	SWAP1
0x339	DUP1
0x33A	MSTORE(POP(0x0), POP(0x0))
0x33B	PUSH(0x2)
0x33D	SWAP1
0x33E	DUP2
0x340	PUSH(0x0)
0x342	DUP1
0x349	DUP1
0x34A	CODECOPY(POP(0x0), 0x45B, 0x20)
0x34B	DUP1
0x34C	PUSH(MLOAD(POP(0x0)))
0x34D	SWAP1
0x34E	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x353	PUSH(SLOAD(0x3))
0x354	SWAP1
0x355	PUSH(POP(0x2) * SLOAD(POP(@0x34C) + POP(0x2) * POP(@0x32F)))
0x356	SWAP1
0x35C	JUMPI(:label12, !(POP(@0x353) > POP(@0x355)))

# Stack: [[0x0 | @0x391] @0x23C [@0x235 | 0x2B5E3AF16B1880000] [:label9 | :label13] [@0x13 | :label13]]
0x35F	PUSH(SLOAD(0x1))
0x360	PUSH(0x0)
0x362	DUP1
0x363	PUSH(SLOAD(POP(0x0)))
0x364	PUSH(0x32)
0x366	SWAP2
0x367	SWAP1
0x368	DUP2
0x36E	JUMPI(0x2, !(POP(@0x35F) < POP(@0x363)))

# Stack: [@0x35F 0x0 0x32 [0x0 | @0x391] @0x23C [0x2B5E3AF16B1880000 | @0x235] [:label9 | :label13] [:label13 | @0x13]]
0x36F	DUP2
0x370	PUSH(SLOAD(POP(0x0)))
0x373	PUSH(SLOAD(0x1))
0x374	PUSH(0x2)
0x376	SWAP2
0x377	SWAP1
0x378	SWAP2
0x37A	PUSH(0x0)
0x37C	DUP1
0x383	DUP1
0x384	CODECOPY(POP(0x0), 0x45B, 0x20)
0x385	DUP1
0x386	PUSH(MLOAD(POP(0x0)))
0x387	SWAP1
0x388	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x38A	PUSH(SLOAD(POP(@0x386) + POP(0x2) * POP(@0x35F)))
0x38B	SWAP3
0x38C	SWAP1
0x38D	SWAP4
0x391	PUSH(0x62 * POP(@0x38A) / POP(0x32))
0x392	SWAP4
0x393	POP()
0x394	SWAP1
0x395	SWAP2
0x396	DUP2
0x39C	JUMPI(0x2, !(POP(@0x373) < POP(@0x370)))

# Stack: [@0x373 0x0 @0x391 @0x23C [@0x235 | 0x2B5E3AF16B1880000] [:label9 | :label13] [@0x13 | :label13]]
0x39F	PUSH(MLOAD(0x40))
0x3A0	PUSH(0x2)
0x3A2	SWAP2
0x3A3	SWAP1
0x3A4	SWAP2
0x3A6	PUSH(0x0)
0x3A8	DUP1
0x3AF	DUP1
0x3B0	CODECOPY(POP(0x0), 0x43B, 0x20)
0x3B1	DUP1
0x3B2	PUSH(MLOAD(POP(0x0)))
0x3B3	SWAP1
0x3B4	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3BF	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(POP(@0x3B2) + POP(0x2) * POP(@0x373)))
0x3C0	SWAP2
0x3C1	SWAP1
0x3C2	DUP4
0x3C3	SWAP1
0x3C4	DUP3
0x3C5	DUP2
0x3C6	DUP2
0x3C7	DUP2
0x3C8	DUP6
0x3C9	DUP9
0x3CA	DUP4
0x3CB	PUSH(CALL(POP(0x0), POP(@0x3BF), POP(@0x391), POP(@0x39F), POP(0x0), POP(@0x39F), POP(0x0)))
0x3CC	POP()
0x3CD	POP()
0x3CE	DUP2
0x3D2	PUSH(SLOAD(0x1))
0x3D3	SWAP2
0x3D4	SWAP3
0x3D5	POP()
0x3D6	DUP2
0x3D8	PUSH(!(POP(@0x3D2) < SLOAD(POP(0x0))))
0x3D9	SWAP1
0x3DA	POP()
0x3DE	JUMPI(0x2, POP(@0x3D8))

# Stack: [@0x3D2 0x0 @0x391 @0x23C [@0x235 | 0x2B5E3AF16B1880000] [:label13 | :label9] [:label13 | @0x13]]
0x3DF	SWAP1
0x3E0	DUP1
0x3E1	MSTORE(POP(0x0), POP(0x0))
0x3E2	PUSH(0x2)
0x3E4	SWAP1
0x3E5	DUP2
0x3E7	PUSH(0x0)
0x3E9	DUP1
0x3F0	DUP1
0x3F1	CODECOPY(POP(0x0), 0x45B, 0x20)
0x3F2	DUP1
0x3F3	PUSH(MLOAD(POP(0x0)))
0x3F4	SWAP1
0x3F5	MSTORE(POP(0x0), MLOAD(POP(0x0)))
0x3F7	PUSH(SLOAD(POP(@0x3F3) + POP(0x2) * POP(@0x3D2)))
0x3F8	PUSH(0x3)
0x3FA	DUP1
0x3FB	PUSH(SLOAD(POP(0x3)))
0x3FC	SWAP1
0x3FD	SWAP1
0x3FE	SWAP3
0x3FF	PUSH(POP(0x2) * POP(@0x3F7))
0x400	SWAP1
0x401	PUSH(POP(@0x3FB) - POP(@0x3FF))
0x402	SWAP1
0x403	SSTORE(POP(0x3), POP(@0x401))
0x404	PUSH(0x1)
0x406	DUP1
0x408	DUP1
0x409	PUSH(POP(0x1) + SLOAD(POP(0x1)))
0x40A	SWAP1
0x40B	SSTORE(POP(0x1), POP(@0x409))
0x40F	JUMP(:label24)

:label25
# Stack: [:label13 @0x13]
0x413	PUSH(SLOAD(0x4))
0x416	PUSH(SLOAD(0x2))
0x419	PUSH(MLOAD(0x40))
0x421	PUSH(0x2 ** 0xA0 - 0x1)
0x422	SWAP1
0x423	SWAP1
0x424	SWAP3
0x425	PUSH(POP(@0x421) & POP(@0x413))
0x426	SWAP2
0x427	PUSH(0x0)
0x429	SWAP2
0x42A	SWAP1
0x42B	DUP3
0x42C	DUP2
0x42D	DUP2
0x42E	DUP2
0x42F	DUP6
0x430	DUP9
0x431	DUP4
0x432	PUSH(CALL(POP(0x0), POP(@0x425), POP(@0x416), POP(@0x419), POP(0x0), POP(@0x419), POP(0x0)))
0x433	POP()
0x434	POP()
0x435	POP()
0x438	SSTORE(0x2, POP(0x0))
0x439	POP()
0x43A	JUMP(POP(:label13))


