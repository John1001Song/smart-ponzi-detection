# Stack: []
0x4	MSTORE(0x40, 0x60)
0xA	JUMPI(:label0, !CALLDATASIZE())

# Stack: []
0x13	PUSH(CALLDATALOAD(0x0) / 0x2 ** 0xE0)
0x19	DUP1
0x1E	JUMPI(:label8, POP(@0x13) == 0x6637CD9)

# Stack: [@0x13]
0x1F	DUP1
0x29	JUMPI(:label10, 0x1ED24195 == POP(@0x13))

# Stack: [@0x13]
0x2A	DUP1
0x34	JUMPI(:label11, 0x35548C02 == POP(@0x13))

# Stack: [@0x13]
0x35	DUP1
0x3F	JUMPI(:label12, 0x3A4B66F1 == POP(@0x13))

# Stack: [@0x13]
0x40	DUP1
0x4A	JUMPI(:label13, 0x3A76A282 == POP(@0x13))

# Stack: [@0x13]
0x4B	DUP1
0x55	JUMPI(:label14, 0xA37330EA == POP(@0x13))

# Stack: [@0x13]
0x56	DUP1
0x60	JUMPI(:label16, 0xA6A1858F == POP(@0x13))

# Stack: [@0x13]
0x61	DUP1
0x6B	JUMPI(:label18, 0xAE249F2B == POP(@0x13))

# Stack: [@0x13]
0x6C	DUP1
0x76	JUMPI(:label19, 0xECB5FFF6 == POP(@0x13))

# Stack: [@0x13]
0x77	DUP1
0x81	JUMPI(:label20, 0xEFF631CF == POP(@0x13))

# Stack: [@0x13]
0x82	DUP1
0x8C	JUMPI(:label21, 0xF4FA6C1D == POP(@0x13))

:label0
# Stack: []
0x8E	PUSH(:label7)

# Stack: [:label7]
0x92	PUSH(0x0)
0x94	PUSH(0x0)
0x96	PUSH(0x0)
0xA6	JUMPI(:label3, !!(NUMBER() - SLOAD(0x4) < SLOAD(0x2)))

# Stack: [0x0 0x0 0x0 :label7]
0xA9	PUSH(SLOAD(0x3))
0xAA	PUSH(0x0)
0xAC	SWAP3
0xAD	POP()
0xAE	PUSH(0x64)
0xB0	PUSH(0xA)
0xB2	SWAP1
0xB3	SWAP2
0xB5	PUSH(POP(@0xA9) * POP(0xA) / POP(0x64))
0xB6	SWAP2
0xB7	POP()
0xBA	PUSH(SLOAD(0x1))
0xBD	PUSH(SLOAD(0x3))
0xC0	PUSH(MLOAD(0x40))
0xC8	PUSH(0x2 ** 0xA0 - 0x1)
0xC9	SWAP1
0xCA	SWAP2
0xCB	PUSH(POP(@0xBA) & POP(@0xC8))
0xCC	SWAP1
0xCD	SWAP1
0xCE	DUP5
0xCF	SWAP1
0xD0	PUSH(POP(@0xBD) - POP(@0xB5))
0xD1	DUP1
0xD6	PUSH(0x8FC * !POP(@0xD0))
0xD7	SWAP2
0xD8	PUSH(0x0)
0xDA	DUP2
0xDB	DUP2
0xDC	DUP2
0xDD	DUP6
0xDE	DUP9
0xDF	DUP9
0xE0	PUSH(CALL(POP(@0xD6), POP(@0xCB), POP(@0xD0), POP(@0xC0), POP(0x0), POP(@0xC0), POP(0x0)))
0xE1	SWAP7
0xE2	POP()
0xE3	POP()
0xE4	POP()
0xE5	POP()
0xE6	POP()

# Stack: [0x0 @0xB5 @0xE0 :label7]
0xEA	PUSH(SLOAD(0x1))
0xED	PUSH(SLOAD(0x3))
0xEE	PUSH(0x40)
0xF0	DUP1
0xF1	PUSH(MLOAD(POP(0x40)))
0xF9	PUSH(0x2 ** 0xA0 - 0x1)
0xFA	SWAP1
0xFB	SWAP3
0xFF	DUP2
0x101	MSTORE(POP(@0xF1) + 0x20, POP(@0xEA) & POP(@0xF9))
0x102	SWAP1
0x103	DUP5
0x104	SWAP1
0x106	DUP2
0x107	DUP2
0x109	MSTORE(POP(0x40) + POP(@0xF1), POP(@0xED) - POP(@0xB5))
0x10D	DUP2
0x10F	MSTORE(POP(@0xF1) + 0x60, NUMBER())
0x110	PUSH(0x80)
0x112	DUP1
0x113	DUP4
0x114	MSTORE(POP(@0xF1), POP(0x80))
0x115	PUSH(0xB)
0x117	SWAP1
0x118	DUP4
0x11A	MSTORE(POP(@0xF1) + POP(0x80), POP(0xB))
0x13E	DUP2
0x140	MSTORE(POP(@0xF1) + 0xA0, 0x4D61747468657720776F6E000000000000000000000000000000000000000000)
0x141	PUSH(MLOAD(POP(0x40)))
0x142	PUSH(0x8F6107EF3DE9539E7CB9ADB97CE86A897F47E89A448C7F7AE5D4A76025978B09)
0x163	SWAP2
0x164	DUP2
0x165	SWAP1
0x169	PUSH(0xC0 + POP(@0xF1) - POP(@0x141))
0x16A	SWAP1
0x16B	LOG1(POP(@0x141), POP(@0x169), POP(0x8F6107EF3DE9539E7CB9ADB97CE86A897F47E89A448C7F7AE5D4A76025978B09))
0x16C	PUSH(:label1)
0x172	JUMP(:label22)

:label1
# Stack: [0x0 @0xB5 @0xE0 :label7]
0x17E	JUMPI(:label2, !(0xFF & SLOAD(0x5)))

# Stack: [0x0 @0xB5 @0xE0 :label7]
0x18B	SELFDESTRUCT(0x2 ** 0xA0 - 0x1 & SLOAD(0x1))

:label2
# Stack: [0x0 @0xB5 @0xE0 :label7]
0x190	JUMP(:label6)

# Stack: []
0x191	PUSH(:label6)

:label3
# Stack: [0x0 0x0 0x0 :label7]
0x1A9	JUMPI(:label4, !(CALLVALUE() < SLOAD(0x3) + 0x16345785D8A0000))

# Stack: [0x0 0x0 0x0 :label7]
0x1AD	JUMP(0x0)

:label4
# Stack: [0x0 0x0 0x0 :label7]
0x1B1	PUSH(SLOAD(0x3))
0x1B4	PUSH(MLOAD(0x40))
0x1BE	PUSH(CALLER() & 0x2 ** 0xA0 - 0x1)
0x1BF	SWAP2
0x1C0	DUP1
0x1C5	PUSH(0x8FC * !POP(@0x1B1))
0x1C6	SWAP2
0x1C7	PUSH(0x0)
0x1C9	DUP2
0x1CA	DUP2
0x1CB	DUP2
0x1CC	DUP6
0x1CD	DUP9
0x1CE	DUP9
0x1CF	PUSH(CALL(POP(@0x1C5), POP(@0x1BE), POP(@0x1B1), POP(@0x1B4), POP(0x0), POP(@0x1B4), POP(0x0)))
0x1D0	SWAP4
0x1D1	POP()
0x1D2	POP()
0x1D3	POP()
0x1D4	POP()
0x1D5	SWAP1
0x1D6	POP()
0x1D7	PUSH(:label5)
0x1DD	JUMP(:label22)

:label5
# Stack: [@0x1CF 0x0 0x0 :label7]
0x1E1	PUSH(SLOAD(0x1))
0x1E4	PUSH(SLOAD(0x3))
0x1E8	PUSH(0x40)
0x1EA	DUP1
0x1EB	PUSH(MLOAD(POP(0x40)))
0x1F3	PUSH(0x2 ** 0xA0 - 0x1)
0x1F4	SWAP1
0x1F5	SWAP3
0x1F9	DUP2
0x1FB	MSTORE(POP(@0x1EB) + 0x20, POP(@0x1E1) & POP(@0x1F3))
0x1FC	DUP2
0x1FD	DUP2
0x1FE	PUSH(POP(0x40) + POP(@0x1EB))
0x1FF	SWAP1
0x200	SWAP1
0x201	SWAP2
0x202	MSTORE(POP(@0x1FE), POP(@0x1E4))
0x205	DUP2
0x207	MSTORE(POP(@0x1EB) + 0x60, SLOAD(0x2))
0x208	PUSH(0x80)
0x20A	DUP1
0x20B	DUP4
0x20C	MSTORE(POP(@0x1EB), POP(0x80))
0x20D	PUSH(0xF)
0x20F	SWAP1
0x210	DUP4
0x212	MSTORE(POP(@0x1EB) + POP(0x80), POP(0xF))
0x236	DUP2
0x238	MSTORE(POP(@0x1EB) + 0xA0, 0x7374616B6520696E637265617365640000000000000000000000000000000000)
0x239	PUSH(MLOAD(POP(0x40)))
0x23A	PUSH(0x759A27537A40431BCB5D9C371AC024E9BA77FA5F3D3C592BC7F3321FC257DFB1)
0x25B	SWAP2
0x25C	DUP2
0x25D	SWAP1
0x261	PUSH(0xC0 + POP(@0x1EB) - POP(@0x239))
0x262	SWAP1
0x263	LOG1(POP(@0x239), POP(@0x261), POP(0x759A27537A40431BCB5D9C371AC024E9BA77FA5F3D3C592BC7F3321FC257DFB1))

:label6
# Stack: [[0x0 | @0x1CF] [@0xB5 | 0x0] [@0xE0 | 0x0] :label7]
0x266	POP()
0x267	POP()
0x268	POP()
0x269	JUMP(POP(:label7))

:label7
# Stack: []
0x26B	STOP()

:label8
# Stack: [@0x13]
0x271	JUMPI(0x0, CALLVALUE())

# Stack: [@0x13]
0x272	PUSH(:label9)
0x278	JUMP(:label23)

:label9
# Stack: [[@0x3FE | @0x4BD | 0x16345785D8A0000 | @0x42D | 0x0 | @0x411 | 0xA | @0x405] [:label9 | :label9 | :label9 | @0x13 | :label9]]
0x27A	PUSH(0x40)
0x27C	DUP1
0x27D	PUSH(MLOAD(POP(0x40)))
0x27E	SWAP2
0x27F	DUP3
0x280	MSTORE(POP(@0x27D), POP())
0x281	PUSH(MLOAD(POP(0x40)))
0x282	SWAP1
0x283	DUP2
0x284	SWAP1
0x288	PUSH(0x20 + POP(@0x27D) - POP(@0x281))
0x289	SWAP1
0x28A	RETURN(POP(@0x281), POP(@0x288))

:label10
# Stack: [@0x13]
0x290	JUMPI(0x0, CALLVALUE())

# Stack: [@0x13]
0x291	PUSH(:label9)
0x297	JUMP(:label25)

:label11
# Stack: [@0x13]
0x2AF	JUMPI(0x0, CALLVALUE())

# Stack: [@0x13]
0x2B0	PUSH(:label9)
0x2B6	JUMP(:label26)

:label12
# Stack: [@0x13]
0x2CE	JUMPI(0x0, CALLVALUE())

# Stack: [@0x13]
0x2CF	PUSH(:label9)
0x2D5	JUMP(:label27)

:label13
# Stack: [@0x13]
0x2ED	JUMPI(0x0, CALLVALUE())

# Stack: [@0x13]
0x2EE	PUSH(:label9)
0x2F4	JUMP(:label28)

:label14
# Stack: [@0x13]
0x30C	JUMPI(0x0, CALLVALUE())

# Stack: [@0x13]
0x30D	PUSH(:label15)
0x313	JUMP(:label30)

:label15
# Stack: [@0x44A @0x13]
0x315	PUSH(0x40)
0x317	DUP1
0x318	PUSH(MLOAD(POP(0x40)))
0x319	SWAP2
0x31C	DUP2
0x31D	MSTORE(POP(@0x318), !!POP(@0x44A))
0x31E	PUSH(MLOAD(POP(0x40)))
0x31F	SWAP1
0x320	DUP2
0x321	SWAP1
0x325	PUSH(0x20 + POP(@0x318) - POP(@0x31E))
0x326	SWAP1
0x327	RETURN(POP(@0x31E), POP(@0x325))

:label16
# Stack: [@0x13]
0x32D	JUMPI(0x0, CALLVALUE())

# Stack: [@0x13]
0x32E	PUSH(:label17)
0x334	JUMP(:label31)

:label17
# Stack: [@0x45A :label17 @0x13]
0x336	PUSH(0x40)
0x338	DUP1
0x339	PUSH(MLOAD(POP(0x40)))
0x341	PUSH(0x2 ** 0xA0 - 0x1)
0x342	SWAP1
0x343	SWAP3
0x345	DUP2
0x346	MSTORE(POP(@0x339), POP(@0x45A) & POP(@0x341))
0x347	PUSH(MLOAD(POP(0x40)))
0x348	SWAP1
0x349	DUP2
0x34A	SWAP1
0x34E	PUSH(0x20 + POP(@0x339) - POP(@0x347))
0x34F	SWAP1
0x350	RETURN(POP(@0x347), POP(@0x34E))

:label18
# Stack: [@0x13]
0x356	JUMPI(0x0, CALLVALUE())

# Stack: [@0x13]
0x357	PUSH(:label7)
0x35D	JUMP(:label32)

:label19
# Stack: [@0x13]
0x365	JUMPI(0x0, CALLVALUE())

# Stack: [@0x13]
0x366	PUSH(:label9)
0x36C	JUMP(:label34)

:label20
# Stack: [@0x13]
0x384	JUMPI(0x0, CALLVALUE())

# Stack: [@0x13]
0x385	PUSH(:label7)
0x38A	PUSH(CALLDATALOAD(0x4))
0x38E	JUMP(:label35)

:label21
# Stack: [@0x13]
0x396	JUMPI(0x0, CALLVALUE())

# Stack: [@0x13]
0x397	PUSH(:label9)
0x39D	JUMP(:label37)

:label22
# Stack: [[:label1 | :label5] [0x0 | @0x1CF] [@0xB5 | 0x0] [@0xE0 | 0x0] :label7]
0x3BE	SSTORE(0x3, BALANCE(0x2 ** 0xA0 - 0x1 & ADDRESS()))
0x3C4	SSTORE(0x4, SLOAD(0x6))
0x3C8	SSTORE(0x2, NUMBER())
0x3C9	PUSH(0x1)
0x3CB	DUP1
0x3E4	PUSH(0x1000000000000000000000000)
0x3F3	DUP1
0x3F6	PUSH(POP(0x1000000000000000000000000) * CALLER() / POP(0x1000000000000000000000000) | ~0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF & SLOAD(POP(0x1)))
0x3F7	SWAP1
0x3F8	SSTORE(POP(0x1), POP(@0x3F6))

# Stack: [[:label1 | :label5] [0x0 | @0x1CF] [@0xB5 | 0x0] [@0xE0 | 0x0] :label7]
0x3FA	JUMP(POP())

:label23
# Stack: [:label9 @0x13]
0x3FE	PUSH(SLOAD(0x6))

:label24
# Stack: [[@0x42D | 0x0 | @0x3FE] [:label9 | :label9] @0x13]
0x400	SWAP1
0x401	JUMP(POP())

:label25
# Stack: [:label9 @0x13]
0x405	PUSH(SLOAD(0x4))

# Stack: [@0x405 :label9 @0x13]
0x407	SWAP1
0x408	JUMP(POP(:label9))

:label26
# Stack: [:label9 @0x13]
0x40A	PUSH(0xA)
0x40C	DUP2
0x40D	JUMP(POP(:label9))

:label27
# Stack: [:label9 @0x13]
0x411	PUSH(SLOAD(0x3))
0x412	DUP2
0x413	JUMP(POP(:label9))

:label28
# Stack: [:label9 @0x13]
0x415	PUSH(0x0)
0x424	JUMPI(:label29, !(SLOAD(0x2) + SLOAD(0x4) > NUMBER()))

# Stack: [0x0 :label9 @0x13]
0x42D	PUSH(SLOAD(0x2) + SLOAD(0x4) - NUMBER())
0x42E	SWAP1
0x42F	POP()
0x433	JUMP(:label24)

# Stack: []
0x434	PUSH(:label24)

:label29
# Stack: [0x0 :label9 @0x13]
0x439	POP()
0x43A	PUSH(0x0)
0x43F	JUMP(:label24)

:label30
# Stack: [:label15 @0x13]
0x44A	PUSH(0xFF & SLOAD(0x5))

# Stack: [@0x44A :label15 @0x13]
0x44C	SWAP1
0x44D	JUMP(POP(:label15))

:label31
# Stack: [:label17 @0x13]
0x45A	PUSH(0x2 ** 0xA0 - 0x1 & SLOAD(0x1))
0x45B	DUP2
0x45C	JUMP(POP(:label17))

:label32
# Stack: [:label7 @0x13]
0x460	PUSH(SLOAD(0x0))
0x461	PUSH(CALLER())
0x469	PUSH(0x2 ** 0xA0 - 0x1)
0x46A	SWAP1
0x46B	DUP2
0x46C	PUSH(POP(@0x469) & POP(@0x461))
0x46D	SWAP1
0x473	JUMPI(:label33, POP(@0x460) & POP(@0x469) == POP(@0x46C))

# Stack: [:label7 @0x13]
0x477	JUMP(0x0)

:label33
# Stack: [:label7 @0x13]
0x479	PUSH(0x5)
0x47B	DUP1
0x483	PUSH(0x1 | ~0xFF & SLOAD(POP(0x5)))
0x484	SWAP1
0x485	SSTORE(POP(0x5), POP(@0x483))

# Stack: [:label7 @0x13]
0x488	JUMP(POP(:label7))

:label34
# Stack: [:label9 @0x13]
0x48A	PUSH(0x16345785D8A0000)
0x493	DUP2
0x494	JUMP(POP(:label9))

:label35
# Stack: [@0x38A :label7 @0x13]
0x498	PUSH(SLOAD(0x0))
0x499	PUSH(CALLER())
0x4A1	PUSH(0x2 ** 0xA0 - 0x1)
0x4A2	SWAP1
0x4A3	DUP2
0x4A4	PUSH(POP(@0x4A1) & POP(@0x499))
0x4A5	SWAP1
0x4AB	JUMPI(:label36, POP(@0x498) & POP(@0x4A1) == POP(@0x4A4))

# Stack: [@0x38A :label7 @0x13]
0x4AF	JUMP(0x0)

:label36
# Stack: [@0x38A :label7 @0x13]
0x4B1	PUSH(0x6)
0x4B3	DUP1
0x4B4	SWAP1
0x4B5	SSTORE(POP(0x6), POP(@0x38A))

# Stack: [@0x38A :label7 @0x13]
0x4B8	POP()
0x4B9	JUMP(POP(:label7))

:label37
# Stack: [:label9 @0x13]
0x4BD	PUSH(SLOAD(0x2))
0x4BE	DUP2
0x4BF	JUMP(POP(:label9))


